##begin config
basename PThread
libbase PThreadBase
version 2.0
##end config
##begin cdef
#include <exec/semaphores.h>
#include <semaphore.h>
#include <pthread.h>
##end cdef
##begin functionlist
int pthread_create(pthread_t* thread, const pthread_attr_t* attr, void* (*func) (void*), void* arg)
int pthread_cancel(pthread_t thread)
int pthread_equal(pthread_t t1, pthread_t t2)
int pthread_join(pthread_t thread, void** exit_value)
pthread_t pthread_self(void)
int pthread_suspend_np(pthread_t thread)
int pthread_continue_np(pthread_t thread)
int pthread_setcancelstate(int newstate, int* oldstate)
int pthread_setcanceltype(int type, int* oldtype)
int pthread_attr_destroy(pthread_attr_t* attr)
int pthread_attr_init(pthread_attr_t* attr)
int pthread_attr_setstacksize(pthread_attr_t* attr, size_t stacksize)
int pthread_cond_destroy(pthread_cond_t* cond)
int pthread_cond_init(pthread_cond_t* cond, const pthread_condattr_t* attr)
int pthread_cond_signal(pthread_cond_t* cond)
int pthread_cond_timedwait(pthread_cond_t* cond, pthread_mutex_t* mutex, const struct timespec* abstime)
int pthread_mutex_init(pthread_mutex_t* mutex, const pthread_mutexattr_t* attr)
int pthread_mutex_destroy(pthread_mutex_t* mutex)
int pthread_mutex_lock(pthread_mutex_t* mutex)
int pthread_mutex_unlock(pthread_mutex_t* mutex)
int pthread_mutexattr_destroy(pthread_mutexattr_t* attr)
int pthread_mutexattr_init(pthread_mutexattr_t* attr)
int pthread_mutexattr_settype(pthread_mutexattr_t* attr, int type)
int sem_destroy(sem_t* sem)
int sem_init(sem_t* sem, int shared, unsigned int value)
int sem_post(sem_t* sem)
int sem_wait(sem_t* sem)
void pthread_exit(void * a)
void *pthread_getspecific(pthread_key_t k)
int   pthread_setspecific(pthread_key_t k, const void * s)
int   pthread_key_create(pthread_key_t * k , void (*f)(void *))
int   pthread_cond_broadcast(pthread_cond_t * c)
int   pthread_cond_wait(pthread_cond_t * c, pthread_mutex_t * m)
.version 2
int pthread_mutex_trylock(pthread_mutex_t* mutex)
##end functionlist
