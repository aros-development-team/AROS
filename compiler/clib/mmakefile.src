# $Id$
include $(TOP)/config/make.cfg

#
#   This is a rather special include file. It builds both a shared library
#   and a link library from the same source, with only a small amount of
#   overlap.
#
USER_CFLAGS :=	-Iinclude -I$(TOP)/rom/exec

# We are trying to build:
#   $(AROS_LIBS)/arosc.library	    from $(SHARED)
#   $(AROS_LIB)/libarosc.a	    from $(COMMON) and $(STATIC)
#   $(AROS_LIB)/libarosc_shared.a   from $(COMMON) and $(STUBS)
#
#   Note that $(SHARED) and $(STATIC) are the same group of files, but
#   compiled slightly differently.
#
#   It turns out that some of $(SHARED) refer to things in $(COMMON), so
#   I've put that into the arosc.library as well.
MODULE	    :=	arosc.library
STATIC_LIB  :=	$(AROS_LIB)/libarosc.a
SHARED_LIB  :=	$(AROS_LIB)/libarosc_shared.a

# Lists of files
#   - Common always exist in the link library.

COMMON	:= \
	bcmp \
	bcopy \
	bzero \
	longjmp \
	memchr \
	memcmp \
	memcpy \
	memmove \
	memset \
	putchar \
	setjmp \
	stpcpy \
	strcasecmp \
	strcat \
	strchr \
	strcmp \
	strcpy \
	strcspn \
	strdup \
	strlen \
	strncasecmp \
	strncat \
	strncmp \
	strncpy \
	strpbrk \
	strrchr \
	strrev \
	strspn \
	strstr \
	strtod \
	strtok
	

#   - Shared are in either the shared linklib, or the arosc.library module
SHARED	:= \
	__assert \
	__env \
	__ioerr2errno \
	__isinf \
	__open \
	__rand48_misc \
	__stat \
	__stdio \
	__vcformat \
	__vcscan \
	abort \
	abs \
	access \
	asctime \
	atexit \
	atof \
	atoi \
	atol \
	bsearch \
	calloc \
	chmod \
	clearerr \
	ctime \
	clock \
	close \
	closedir \
	creat \
	ctype \
	difftime \
	drand48 \
	dup \
	dup2 \
	erand48 \
	errno \
	exit \
	fclose \
	fdopen \
	feof \
	ferror \
	fflush \
	fgetc \
	fgetpos \
	fgets \
	fileno \
	fopen \
	fprintf \
	fscanf \
	fputc \
	fputs \
	fread \
	free \
	freopen \
	fseek \
	fsetpos \
	fstat \
	ftell \
	ftruncate \
	fwrite \
	gcvt \
	getcwd \
	getenv \
	gettimeofday \
	gmtime \
	isatty \
	isinf \
	jrand48 \
	labs \
	lcong48 \
	localtime \
	lrand48 \
	lseek \
	malloc \
	mktemp \
	mkdir \
	mrand48 \
	nrand48 \
	open \
	opendir \
	perror \
	printf \
	putenv \
	puts \
	qsort \
	rand \
	random \
	read \
	readdir \
	realloc \
	remove \
	rename \
	rewind \
	rewinddir \
	scanf \
	seed48 \
	seekdir \
	setbuf \
	setenv \
	setlinebuf \
	setvbuf \
	snprintf \
	sprintf \
	srand48 \
	sscanf \
	stat \
	stch_l \
	stcu_d \
	strftime \
	strerror \
	strtol \
	strtoul \
	system \
	telldir \
	time	 \
	truncate \
	ungetc \
	unlink \
	unsetenv \
	utime \
	utimes \
	vfprintf \
	vfscanf \
	vprintf \
	vscanf \
	vsnprintf \
	vsprintf \
	vsscanf \
	write

#   - The stubs are generated, and are in the shared link library.
STUBS   := $(wildcard $(OBJDIR)/stubs/*.o)

# Dependancies
DEPS := $(foreach f,$(COMMON),$(OBJDIR)/$(f).d) \
	$(foreach f,$(SHARED),$(OBJDIR)/static/$(f).d) \
	$(foreach f,$(SHARED),$(OBJDIR)/shared/$(f).d) \
	$(OBJDIR)/shared/arosc_init.d $(OBJDIR)/shared/arosc_endtag.d

STATIC_OBJ :=	$(foreach f,$(COMMON),$(OBJDIR)/$(f).o) \
		$(foreach f,$(SHARED),$(OBJDIR)/static/$(f).o)
SHARED_OBJ :=	$(foreach f,$(COMMON),$(OBJDIR)/$(f).o) \
		$(STUBS)
MODULE_OBJ :=	$(foreach f,$(COMMON) $(SHARED),$(OBJDIR)/shared/$(f).o)

# These are added to the link step of arosc.library
LIBS := -L$(AROS_LIB) -larosm -lautoinit
DEP_LIBS := arosm autoinit

%make_linklib_setup mmake=linklibs-clib

#MM- linklibs : linklibs-clib
#MM linklibs-clib : includes linklibs-mlib linklibs-autoinit \
#MM			clib-$(ARCH) clib-stubs

linklibs-clib : setup $(STATIC_LIB) $(SHARED_LIB) $(AROS_LIBS)/$(MODULE)

$(STATIC_LIB) : $(STATIC_OBJ)
	%mklib_q from=$^

$(SHARED_LIB) : $(SHARED_OBJ)
	%mklib_q from=$^

$(AROS_LIBS)/$(MODULE) : $(MODULE_OBJ)
	%link_module_q objs="$(OBJDIR)/shared/arosc_init.o $(MODULE_OBJ)" endtag="$(OBJDIR)/shared/arosc_endtag.o"

$(OBJDIR)/static/%.o : %.c
	%compile_q opt="$(CFLAGS) -include $(INCDIR)/libraries/arosc.h"

$(OBJDIR)/shared/%.o : %.c
	%compile_q opt="$(CFLAGS) -D_CLIB_KERNEL_ -include $(INCDIR)/libraries/arosc.h"

$(OBJDIR)/%.o : %.c
	%compile_q opt="$(CFLAGS) -include $(INCDIR)/libraries/arosc.h"

# Need to copy these files in from the machine dependant build.
$(OBJDIR)/shared/%jmp.o : $(OBJDIR)/%jmp.o
	@$(CP) $< $@

# The rules to create the dependancy files.
$(OBJDIR)/static/%.d : %.c
	%mkdepend_q flags=$(CFLAGS)

$(OBJDIR)/shared/%.d : %.c
	%mkdepend_q flags=$(CFLAGS)

$(OBJDIR)/%.d : %.c
	%mkdepend_q flags=$(CFLAGS)

#MM
setup :
	%mkdirs_q $(AROS_INCLUDES)/sys $(OBJDIR) $(OBJDIR)/static $(OBJDIR)/shared

#MM
check : $(TESTDIR)/snprint

$(TESTDIR)/snprintf : snprintf.c $(LIBDIR)/startup.o $(DEPLIBS)
	$(CC) -DTEST $(ILDFLAGS) $(LIBDIR)/startup.o $< -o $@ $(LIBS)

#MM
clean ::
	-$(RM) $(OBJDIR) *.err $(LIB)

%common
%include_deps

# Fix up the deps, these won't end up in $^, but they'll make it work.
$(AROS_LIBS)/$(MODULE) : $(OBJDIR)/shared/arosc_init.o $(OBJDIR)/shared/arosc_endtag.o
$(AROS_LIBS)/$(MODULE) : $(foreach f,$(DEP_LIBS),$(AROS_LIB)/lib$(f).a)
$(OBJDIR)/shared/arosc_init.o : $(AROS_INCLUDES)/sys/syscall.def

