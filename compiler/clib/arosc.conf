##begin config
version 43.0
libbase aroscbase
libbasetype struct aroscbase
libbasetypeextern struct aroscbase
options pertaskbase
##end config

##begin cdef
struct aroscbase;
struct arosc_userdata;
struct arosc_ctype;
#define _STDIO_H_NOMACRO
#include <stdio.h>
#include <stddef.h>
#include <stdlib.h>
#include <signal.h>
#include <termios.h>
#include <time.h>
#include <unistd.h>
#include <utime.h>
#include <dirent.h>
#include <wchar.h>
#include <regex.h>
#include <setjmp.h>
#include <sys/time.h>
#include <sys/times.h>
#include <sys/timeb.h>
#include <sys/stat.h>
#include <sys/mount.h>
#include <sys/utsname.h>
#include <sys/resource.h>
##end cdef

##begin cdefprivate
#include "arosc_gcc.h"
##end cdefprivate

##begin startup
#include "arosc_startup.c"
##end startup

##begin functionlist



int printf(const char * restrict format, ...)
int vprintf(const char * restrict format, va_list arg)




int puts(const char *s)











int rename(const char *from, const char *to)




int scanf(const char * restrict format, ...)
int vscanf(const char * restrict format, va_list arg)






void rewind(FILE *stream)


int remove(const char *filename)
void setbuf(FILE * restrict stream, char * restrict buf)
void setlinebuf(FILE *stream)



int access(const char *path, int mode)



char *getcwd(char *buf, size_t size)



int truncate(const char *path, off_t length)
int unlink(const char *path)


int creat(const char * filename, int mode)
int utime(const char *filename, const struct utimbuf *buf)
































char *mktemp(char *)


int mkdir(const char *path, mode_t mode)




void rewinddir(DIR *dir)



int gettimeofday(struct timeval * tv, struct timezone * tz)
int utimes(const char *file, const struct timeval tvp[2])



char *strerror(int n)






void perror(const char *s)










unsigned sleep(unsigned)





int sigaction(int, const struct sigaction *, struct sigaction *)
int sigaddset(sigset_t *, int)
int sigemptyset(sigset_t *)

int sigdelset(sigset_t *, int)
int sigfillset(sigset_t *)
int sigismember(const sigset_t *, int)
int sigpending(sigset_t *)
int sigprocmask(int, const sigset_t *, sigset_t *)
int sigsuspend(const sigset_t *)
char *tmpnam(char *s)

void __assert (const char *, const char *, unsigned int)













int getfsstat (struct statfs *, long, int)


int kill(pid_t, int)

int pclose(FILE *)
int mkstemp(char *)

int rmdir(const char *path)
uid_t getuid(void)
uid_t geteuid(void)


int chown(const char *path, uid_t owner, gid_t group)

ssize_t readlink(const char * restrict path, char * restrict buf, size_t bufsize)
struct passwd *getpwuid(uid_t uid)
struct group *getgrgid(gid_t gid)
gid_t getgid(void)
gid_t getegid(void)
struct passwd *getpwnam(const char *name)
void setpwent(void)
struct passwd *getpwent(void)
void endpwent(void)
int getgroups(int gidsetlen, gid_t *gidset)
struct group *getgrnam(const char *name)
void endgrent(void)
struct group *getgrent(void)
void setgrent(void)
int fchown(int fd, uid_t owner, gid_t group)

int link(const char *name1, const char *name2)
int symlink(const char *name1, const char *name2)
int mknod(const char *path, mode_t mode, dev_t dev)


pid_t getpgrp(void)


int setuid(uid_t uid)
int setgid(gid_t gid)




clock_t times(struct tms *buffer)


char *tempnam(const char *dir, const char *pfx)
FILE *tmpfile(void)





char *basename(char *)

char *dirname(char *)




















int regcomp(regex_t * __restrict, const char * __restrict, int)
size_t regerror(int, const regex_t * __restrict, char * __restrict, size_t)
int regexec(const regex_t * __restrict, const char * __restrict, size_t, regmatch_t * __restrict, int)
void regfree(regex_t *)







int statfs(const char *path, struct statfs *buf)

char *ttyname(int fd)
char *getlogin(void)

int uname(struct utsname *name)










void sharecontextwithchild(int share)
long sysconf(int name)





off_t ftello(FILE *stream)
long pathconf(const char *path, int name)

void sync()
int tcgetattr(int __fd, struct termios *__termios_p)
int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p)
speed_t cfgetispeed(const struct termios *__termios_p)
speed_t cfgetospeed(const struct termios *__termios_p)
int cfsetispeed(struct termios *__termios_p, speed_t speed)
int cfsetospeed(struct termios *__termios_p, speed_t speed)
struct arosc_userdata *__get_arosc_userdata(void)
.version 43


int setrlimit(int resource, const struct rlimit *rlp)







##end functionlist
