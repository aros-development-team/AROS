##begin config
version 43.0
libbase aroscbase
libbasetype struct aroscbase
libbasetypeextern struct aroscbase
options pertaskbase
##end config

##begin cdef
struct aroscbase;
struct arosc_userdata;
struct arosc_ctype;
#define _STDIO_H_NOMACRO
#include <stdio.h>
#include <stddef.h>
#include <stdlib.h>
#include <signal.h>
#include <termios.h>
#include <time.h>
#include <unistd.h>
#include <utime.h>
#include <dirent.h>
#include <wchar.h>
#include <regex.h>
#include <setjmp.h>
#include <sys/time.h>
#include <sys/times.h>
#include <sys/timeb.h>
#include <sys/stat.h>
#include <sys/mount.h>
#include <sys/utsname.h>
#include <sys/resource.h>
##end cdef

##begin cdefprivate
#include "arosc_gcc.h"
##end cdefprivate

##begin startup
#include "arosc_startup.c"
##end startup

##begin functionlist
FILE *fopen(const char * restrict filename, const char * restrict mode)
FILE *fdopen (int filedes, const char *mode)
int fclose(FILE *stream)
int printf(const char * restrict format, ...)
int vprintf(const char * restrict format, va_list arg)
int fprintf(FILE * restrict stream, const char * restrict format, ...)
int vfprintf(FILE * restrict stream, const char * restrict format, va_list arg)
int fputc(int c, FILE *stream)
.alias putc
int fputs(const char * restrict s, FILE * restrict stream)
int puts(const char *s)
int fflush(FILE *stream)
int fgetc(FILE *stream)
.alias getc
int ungetc(int c, FILE *stream)
char *fgets(char * restrict s, int n, FILE * restrict stream)
int feof(FILE *stream)
int ferror(FILE *stream)
int fileno(FILE *)
FILE *freopen(const char * restrict filename, const char * restrict mode, FILE * restrict stream)
void clearerr(FILE *stream)
size_t fread(void * restrict ptr, size_t size, size_t nmemb, FILE * restrict stream)
size_t fwrite(const void * restrict ptr, size_t size, size_t nmemb, FILE * restrict stream)
int rename(const char *from, const char *to)
int sprintf(char * restrict s, const char * restrict format, ...)
int vsprintf(char * restrict s, const char * restrict format, va_list arg)
int snprintf(char * restrict s, size_t n, const char * restrict format, ...)
int vsnprintf(char * restrict s, size_t n, const char * restrict format, va_list arg)
int scanf(const char * restrict format, ...)
int vscanf(const char * restrict format, va_list arg)
int fscanf(FILE * restrict stream, const char * restrict format, ...)
int vfscanf(FILE * restrict stream, const char * restrict format, va_list arg)
int sscanf(const char * restrict s, const char * restrict format, ...)
int vsscanf(const char * restrict s, const char * restrict format, va_list arg)
int fseek(FILE *stream, long int offset, int whence)
long int ftell(FILE *stream)
void rewind(FILE *stream)
int fgetpos(FILE * restrict stream, fpos_t * restrict pos)
int fsetpos(FILE *stream, const fpos_t *pos)
int remove(const char *filename)
void setbuf(FILE * restrict stream, char * restrict buf)
void setlinebuf(FILE *stream)
int setvbuf(FILE * restrict stream, char * restrict buf, int mode, size_t size)
int __vcformat (void * data, int (*outc)(int, void *), const char * format, va_list args)
int __vcscan (void * data, int (*getc)(void *),	int (*ungetc)(int, void *), const char * format, va_list args)
int access(const char *path, int mode)
int close(int fd)
int dup(int oldfd)
int dup2(int oldfd, int newfd)
char *getcwd(char *buf, size_t size)
int isatty(int fd)
off_t lseek(int filedes, off_t offset, int whence)
ssize_t read(int d, void *buf, size_t nbytes)
int truncate(const char *path, off_t length)
int unlink(const char *path)
ssize_t write(int fd, const void *buf, size_t nbytes)
int open(const char * filename, int flags, ...)
int creat(const char * filename, int mode)
int utime(const char *filename, const struct utimbuf *buf)
int abs(int j)
long labs(long j)
double atof(const char *nptr)
int atoi(const char *nptr)
long int atol(const char *nptr)
long int strtol(const char * restrict nptr, char ** restrict endptr, int base)
unsigned long int strtoul(const char * restrict nptr, char ** restrict endptr, int base)
double strtod(const char * restrict nptr, char ** restrict endptr)
int rand(void)
void srand(unsigned int seed)
double drand48(void)
double erand48(unsigned short int xsubi[3])
long int lrand48(void)
long int nrand48(unsigned short int xsubi[3])
long int mrand48(void)
long int jrand48(unsigned short int xsubi[3])
void srand48(long int seedval)
unsigned short int *seed48(unsigned short int seed16v[3])
void lcong48(unsigned short int param[7])
long random(void)
void srandom(unsigned seed)
char *initstate(unsigned seed, char *state, int n)
char *setstate(char *state)
void qsort(void * array, size_t count, size_t elementsize, int (*comparefunction)(const void * element1, const void * element2))
void *bsearch(const void * key, const void * base, size_t count, size_t size, int (*comparefunction)(const void *, const void *))




char *getenv(const char *name)
int setenv(const char *name, const char *value, int overwrite)
int putenv(const char *string)
char *mktemp(char *)
int system(const char *string)

int mkdir(const char *path, mode_t mode)
int stat(const char * restrict path, struct stat * restrict sb)
int fstat(int fd, struct stat *sb)
DIR *opendir(const char *filename)
struct dirent *readdir(DIR *dir)
void rewinddir(DIR *dir)
int closedir(DIR *dir)
long telldir(DIR *dir)
void seekdir(DIR *dir, off_t loc)
int gettimeofday(struct timeval * tv, struct timezone * tz)
int utimes(const char *file, const struct timeval tvp[2])


size_t strftime(char *, size_t, const char *, const struct tm *)
char *strerror(int n)
void exit(int code)
void abort(void)
int chmod(const char *path, mode_t mode)
struct tm *localtime(const time_t *)
time_t time(time_t *)
struct tm *gmtime(const time_t *)
void perror(const char *s)
char *ctime(const time_t *)
clock_t clock(void)
int atexit(void (*func)(void))
int pipe(int filedes[2])
int fcntl(int fd, int cmd, ...)
double difftime(time_t, time_t)
int ftruncate(int fd, off_t length)
mode_t umask(mode_t numask)
void unsetenv(const char *name)
char *asctime(const struct tm *)
unsigned sleep(unsigned)
int chdir(const char *path)

time_t mktime(struct tm *)
div_t div(int numer, int denom)
ldiv_t ldiv(long int numer, long int denom)
int sigaction(int, const struct sigaction *, struct sigaction *)
int sigaddset(sigset_t *, int)
int sigemptyset(sigset_t *)
int fchmod(int fildes, mode_t mode)
int sigdelset(sigset_t *, int)
int sigfillset(sigset_t *)
int sigismember(const sigset_t *, int)
int sigpending(sigset_t *)
int sigprocmask(int, const sigset_t *, sigset_t *)
int sigsuspend(const sigset_t *)
char *tmpnam(char *s)
void updatestdio(void)
void __assert (const char *, const char *, unsigned int)
lldiv_t lldiv(long long int numer, long long int denom)
long long int strtoll(const char * restrict nptr, char ** restrict endptr, int base)
unsigned long long int strtoull(const char * restrict nptr, char ** restrict endptr, int base)
int on_exit(void (*func)(int, void *), void *)
pid_t getpid(void)
FILE *popen(const char *, const char *)
int stcd_l(const char * in, long * lvalue)
int stch_l(const char * in, long * lvalue)
int stcl_d(char * out, long lvalue)
int stcl_h(char * out, long lvalue)
int stcl_o(char * out, long lvalue)
int stco_l(const char * in, long * lvalue)

int getfsstat (struct statfs *, long, int)
__sighandler_t *signal(int, __sighandler_t *)
void _exit(int)
int kill(pid_t, int)
char *setlocale(int category, const char *locale)
int pclose(FILE *)
int mkstemp(char *)
int execvp(const char *path, char *const argv[])
int rmdir(const char *path)
uid_t getuid(void)
uid_t geteuid(void)
int __arosc_nixmain(int (*main)(int argc, char *argv[]), int argc, char *argv[])

int chown(const char *path, uid_t owner, gid_t group)

ssize_t readlink(const char * restrict path, char * restrict buf, size_t bufsize)
struct passwd *getpwuid(uid_t uid)
struct group *getgrgid(gid_t gid)
gid_t getgid(void)
gid_t getegid(void)
struct passwd *getpwnam(const char *name)
void setpwent(void)
struct passwd *getpwent(void)
void endpwent(void)
int getgroups(int gidsetlen, gid_t *gidset)
struct group *getgrnam(const char *name)
void endgrent(void)
struct group *getgrent(void)
void setgrent(void)
int fchown(int fd, uid_t owner, gid_t group)
int fsync(int fd)
int link(const char *name1, const char *name2)
int symlink(const char *name1, const char *name2)
int mknod(const char *path, mode_t mode, dev_t dev)
pid_t getppid(void)
int execl(const char *path, const char *arg, ...)
pid_t getpgrp(void)

pid_t wait(int *status)
int setuid(uid_t uid)
int setgid(gid_t gid)


int getloadavg(double loadavg[], int n)
int raise(int)
clock_t times(struct tms *buffer)

char *strsep(char **, const char *)
char *tempnam(const char *dir, const char *pfx)
FILE *tmpfile(void)

struct tm *localtime_r(const time_t *, struct tm *)
struct tm *gmtime_r(const time_t *, struct tm *)
char *ctime_r(const time_t *, char *)
char *asctime_r(const struct tm *, char *)
char *basename(char *)
int dirfd(DIR *dir)
char *dirname(char *)
struct lconv *localeconv(void)



















int regcomp(regex_t * __restrict, const char * __restrict, int)
size_t regerror(int, const regex_t * __restrict, char * __restrict, size_t)
int regexec(const regex_t * __restrict, const char * __restrict, size_t, regmatch_t * __restrict, int)
void regfree(regex_t *)


int getchar(void)
char *gets(char *s)


int __get_default_file(int file_descriptor, long* file_handle)
int statfs(const char *path, struct statfs *buf)

char *ttyname(int fd)
char *getlogin(void)
int fchdir(int fd)
int uname(struct utsname *name)

int execve(const char *filename, char *const argv[], char *const envp[])
char *strptime(const char *s, const char *format, struct tm *tm)
pid_t vfork(void)
pid_t waitpid(pid_t pid, int *status, int options)
int execv(const char *path, char *const argv[])
int execlp(const char *file, const char *arg, ...)
int flock(int fd, int operation)
intmax_t strtoimax(const char *nptr, char **endptr, int base)
uintmax_t strtoumax(const char *nptr, char **endptr, int base)
void sharecontextwithchild(int share)
long sysconf(int name)
int lstat(const char *path, struct stat *sb)
void __arosc_program_startup(jmp_buf exitjmp, int *error_ptr)
void __arosc_program_end(void)
int nanosleep(const struct timespec *req, struct timespec *rem)
int fseeko(FILE *stream, off_t offset, int whence)
off_t ftello(FILE *stream)
long pathconf(const char *path, int name)
char *realpath(const char *path, char *resolved_path)
void sync()
int tcgetattr(int __fd, struct termios *__termios_p)
int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p)
speed_t cfgetispeed(const struct termios *__termios_p)
speed_t cfgetospeed(const struct termios *__termios_p)
int cfsetispeed(struct termios *__termios_p, speed_t speed)
int cfsetospeed(struct termios *__termios_p, speed_t speed)
struct arosc_userdata *__get_arosc_userdata(void)
.version 43

int getrlimit(int resource, struct rlimit *rlp)
int setrlimit(int resource, const struct rlimit *rlp)
void __arosc_set_environptr(char ***environptr)
int __arosc_gmtoffset(void)
int *__arosc_set_errorptr(int *errorptr)
void __arosc_set_exitjmp(jmp_buf exitjmp, jmp_buf previousjmp)
void __arosc_jmp2exit(int normal, int retcode)
int *__arosc_get_errorptr(void)
char ***__arosc_get_environptr(void)
##end functionlist
