# Make this point to the place where AROS is installed
include $(TOP)/config/make.cfg

LIBCOREDIR	:= ../include/libcore
LIBHEADER_SRC	:= $(LIBCOREDIR)/libheader.c
LIBTAIL_SRC	:= $(LIBCOREDIR)/libtail.c
USER_INCLUDES	:= -D_AROS -I. -I../include
LIBS		:= -L$(LIBDIR) -lamiga -larossupport -larosc
DEPLIBS 	:= $(LIBDIR)/libamiga.a $(LIBDIR)/libarossupport.a \
		    $(LIBDIR)/libarosc.a
SRCS		:= LibInit.c SampleFuncs.c
OBJS		:= libheader.o LibInit.o functable.o SampleFuncs.o libtail.o
LIB		:= $(SLIBDIR)/example.library

#MM
clean :
	$(RM) *.o $(LIB)

#MM setup : setup-clib
setup :
	@$(NOP)

#MM
setup-clib : make-dirs copy-scripts

make-dirs :
	@if $(TEST) ! -d $(SCRIPTDIR) ; then $(MKDIR) $(SCRIPTDIR) ; else true ; fi

copy-scripts : $(SCRIPTDIR)/genlibdefs.awk $(SCRIPTDIR)/genfunctable.awk \
	$(SCRIPTDIR)/moveifchanged \
	$(SCRIPTDIR)/genclib.awk $(SCRIPTDIR)/gendefines.awk \
	$(SCRIPTDIR)/genfd.awk $(SCRIPTDIR)/geninline.awk

$(SCRIPTDIR)/% : %
	$(CP) $< $@

#MM
libs : show-flags $(LIB)

show-flags :
	@echo "CFLAGS=$(CFLAGS)"

$(LIB) : $(OBJS) $(DEPLIBS)
	@echo "Creating $@..."
	@$(CC) $(ILDFLAGS) -o $@ $(OBJS) $(LIBS)
	@echo "Checking $@..."
	@$(CHECKUDS) $@

libheader.o : $(LIBHEADER_SRC) libdefs.h
	@echo "Compiling $< with -DLC_NO_OPENLIB..."
	@$(CC) $(CFLAGS) -DLC_NO_OPENLIB -DLC_NO_CLOSELIB -c $< -o $@

libtail.o : $(LIBTAIL_SRC) libdefs.h
	@echo "Compiling $<..."
	@$(CC) $(CFLAGS) -c $< -o $@

LibInit.o : LibInit.c intern.h libdefs.h
	@echo "Compiling $<..."
	@$(CC) $(CFLAGS) -c $< -o $@

functable.o : functable.c intern.h SampleFuncs.h
	@echo "Compiling $<..."
	@$(CC) $(CFLAGS) -c $< -o $@

SampleFuncs.o : SampleFuncs.c SampleFuncs.h intern.h libdefs.h
	@echo "Compiling $<..."
	@$(CC) $(CFLAGS) -c $< -o $@

libdefs.h : lib.conf ./genlibdefs.awk
	@echo "Generating $@..."
	@$(AWK) -f ./genlibdefs.awk $< > $@

functable.c : $(SRCS) ./genfunctable.awk
	@echo "Generating $@..."
	@$(AWK) -f ./genfunctable.awk $(SRCS) > $@

