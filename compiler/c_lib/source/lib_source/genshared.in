#!/bin/sh

AWK=@AWK@

case $1 in
    -libdefs )
        mode=libdefs
    ;;
    -functable )
        mode=functable
    ;;
    -fd )
        mode=fd
    ;;
    -proto )
        mode=proto
    ;;
    -pproto )
        mode=pproto
    ;;
    -clib )
        mode=clib
    ;;
    -pclib )
        mode=pclib
    ;;
     -inline )
         mode=inline
     ;;
    -defines )
        mode=defines
    ;;
    -pdefines )
        mode=pdefines
    ;;
#    -pragma )
#        mode=pragma
#    ;;
    -* )
        echo "Unknown option $1"
        exit 10
    ;;
    * )
        echo "Expecting operation mode as first argument"
        exit 10
esac

shift

prefix=.
confdir=.
output=""
scriptdir=`dirname $0`
libdefsfile=libdefs.h
debug=0
test=0
hasrt=0

while [ $# -ne 0 ] ; do
    case $1 in
        -prefix | --prefix )
            prefix="$2"
            shift
        ;;
	-libdefsfile )
	    libdefsfile="$2"
	    shift
	;;
        -output )
            output="$2"
            shift
        ;;
        -debug )
            debug=1
        ;;
        -test )
            test=1
        ;;
        -confdir )
            confdir="$2"
            shift
	;;
        -hasrt )
            hasrt=1
        ;;
        *.c )
            srcs="$srcs $1"
        ;;
    esac
    shift
done

if [ ! -f "$confdir/lib.conf" ]; then
    echo "Can't find lib.conf in $confdir"
    exit 10
fi

libname=`grep '^name' "$confdir/lib.conf" | sed 's/^name[^a-zA-Z_]*//'`
LIBNAME=`awk </dev/null 'BEGIN { print toupper("'$libname'"); }'`

case $mode in
    libdefs )
        if [ "x$output" = "x" ]; then
            outname="libdefs.h"
        else
            outname="$output"
        fi
        out="$prefix/$outname"
        $AWK -f "$scriptdir/genlibdefs.awk" lib.conf > $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
    functable )
        if [ "x$output" = "x" ]; then
            outname="functable.c"
        else
            outname="$output"
        fi
        out="$prefix/$outname"
        $AWK -f "$scriptdir/genfunctable.awk" $srcs > $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
    fd )
        echo "Regenerating fd files for $libname"
        if [ "x$output" = "x" ]; then
            outname="$libname"_lib.fd
        else
            outname="$output"
        fi
        if [ -d "$prefix/fd" ]; then
            out="$prefix/fd/$outname"
        else
            out="$prefix/$outname"
        fi
        $AWK -f "$scriptdir/genfd.awk" $srcs > $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
    proto )
        echo "Regenerating proto files for $libname"
        if [ "x$output" = "x" ]; then
            outname="$libname".h
        else
            outname="$output"
        fi
        if [ -d "$prefix/proto" ]; then
            out="$prefix/proto/$outname"
        else
            out="$prefix/$outname"
        fi
        echo "#ifndef PROTO_"$LIBNAME"_H" > $out.new
        echo "#define PROTO_"$LIBNAME"_H" >> $out.new
        echo >> $out.new
        echo "/*" >> $out.new
        echo "    Copyright 1995-2003 AROS - The Amiga Research OS" >> $out.new
        echo "    Automatically generated by $0" >> $out.new
        echo "*/" >> $out.new
        echo >> $out.new
        echo "#ifndef AROS_SYSTEM_H" >> $out.new
        echo "#   include <aros/system.h>" >> $out.new
        echo "#endif" >> $out.new
        echo >> $out.new
	if [ -f headers.tmpl ]; then
	    $AWK '
	    $1 == "##begin" && $2 == "proto" { doprint=1; next; }
	    $1 == "##end" && $2 == "proto" { doprint=0; next; }
	     { if (doprint) print; }
	    ' headers.tmpl >> $out.new
	fi
        echo "#include <clib/"$libname"_protos.h>" >> $out.new
        echo >> $out.new
        echo "#if defined(_AMIGA) && defined(__GNUC__)" >> $out.new
        echo "#   include <inline/"$libname".h>" >> $out.new
        echo "#else" >> $out.new
        echo "#   include <defines/"$libname".h>" >> $out.new
        echo "#endif" >> $out.new
        echo >> $out.new
        if [ $hasrt -ne 0 ]; then
            echo "#if defined(ENABLE_RT) && ENABLE_RT && !defined(ENABLE_RT_"$LIBNAME")" >> $out.new
            echo "#   define ENABLE_RT_"$LIBNAME" 1" >> $out.new
            echo "#   include <aros/rt.h>" >> $out.new
            echo "#endif" >> $out.new
            echo >> $out.new
        fi
        echo "#endif /* PROTO_"$LIBNAME"_H */" >> $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
    pproto )
        echo "Regenerating private proto files for $libname"
        if [ "x$output" = "x" ]; then
            outname="$libname"_private.h
        else
            outname="$output"
        fi
        if [ -d "$prefix/proto" ]; then
            out="$prefix/proto/$outname"
        else
            out="$prefix/$outname"
        fi
        echo "#ifndef PROTO_"$LIBNAME"_PRIVATE_H" > $out.new
        echo "#define PROTO_"$LIBNAME"_PRIVATE_H" >> $out.new
        echo >> $out.new
        echo "/*" >> $out.new
        echo "    Copyright 1995-2003 AROS - The Amiga Research OS" >> $out.new
        echo "    Automatically generated by $0" >> $out.new
        echo "*/" >> $out.new
        echo >> $out.new
        echo "#ifndef PROTO_"$LIBNAME"_H" >> $out.new
        echo "#   include <proto/"$libname".h>" >> $out.new
        echo "#endif" >> $out.new
        echo >> $out.new
        echo "#include <clib/"$libname"_private_protos.h>" >> $out.new
        echo "#include <defines/"$libname"_private.h>" >> $out.new
        echo >> $out.new
        echo "#endif /* PROTO_"$LIBNAME"_PRIVATE_H */" >> $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
    defines )
        echo "Regenerating defines files for $libname"
        if [ "x$output" = "x" ]; then
            outname="$libname".h
        else
            outname="$output"
        fi
        if [ -d "$prefix/defines" ]; then
            out="$prefix/defines/$outname"
        else
            out="$prefix/$outname"
        fi
        $AWK -v file=$libdefsfile -f $scriptdir/gendefines.awk $srcs > $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
    pdefines )
        echo "Regenerating private defines files for $libname"
        if [ "x$output" = "x" ]; then
            outname="$libname"_private.h
        else
            outname="$output"
        fi
        if [ -d "$prefix/defines" ]; then
            out="$prefix/defines/$outname"
        else
            out="$prefix/$outname"
        fi
        $AWK -v file=$libdefsfile -f $scriptdir/genpdefines.awk $srcs > $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
    clib )
        echo "Regenerating clib files for $libname"
        if [ "x$output" = "x" ]; then
            outname="$libname"_protos.h
        else
            outname="$output"
        fi
        if [ -d "$prefix/clib" ]; then
            out="$prefix/clib/$outname"
        else
            out="$prefix/$outname"
        fi
        $AWK -v file=$libdefsfile -f $scriptdir/genclib.awk $srcs > $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
    pclib )
        echo "Regenerating private clib files for $libname"
        if [ "x$output" = "x" ]; then
            outname="$libname"_private_protos.h
        else
            outname="$output"
        fi
        if [ -d "$prefix/clib" ]; then
            out="$prefix/clib/$outname"
        else
            out="$prefix/$outname"
        fi
        $AWK -v file=$libdefsfile -f $scriptdir/genpclib.awk $srcs > $out.new
        $scriptdir/moveifchanged $out.new $out
    ;;
#    pragma )
#        genpragma
#    ;;
     inline )
        echo "Regenerating inline for $libname"
        if [ "x$output" = "x" ]; then
            outname="$libname".h
        else
            outname="$output"
        fi
        if [ -d "$prefix/inline" ]; then
            out="$prefix/inline/$outname"
        else
            out="$prefix/$outname"
        fi
        $AWK -v file=$libdefsfile -f $scriptdir/geninline.awk $srcs > $out.new
        $scriptdir/moveifchanged $out.new $out

    ;;
esac
