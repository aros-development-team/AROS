##begin config
basename BZ2
version 3.0
date 16.05.2012
copyright Copyright (C) 1996-2010 Julian R Seward, 2012 The AROS Development Team
options pertaskbase
rellib posixc
rellib stdc
forcebase PosixCBase
##end config

##begin cdef
#include <bzlib.h>
#include <stdio.h> /* For FILE */
##end cdef

##begin functionlist
const char *BZ2_bzlibVersion()
int BZ2_bzCompressInit(bz_stream *strm, int blockSize100k, int verbosity, int workFactor)
int BZ2_bzCompress(bz_stream *strm, int action)
int BZ2_bzCompressEnd(bz_stream *strm)
int BZ2_bzDecompressInit(bz_stream *strm, int verbosity, int small)
int BZ2_bzDecompress(bz_stream *strm)
int BZ2_bzDecompressEnd(bz_stream *strm)
int BZ2_bzBuffToBuffCompress(char *dest, unsigned int *destLen, char *source, unsigned int sourceLen, int blockSize100k, int verbosity, int workFactor)
int BZ2_bzBuffToBuffDecompress(char *dest, unsigned int *destLen, char *source, unsigned int sourceLen, int small, int verbosity)
BZFILE *BZ2_bzReadOpen(int* bzerror, FILE* f, int verbosity, int small, void *unused, int nUnused)
void BZ2_bzReadClose(int *bzerror, BZFILE* b)
void BZ2_bzReadGetUnused(int *bzerror, BZFILE *b, void **unused, int *nUnused)
int BZ2_bzRead(int *bzerror, BZFILE* b, void *buf, int len)
BZFILE *BZ2_bzWriteOpen(int *bzerror, FILE *f, int blockSize100k, int verbosity, int workFactor)
void BZ2_bzWrite(int *bzerror, BZFILE* b, void *buf, int len)
void BZ2_bzWriteClose(int *bzerror, BZFILE *b, int abandon, unsigned int *nbytes_in, unsigned int *nbytes_out)
void BZ2_bzWriteClose64(int *bzerror, BZFILE *b, int abandon, unsigned int *nbytes_in_lo32, unsigned int * nbytes_in_hi32, unsigned int *nbytes_out_lo32, unsigned int *nbytes_out_hi32)
##end functionlist
