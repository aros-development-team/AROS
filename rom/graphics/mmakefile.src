# $Id$
include $(TOP)/config/make.cfg

USER_INCLUDES := -I$(SRCDIR)/rom/cgfx

FILES	  := \
	intregions \
	graphics_misc \
	areafill \
	fontsupport \
	color_support \
	gels_internal \
	objcache \
	default_font \
	graphics_driver \
	fakegfxhidd \
	dispinfo \
	gfxfuncsupport \
	cgx_support


FUNCTIONS := \
	addanimob \
	addbob \
	adddisplaydrivera \
	addfont \
	addvsprite \
	allocbitmap \
	allocdbufinfo \
	allocraster \
	allocspritedataa \
	andrectrect \
	andrectregion \
        andrectregionnd \
	andregionregion \
        andregionregionnd \
	animate \
	areadraw \
	areaellipse \
	areaend \
	areamove \
        areregionsequal \
	askfont \
	asksoftstyle \
	attachpalextra \
	attemptlocklayerrom \
	bestmodeida \
	bitmapscale \
	bltbitmap \
	bltbitmaprastport \
	bltclear \
	bltmaskbitmaprastport \
	bltpattern \
	bltrastportbitmap \
	blttemplate \
	calcivg \
	cbump \
	changeextspritea \
	changesprite \
	changevpbitmap \
	cleareol \
	clearrectregion \
	clearrectregionnd \
	clearregionregion \
	clearregionregionnd \
	clearregion \
	clearscreen \
	clipblit \
	clonerastport \
	closefont \
	closemonitor \
	cmove \
	coercemode \
	copyregion \
	copysbitmap \
	createrastport \
	cwait \
	deinitrastport \
	disownblitter \
	disposeregion \
	docollision \
	draw \
	drawellipse \
	drawglist \
	eraserect \
	extendfont \
	findcolor \
	finddisplayinfo \
	flood \
	fontextent \
	freebitmap \
	freecolormap \
	freecoplist \
	freecprlist \
	freedbufinfo \
	freegbuffers \
	freeraster \
	freerastport \
	freesprite \
	freespritedata \
	freevportcoplists \
	getapen \
	getbitmapattr \
	getbpen \
	getcolormap \
	getdisplayinfodata \
	getdrmd \
	getextspritea \
	getgbuffers \
	getoutlinepen \
	getrgb32 \
	getrgb4 \
	getrpattrsa \
	getsprite \
	getvpmodeid \
	gfxassociate \
	gfxfree \
	gfxlookup \
	gfxnew \
	initarea \
	initbitmap \
	initgels \
	initgmasks \
	initmasks \
	initrastport \
	inittmpras \
	initview \
	initvport \
        ispointinregion \
	loadrgb32 \
	loadrgb4 \
	loadview \
	locklayerrom \
	makevport \
	modenotavailable \
	move \
	movesprite \
	mrgcop \
	newrectregion \
	newregion \
	nextdisplayinfo \
	obtainbestpena \
	obtainpen \
	openfont \
	openmonitor \
	orrectregion \
	orrectregionnd \
	orregionregion \
	orregionregionnd \
	ownblitter \
	polydraw \
	qblit \
	qbsblit \
	readpixel \
	readpixelarray8 \
	readpixelline8 \
	rectfill \
	releasepen \
	remfont \
	remibob \
	remvsprite \
	scalerdiv \
	scrollraster \
	scrollrasterbf \
	scrollregion \
        scrollvport \
	setabpendrmd \
	setapen \
	setbpen \
	setchiprev \
	setcollision \
	setdrmd \
	setfont \
	setmaxpen \
	setoutlinepen \
	setrast \
	setregion \
	setrgb32 \
	setrgb32cm \
	setrgb4 \
	setrgb4cm \
	setrpattrsa \
	setsoftstyle \
	setwritemask \
	showimminentreset \
	sortglist \
	stripfont \
        swapregions \
	syncsbitmap \
	text \
	textextent \
	textfit \
	textlength \
	ucopperlistinit \
	unlocklayerrom \
	vbeampos \
	videocontrol \
	waitblit \
	waitbovp \
	waittof \
	weightamatch \
	writechunkypixels \
	writepixel \
	writepixelarray8 \
	writepixelline8 \
	xorrectregion \
	xorrectregionnd \
	xorregionregion \
	xorregionregionnd

#MM kernel-graphics-linklib : kernel-graphics-$(ARCH)-$(CPU) \
#MM   hidd-graphics-linklib
#MM kernel-graphics-kobj : kernel-graphics-$(ARCH)-$(CPU) \
#MM   hidd-graphics-linklib

#MM kernel-graphics-includes : \
#MM     kernel-exec-includes \
#MM     kernel-oop-includes \
#MM     kernel-utility-includes \
#MM     kernel-cgfx-includes \
#MM     includes-copy

%build_module mmake=kernel-graphics \
  modname=graphics modtype=library \
  files="graphics_init $(FUNCTIONS) $(FILES)" \
  uselibs="hiddgraphicsstubs oop rom"

# Generate dummy includes for the layer library to solve a circular include
# dependency problem. Yes, this is a hack.

OBJDIR   := $(GENDIR)/$(CURDIR)
DUMMYDIR := $(OBJDIR)/dummyinc
REFFILES := $(addprefix $(OBJDIR)/, $(addsuffix .ref, graphics_init $(FUNCTIONS) $(FILES)))

ifeq ($(findstring $(TARGET), kernel-graphics-objdir kernel-graphics-setup kernel-graphics-clean clean),)
%rule_genmodule_makefile modname=layers modtype=library \
    targetdir=$(OBJDIR) conffile=../hyperlayers/layers.conf

$(OBJDIR)/Makefile.layers : | $(OBJDIR)
GLOB_MKDIRS += $(OBJDIR)

include $(OBJDIR)/Makefile.layers

%rule_genmodule_dummy modname=layers modtype=library \
    targetdir=$(DUMMYDIR) conffile=../hyperlayers/layers.conf
    
$(REFFILES) : $(DUMMYDIR)/proto/layers.h
endif
