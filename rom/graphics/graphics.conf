##begin config
version 41.4
libbase GfxBase
libbasetype struct GfxBase_intern
sysbase_field gfxbase.ExecBase
libbasetypeextern struct GfxBase
residentpri 65
options noexpunge
rellib utility
rellib oop
##end config

##begin cdef
#include <graphics/gfx.h>
#include <graphics/displayinfo.h>
#include <graphics/gels.h>
#include <graphics/rastport.h>
#include <graphics/view.h>
#include <graphics/copper.h>
#include <graphics/clip.h>
#include <graphics/regions.h>
#include <graphics/sprite.h>
#include <graphics/text.h>
#include <graphics/scale.h>
#include <hardware/blit.h>

#include <utility/tagitem.h>

__BEGIN_DECLS

ULONG BestModeID(Tag, ...);

__END_DECLS

##end cdef

##begin cdefprivate
#define __aros_getoffsettable()        ((char *)GfxBase)
#define __aros_setoffsettable(lh)      

#include "graphics_intern.h"
##end cdefprivate

##begin functionlist
LONG BltBitMap(struct BitMap *srcBitMap, WORD xSrc, WORD ySrc, struct BitMap *destBitMap, WORD xDest, WORD yDest, WORD xSize, WORD ySize, ULONG minterm, ULONG mask, PLANEPTR tempA) (A0, D0, D1, A1, D2, D3, D4, D5, D6, D7, A2)
void BltTemplate(PLANEPTR source, WORD xSrc, WORD srcMod, struct RastPort *destRP, WORD xDest, WORD yDest, WORD xSize, WORD ySize) (A0, D0, D1, A1, D2, D3, D4, D5)
void ClearEOL(struct RastPort *rp) (A1)
void ClearScreen(struct RastPort *rp) (A1)
WORD TextLength(struct RastPort *rp, CONST_STRPTR string, ULONG count) (A1, A0, D0)
void Text(struct RastPort *rp, CONST_STRPTR string, ULONG count) (A1, A0, D0)
void SetFont(struct RastPort *rp, struct TextFont *textFont) (A1, A0)
struct TextFont *OpenFont(const struct TextAttr *textAttr) (A0)
void CloseFont(struct TextFont *textFont) (A1)
ULONG AskSoftStyle(struct RastPort *rp) (A1)
ULONG SetSoftStyle(struct RastPort *rp, ULONG style, ULONG enable) (A1, D0, D1)
void AddBob(struct Bob *bob, struct RastPort *rp) (A0, A1)
void AddVSprite(struct VSprite *vs, struct RastPort *rp) (A0, A1)
void DoCollision(struct RastPort *rp) (A1)
void DrawGList(struct RastPort *rp, struct ViewPort *vp) (A1, A0)
void InitGels(struct VSprite *head, struct VSprite *tail, struct GelsInfo *GInfo) (A0, A1, A2)
void InitMasks(struct VSprite *vs) (A0)
void RemIBob(struct Bob *bob, struct RastPort *rp, struct ViewPort *vp) (A0, A1, A2)
void RemVSprite(struct VSprite *vs) (A0)
void SetCollision(ULONG num, VOID_FUNC routine, struct GelsInfo *GInfo) (D0, A0, A1)
void SortGList(struct RastPort *rp) (A1)
void AddAnimOb(struct AnimOb *anOb, struct AnimOb **anKey, struct RastPort *rp) (A0, A1, A2)
void Animate(struct AnimOb **anKey, struct RastPort *rp) (A0, A1)
BOOL GetGBuffers(struct AnimOb *anOb, struct RastPort *rp, BOOL db) (A0, A1, D0)
void InitGMasks(struct AnimOb *anOb) (A0)
void DrawEllipse(struct RastPort *rp, WORD xCenter, WORD yCenter, WORD a, WORD b) (A1, D0, D1, D2, D3)
ULONG AreaEllipse(struct RastPort *rp, WORD cx, WORD cy, WORD a, WORD b) (A1, D0, D1, D2, D3)
void LoadRGB4(struct ViewPort *vp, UWORD *colors, WORD count) (A0, A1, D0)
void InitRastPort(struct RastPort *rp) (A1)
void InitVPort(struct ViewPort *vp) (A0)
ULONG MrgCop(struct View *view) (A1)
ULONG MakeVPort(struct View *view, struct ViewPort *viewport) (A0, A1)
void LoadView(struct View *view) (A1)
void WaitBlit() ()
void SetRast(struct RastPort *rp, ULONG pen) (A1, D0)
void Move(struct RastPort *rp, WORD x, WORD y) (A1, D0, D1)
void Draw(struct RastPort *rp, WORD x, WORD y) (A1, D0, D1)
ULONG AreaMove(struct RastPort *rp, WORD x, WORD y) (A1, D0, D1)
ULONG AreaDraw(struct RastPort *rp, WORD x, WORD y) (A1, D0, D1)
LONG AreaEnd(struct RastPort *rp) (A1)
void WaitTOF() ()
void QBlit(struct bltnode *bn) (A1)
void InitArea(struct AreaInfo *areainfo, void *buffer, WORD maxvectors) (A0, A1, D0)
void SetRGB4(struct ViewPort *vp, ULONG n, ULONG r, ULONG g, ULONG b) (A0, D0, D1, D2, D3)
void QBSBlit(struct bltnode *bn) (A1)
void BltClear(void *memBlock, ULONG bytecount, ULONG flags) (A1, D0, D1)
void RectFill(struct RastPort *rp, WORD xMin, WORD yMin, WORD xMax, WORD yMax) (A1, D0, D1, D2, D3)
void BltPattern(struct RastPort *rp, PLANEPTR mask, WORD xMin, WORD yMin, WORD xMax, WORD yMax, ULONG byteCnt) (A1, A0, D0, D1, D2, D3, D4)
LONG ReadPixel(struct RastPort *rp, WORD x, WORD y) (A1, D0, D1)
LONG WritePixel(struct RastPort *rp, WORD x, WORD y) (A1, D0, D1)
BOOL Flood(struct RastPort *rp, ULONG mode, WORD x, WORD y) (A1, D2, D0, D1)
void PolyDraw(struct RastPort *rp, LONG count, WORD *polyTable) (A1, D0, A0)
void SetAPen(struct RastPort *rp, ULONG pen) (A1, D0)
void SetBPen(struct RastPort *rp, ULONG pen) (A1, D0)
void SetDrMd(struct RastPort *rp, ULONG drawMode) (A1, D0)
void InitView(struct View *view) (A1)
void CBump(struct UCopList *ucl) (A1)
void CMove(struct UCopList *ucl, void *reg, WORD value) (A1, D0, D1)
void CWait(struct UCopList *ucl, WORD v, WORD h) (A1, D0, D1)
LONG VBeamPos() ()
void InitBitMap(struct BitMap *bm, BYTE depth, UWORD width, UWORD height) (A0, D0, D1, D2)
void ScrollRaster(struct RastPort *rp, WORD dx, WORD dy, WORD xMin, WORD yMin, WORD xMax, WORD yMax) (A1, D0, D1, D2, D3, D4, D5)
void WaitBOVP(struct ViewPort *vp) (A0)
WORD GetSprite(struct SimpleSprite *sprite, WORD pick) (A0, D0)
void FreeSprite(WORD pick) (D0)
void ChangeSprite(struct ViewPort *vp, struct SimpleSprite *s, void *newdata) (A0, A1, A2)
void MoveSprite(struct ViewPort *vp, struct SimpleSprite *sprite, WORD x, WORD y) (A0, A1, D0, D1)
void LockLayerRom(struct Layer *l) (A5)
void UnlockLayerRom(struct Layer *l) (A5)
void SyncSBitMap(struct Layer *l) (A0)
void CopySBitMap(struct Layer *l) (A0)
void OwnBlitter() ()
void DisownBlitter() ()
struct TmpRas *InitTmpRas(struct TmpRas *tmpras, void *buffer, ULONG size) (A0, A1, D0)
void AskFont(struct RastPort *rp, struct TextAttr *textAttr) (A1, A0)
void AddFont(struct TextFont *textFont) (A1)
void RemFont(struct TextFont *textFont) (A1)
PLANEPTR AllocRaster(UWORD width, UWORD height) (D0, D1)
void FreeRaster(PLANEPTR p, UWORD width, UWORD height) (A0, D0, D1)
void AndRectRegion(struct Region *Reg, struct Rectangle *Rect) (A0, A1)
BOOL OrRectRegion(struct Region *Reg, struct Rectangle *Rect) (A0, A1)
struct Region *NewRegion() ()
BOOL ClearRectRegion(struct Region *Reg, struct Rectangle *Rect) (A0, A1)
void ClearRegion(struct Region *region) (A0)
void DisposeRegion(struct Region *region) (A0)
void FreeVPortCopLists(struct ViewPort *vp) (A0)
void FreeCopList(struct CopList *coplist) (A0)
void ClipBlit(struct RastPort *srcRP, WORD xSrc, WORD ySrc, struct RastPort *destRP, WORD xDest, WORD yDest, WORD xSize, WORD ySize, UBYTE minterm) (A0, D0, D1, A1, D2, D3, D4, D5, D6)
BOOL XorRectRegion(struct Region *Reg, struct Rectangle *Rect) (A0, A1)
void FreeCprList(struct cprlist *cprList) (A0)
struct ColorMap *GetColorMap(ULONG entries) (D0)
void FreeColorMap(struct ColorMap *colormap) (A0)
ULONG GetRGB4(struct ColorMap *colormap, LONG entry) (A0, D0)
void ScrollVPort(struct ViewPort *vp) (A0)
struct CopList *UCopperListInit(struct UCopList *ucl, WORD n) (A0, D0)
void FreeGBuffers(struct AnimOb *anOb, struct RastPort *rp, BOOL db) (A0, A1, D0)
void BltBitMapRastPort(struct BitMap *srcBitMap, WORD xSrc, WORD ySrc, struct RastPort *destRP, WORD xDest, WORD yDest, WORD xSize, WORD ySize, ULONG minterm) (A0, D0, D1, A1, D2, D3, D4, D5, D6)
BOOL OrRegionRegion(struct Region *R1, struct Region *R2) (A0, A1)
BOOL XorRegionRegion(struct Region *R1, struct Region *R2) (A0, A1)
BOOL AndRegionRegion(struct Region *R1, struct Region *R2) (A0, A1)
void SetRGB4CM(struct ColorMap *cm, WORD n, UBYTE r, UBYTE g, UBYTE b) (A0, D0, D1, D2, D3)
void BltMaskBitMapRastPort(struct BitMap *srcBitMap, WORD xSrc, WORD ySrc, struct RastPort *destRP, WORD xDest, WORD yDest, WORD xSize, WORD ySize, ULONG minterm, PLANEPTR bltMask) (A0, D0, D1, A1, D2, D3, D4, D5, D6, A2)
# *** Two AROS-specific functions, placed in never used area ***
LONG AddDisplayDriverA(APTR gfxhidd, struct TagItem *attrs, const struct TagItem *tags) (A0, A1, A2)
void SetDisplayDriverCallback(APTR callback, APTR userdata) (A0, A1)
BOOL AttemptLockLayerRom(struct Layer *l) (A5)
.version 36
struct ExtendedNode *GfxNew(ULONG node_type) (D0)
void GfxFree(struct ExtendedNode *node) (A0)
void GfxAssociate(void *pointer, struct ExtendedNode *node) (A0, A1)
void BitMapScale(struct BitScaleArgs *bitScaleArgs) (A0)
UWORD ScalerDiv(UWORD factor, UWORD numerator, UWORD denominator) (D0, D1, D2)
void TextExtent(struct RastPort *rp, CONST_STRPTR string, ULONG count, struct TextExtent *textExtent) (A1, A0, D0, A2)
ULONG TextFit(struct RastPort *rp, CONST_STRPTR string, ULONG strLen, struct TextExtent *textExtent, struct TextExtent *constrainingExtent, LONG strDirection, ULONG constrainingBitWidth, ULONG constrainingBitHeight) (A1, A0, D0, A2, A3, D1, D2, D3)
struct ExtendedNode *GfxLookUp(void *pointer) (A0)
ULONG VideoControl(struct ColorMap *cm, struct TagItem *tags) (A0, A1)
struct MonitorSpec *OpenMonitor(STRPTR monitor_name, ULONG display_id) (A1, D0)
LONG CloseMonitor(struct MonitorSpec *monitor_spec) (A0)
DisplayInfoHandle FindDisplayInfo(ULONG ID) (D0)
ULONG NextDisplayInfo(ULONG last_ID) (D0)
ULONG AddDisplayData(APTR displayInfoRecord) (A0)
.private
ULONG AddDisplayInfoData(DisplayInfoHandle handle, UBYTE *buf, ULONG size, ULONG tagID, ULONG ID) (A0, A1, D0, D1, D2)
.private
ULONG SetDisplayInfoData(DisplayInfoHandle handle, UBYTE *buf, ULONG size, ULONG tagID, ULONG ID) (A0, A1, D0, D1, D2)
.private
ULONG GetDisplayInfoData(DisplayInfoHandle handle, UBYTE *buf, ULONG size, ULONG tagID, ULONG ID) (A0, A1, D0, D1, D2)
void FontExtent(struct TextFont *font, struct TextExtent *fontExtent) (A0, A1)
LONG ReadPixelLine8(struct RastPort *rp, WORD xstart, WORD ystart, WORD width, UBYTE *array, struct RastPort *tempRP) (A0, D0, D1, D2, A2, A1)
LONG WritePixelLine8(struct RastPort *rp, WORD xstart, WORD ystart, WORD width, UBYTE *array, struct RastPort *tempRP) (A0, D0, D1, D2, A2, A1)
WORD ReadPixelArray8(struct RastPort *rp, WORD xstart, WORD ystart, WORD xstop, WORD ystop, UBYTE *array, struct RastPort *temprp) (A0, D0, D1, D2, D3, A2, A1)
LONG WritePixelArray8(struct RastPort *rp, WORD xstart, WORD ystart, WORD xstop, WORD ystop, UBYTE *array, struct RastPort *temprp) (A0, D0, D1, D2, D3, A2, A1)
ULONG GetVPModeID(struct ViewPort *vp) (A0)
ULONG ModeNotAvailable(ULONG modeID) (D0)
WORD WeighTAMatch(const struct TextAttr *reqTextAttr, const struct TextAttr *targetTextAttr, struct TagItem *targetTags) (A0, A1, A2)
void EraseRect(struct RastPort *rp, WORD xMin, WORD yMin, WORD xMax, WORD yMax) (A1, D0, D1, D2, D3)
ULONG ExtendFont(struct TextFont *font, struct TagItem *fontTags) (A0, A1)
void StripFont(struct TextFont *font) (A0)
.version 39
UWORD CalcIVG(struct View *View, struct ViewPort *ViewPort) (A0, A1)
LONG AttachPalExtra(struct ColorMap *cm, struct ViewPort *vp) (A0, A1)
LONG ObtainBestPenA(struct ColorMap *cm, ULONG r, ULONG g, ULONG b, struct TagItem *tags) (A0, D1, D2, D3, A1)
.skip 1
void SetRGB32(struct ViewPort *vp, ULONG n, ULONG r, ULONG g, ULONG b) (A0, D0, D1, D2, D3)
ULONG GetAPen(struct RastPort *rp) (A0)
ULONG GetBPen(struct RastPort *rp) (A0)
ULONG GetDrMd(struct RastPort *rp) (A0)
ULONG GetOutlinePen(struct RastPort *rp) (A0)
void LoadRGB32(struct ViewPort *vp, const ULONG *table) (A0, A1)
ULONG SetChipRev(ULONG ChipRev) (D0)
void SetABPenDrMd(struct RastPort *rp, ULONG apen, ULONG bpen, ULONG drawMode) (A1, D0, D1, D2)
void GetRGB32(struct ColorMap *cm, ULONG firstcolor, ULONG ncolors, ULONG *table) (A0, D0, D1, A1)
.skip 1 # v39 internal GfxSpare1()
.skip 1 # v39 internal SetDefaultMonitor()
struct BitMap *AllocBitMap(UWORD sizex, UWORD sizey, ULONG depth, ULONG flags, struct BitMap *friend_bitmap) (D0, D1, D2, D3, A0)
void FreeBitMap(struct BitMap *bm) (A0)
LONG GetExtSpriteA(struct ExtSprite *sprite, struct TagItem *tags) (A2, A1)
ULONG CoerceMode(struct ViewPort *RealViewPort, ULONG MonitorID, ULONG Flags) (A0, D0, D1)
void ChangeVPBitMap(struct ViewPort *vp, struct BitMap *bm, struct DBufInfo *db) (A0, A1, A2)
void ReleasePen(struct ColorMap *cm, ULONG n) (A0, D0)
LONG ObtainPen(struct ColorMap *cm, ULONG n, ULONG r, ULONG g, ULONG b, ULONG flags) (A0, D0, D1, D2, D3, D4)
IPTR GetBitMapAttr(struct BitMap *bitmap, ULONG attribute) (A0, D1)
struct DBufInfo *AllocDBufInfo(struct ViewPort *vp) (A0)
void FreeDBufInfo(struct DBufInfo *db) (A1)
ULONG SetOutlinePen(struct RastPort *rp, ULONG pen) (A0, D0)
ULONG SetWriteMask(struct RastPort *rp, ULONG mask) (A0, D0)
void SetMaxPen(struct RastPort *rp, ULONG maxpen) (A0, D0)
void SetRGB32CM(struct ColorMap *cm, ULONG n, ULONG r, ULONG g, ULONG b) (A0, D0, D1, D2, D3)
void ScrollRasterBF(struct RastPort *rp, WORD dx, WORD dy, WORD xMin, WORD yMin, WORD xMax, WORD yMax) (A1, D0, D1, D2, D3, D4, D5)
ULONG FindColor(struct ColorMap *cm, ULONG r, ULONG g, ULONG b, ULONG maxpen) (A3, D1, D2, D3, D4)
.skip 1 # v39 internal GfxSpare2()
struct ExtSprite *AllocSpriteDataA(struct BitMap *bitmap, struct TagItem *tagList) (A2, A1)
LONG ChangeExtSpriteA(struct ViewPort *vp, struct ExtSprite *oldsprite, struct ExtSprite *newsprite, struct TagItem *tags) (A0, A1, A2, A3)
void FreeSpriteData(struct ExtSprite *extsp) (A2)
void SetRPAttrsA(struct RastPort *rp, struct TagItem *tags) (A0, A1)
void GetRPAttrsA(struct RastPort *rp, struct TagItem *tags) (A0, A1)
ULONG BestModeIDA(struct TagItem *TagItems) (A0)
.version 40
void WriteChunkyPixels(struct RastPort *rp, WORD xstart, WORD ystart, WORD xstop, WORD ystop, UBYTE *array, LONG bytesperrow) (A0, D0, D1, D2, D3, A2, D4)
.skip 1 # MorphOS: OpenFontTagList(struct TextAttr *textAttr, struct TagItem *tags) (A0, A1)
# *** AROS-specific extensions follow. Placed in MorphOS private space (20 slots). We use 13 of them. ###
.skip 3
BOOL SetRegion(struct Region *src, struct Region *dest) (A0, A1)
BOOL ClearRegionRegion(struct Region *R1, struct Region *R2) (A0, A1)
BOOL AreRegionsEqual(struct Region *R1, struct Region *R2) (A0, A1)
BOOL IsPointInRegion(struct Region *Reg, WORD x, WORD y) (A0, D0, D1)
BOOL ScrollRegion(struct Region *region, struct Rectangle *rect, WORD dx, WORD dy) (A0, A1, D0, D1)
struct Region *AndRectRegionND(struct Region *Reg, struct Rectangle *Rect) (A0, A1)
struct Region *AndRegionRegionND(struct Region *R1, struct Region *R2) (A0, A1)
struct Region *OrRectRegionND(struct Region *Reg, struct Rectangle *Rect) (A0, A1)
struct Region *OrRegionRegionND(struct Region *R1, struct Region *R2) (A0, A1)
struct Region *XorRectRegionND(struct Region *Reg, struct Rectangle *Rect) (A0, A1)
struct Region *XorRegionRegionND(struct Region *R1, struct Region *R2) (A0, A1)
struct Region *ClearRectRegionND(struct Region *Reg, struct Rectangle *Rect) (A0, A1)
struct Region *ClearRegionRegionND(struct Region *R1, struct Region *R2) (A0, A1)
.skip 3
# The following are private low-level support functions for cybergraphics.library.
# Do not use, can be moved at any moment!
LONG WritePixels8(struct RastPort *rp, UBYTE *array, ULONG modulo, WORD xstart, WORD ystart, WORD xstop, WORD ystop, APTR pixlut, BOOL do_update) (A0, A1, D0, D1, D2, D3, D4, A2, D5)
LONG FillRectPenDrMd(struct RastPort *rp, WORD x1, WORD y1, WORD x2, WORD y2, ULONG pix, IPTR drmd, BOOL do_update) (A0, D0, D1, D2, D3, D4, D5, D6)
LONG DoRenderFunc(struct RastPort *rp, Point *src, struct Rectangle *rr, APTR render_func, APTR funcdata, BOOL do_update) (A0, A1, A2, A3, A4, D0)
LONG DoPixelFunc(struct RastPort *rp, WORD x, WORD y, APTR render_func, APTR funcdata, BOOL do_update) (A0, D0, D1, A1, A2, D2)
void UpdateBitMap(struct BitMap *bitmap, UWORD x, UWORD y, UWORD width, UWORD height) (A0, D0, D1, D2, D3)
##end functionlist
