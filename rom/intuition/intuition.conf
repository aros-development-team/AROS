##begin config
version 50.3
residentpri 15
libbasetype struct IntIntuitionBase
libbasetypeextern struct IntuitionBase
options noexpunge
##end config

##begin cdef
#ifndef INTUITION_CDEF_H
#define INTUITION_CDEF_H
#include <intuition/intuition.h>
#include <intuition/intuitionbase.h>
#include <intuition/screens.h>
#include <intuition/classes.h>
#include <intuition/windecorclass.h>
#include <intuition/scrdecorclass.h>
#include <intuition/menudecorclass.h>
#include <utility/hooks.h>
#include <aros/preprocessor/variadic/cast2iptr.hpp>

/* Prototypes for stubs in amiga.lib */

__BEGIN_DECLS

IPTR DoGadgetMethod (struct Gadget * gad, struct Window * win,  
                    struct Requester * req, ULONG MethodID, ...);
IPTR SetGadgetAttrs (struct Gadget * gad, struct Window * win,
                    struct Requester * req, Tag tag1, ...);
IPTR SetAttrs (APTR obj, Tag tag1, ...) __stackparm;
APTR NewObject (Class * classPtr, UBYTE * classID, Tag tag1, ...) __stackparm;
struct Window * OpenWindowTags (struct NewWindow * newWindow, Tag tag1, ...);
struct Screen * OpenScreenTags (struct NewScreen * newScreen, Tag tag1, ...);
LONG EasyRequest (struct Window * window, struct EasyStruct * easyStruct, ULONG * idcmpPtr, ...);

struct ICData;

#endif

__END_DECLS

##end cdef

##begin cdefprivate
#include <intuition/icclass.h>
#include <intuition/imageclass.h>
#include <intuition/monitorclass.h>

#include "intuition_intern.h"
#include "monitorclass_intern.h"
#include "monitorclass_private.h"
#include "strgadgets.h"
##end cdefprivate

##begin functionlist
.skip 1 # AmigaOS private: OpenIntuition()()
.skip 1 # AmigaOS private: Intuition(iEvent) (A0)
UWORD AddGadget(struct Window *window, struct Gadget *gadget, ULONG position) (A0, A1, D0)
BOOL ClearDMRequest(struct Window *window) (A0)
void ClearMenuStrip(struct Window *window) (A0)
void ClearPointer(struct Window *window) (A0)
BOOL CloseScreen(struct Screen *screen) (A0)
void CloseWindow(struct Window *window) (A0)
LONG CloseWorkBench() ()
void CurrentTime(ULONG *seconds, ULONG *micros) (A0, A1)
BOOL DisplayAlert(ULONG alertnumber, UBYTE *string, UWORD height) (D0, A0, D1)
void DisplayBeep(struct Screen *screen) (A0)
BOOL DoubleClick(ULONG sSeconds, ULONG sMicros, ULONG cSeconds, ULONG cMicros) (D0, D1, D2, D3)
void DrawBorder(struct RastPort *rp, struct Border *border, LONG leftOffset, LONG topOffset) (A0, A1, D0, D1)
void DrawImage(struct RastPort *rp, struct Image *image, LONG leftOffset, LONG topOffset) (A0, A1, D0, D1)
void EndRequest(struct Requester *requester, struct Window *window) (A0, A1)
struct Preferences *GetDefPrefs(struct Preferences *prefbuffer, WORD size) (A0, D0)
struct Preferences *GetPrefs(struct Preferences *prefbuffer, WORD size) (A0, D0)
void InitRequester(struct Requester *requester) (A0)
struct MenuItem *ItemAddress(struct Menu *menustrip, UWORD menunumber) (A0, D0)
BOOL ModifyIDCMP(struct Window *window, ULONG flags) (A0, D0)
void ModifyProp(struct Gadget *gadget, struct Window *window, struct Requester *requester, ULONG flags, ULONG horizPot, ULONG vertPot, ULONG horizBody, ULONG vertBody) (A0, A1, A2, D0, D1, D2, D3, D4)
void MoveScreen(struct Screen *screen, LONG dx, LONG dy) (A0, D0, D1)
void MoveWindow(struct Window *window, LONG dx, LONG dy) (A0, D0, D1)
void OffGadget(struct Gadget *gadget, struct Window *window, struct Requester *requester) (A0, A1, A2)
void OffMenu(struct Window *window, UWORD menunumber) (A0, D0)
void OnGadget(struct Gadget *gadget, struct Window *window, struct Requester *requester) (A0, A1, A2)
void OnMenu(struct Window *window, UWORD menunumber) (A0, D0)
struct Screen *OpenScreen(struct NewScreen *newScreen) (A0)
struct Window *OpenWindow(struct NewWindow *newWindow) (A0)
IPTR OpenWorkBench() ()
void PrintIText(struct RastPort *rp, struct IntuiText *iText, LONG leftOffset, LONG topOffset) (A0, A1, D0, D1)
void RefreshGadgets(struct Gadget *gadgets, struct Window *window, struct Requester *requester) (A0, A1, A2)
UWORD RemoveGadget(struct Window *window, struct Gadget *gadget) (A0, A1)
void ReportMouse(LONG flag, struct Window *window) (D0, A0)
BOOL Request(struct Requester *requester, struct Window *window) (A0, A1)
void ScreenToBack(struct Screen *screen) (A0)
void ScreenToFront(struct Screen *screen) (A0)
BOOL SetDMRequest(struct Window *window, struct Requester *dmrequest) (A0, A1)
BOOL SetMenuStrip(struct Window *window, struct Menu *menu) (A0, A1)
void SetPointer(struct Window *window, const UWORD *pointer, LONG height, LONG width, LONG xOffset, LONG yOffset) (A0, A1, D0, D1, D2, D3)
void SetWindowTitles(struct Window *window, CONST_STRPTR windowTitle, CONST_STRPTR screenTitle) (A0, A1, A2)
void ShowTitle(struct Screen *screen, BOOL ShowIt) (A0, D0)
void SizeWindow(struct Window *window, LONG dx, LONG dy) (A0, D0, D1)
struct View *ViewAddress() ()
struct ViewPort *ViewPortAddress(struct Window *Window) (A0)
void WindowToBack(struct Window *window) (A0)
void WindowToFront(struct Window *window) (A0)
BOOL WindowLimits(struct Window *window, WORD MinWidth, WORD MinHeight, UWORD MaxWidth, UWORD MaxHeight) (A0, D0, D1, D2, D3)
struct Preferences *SetPrefs(struct Preferences *prefbuffer, LONG size, BOOL inform) (A0, D0, D1)
LONG IntuiTextLength(struct IntuiText *iText) (A0)
BOOL WBenchToBack() ()
BOOL WBenchToFront() ()
BOOL AutoRequest(struct Window *window, struct IntuiText *body, struct IntuiText *posText, struct IntuiText *negText, ULONG pFlag, ULONG nFlag, ULONG width, ULONG height) (A0, A1, A2, A3, D0, D1, D2, D3)
void BeginRefresh(struct Window *window) (A0)
struct Window *BuildSysRequest(struct Window *window, struct IntuiText *bodytext, struct IntuiText *postext, struct IntuiText *negtext, ULONG IDCMPFlags, WORD width, WORD height) (A0, A1, A2, A3, D0, D2, D3)
void EndRefresh(struct Window *window, BOOL complete) (A0, D0)
void FreeSysRequest(struct Window *window) (A0)
LONG MakeScreen(struct Screen *screen) (A0)
LONG RemakeDisplay() ()
LONG RethinkDisplay() ()
APTR AllocRemember(struct Remember **rememberKey, ULONG size, ULONG flags) (A0, D0, D1)
void AlohaWorkbench(struct MsgPort *wbmsgport) (A0)
void FreeRemember(struct Remember **rememberKey, LONG reallyForget) (A0, D0)
ULONG LockIBase(ULONG What) (D0)
void UnlockIBase(ULONG ibLock) (A0)
.version 33
LONG GetScreenData(APTR buffer, ULONG size, ULONG type, struct Screen *screen) (A0, D0, D1, A1)
void RefreshGList(struct Gadget *gadgets, struct Window *window, struct Requester *requester, LONG numGad) (A0, A1, A2, D0)
UWORD AddGList(struct Window *window, struct Gadget *gadget, ULONG position, LONG numGad, struct Requester *requester) (A0, A1, D0, D1, A2)
UWORD RemoveGList(struct Window *remPtr, struct Gadget *gadget, LONG numGad) (A0, A1, D0)
void ActivateWindow(struct Window *window) (A0)
void RefreshWindowFrame(struct Window *window) (A0)
BOOL ActivateGadget(struct Gadget *gadget, struct Window *window, struct Requester *requester) (A0, A1, A2)
void NewModifyProp(struct Gadget *gadget, struct Window *window, struct Requester *requester, ULONG flags, ULONG horizPot, ULONG vertPot, ULONG horizBody, ULONG vertBody, LONG numGad) (A0, A1, A2, D0, D1, D2, D3, D4, D5)
.version 36
LONG QueryOverscan(ULONG displayid, struct Rectangle *rect, WORD oscantype) (A0, A1, D0)
void MoveWindowInFrontOf(struct Window *window, struct Window *behindwindow) (A0, A1)
void ChangeWindowBox(struct Window *window, LONG left, LONG top, LONG width, LONG height) (A0, D0, D1, D2, D3)
struct Hook *SetEditHook(struct Hook *hook) (A0)
LONG SetMouseQueue(struct Window *window, UWORD queuelength) (A0, D0)
void ZipWindow(struct Window *window) (A0)
struct Screen *LockPubScreen(CONST_STRPTR name) (A0)
void UnlockPubScreen(UBYTE *name, struct Screen *screen) (A0, A1)
struct List *LockPubScreenList() ()
void UnlockPubScreenList() ()
UBYTE *NextPubScreen(struct Screen *screen, UBYTE *namebuff) (A0, A1)
void SetDefaultPubScreen(UBYTE *name) (A0)
UWORD SetPubScreenModes(UWORD modes) (D0)
UWORD PubScreenStatus(struct Screen *Scr, UWORD StatusFlags) (A0, D0)
struct RastPort *ObtainGIRPort(struct GadgetInfo *gInfo) (A0)
void ReleaseGIRPort(struct RastPort *rp) (A0)
void GadgetMouse(struct Gadget *gadget, struct GadgetInfo *ginfo, WORD *mousepoint) (A0, A1, A2)
ULONG SetIPrefs(APTR data, ULONG length, ULONG type) (A0, D0, D1)
struct Screen *GetDefaultPubScreen(UBYTE *nameBuffer) (A0)
LONG EasyRequestArgs(struct Window *window, struct EasyStruct *easyStruct, ULONG *IDCMP_ptr, APTR argList) (A0, A1, A2, A3)
struct Window *BuildEasyRequestArgs(struct Window *RefWindow, struct EasyStruct *easyStruct, ULONG IDCMP, APTR Args) (A0, A1, D0, A3)
LONG SysReqHandler(struct Window *window, ULONG *IDCMPFlagsPtr, BOOL WaitInput) (A0, A1, D0)
struct Window *OpenWindowTagList(struct NewWindow *newWindow, struct TagItem *tagList) (A0, A1)
struct Screen *OpenScreenTagList(struct NewScreen *newScreen, struct TagItem *tagList) (A0, A1)
void DrawImageState(struct RastPort *rp, struct Image *image, LONG leftOffset, LONG topOffset, ULONG state, struct DrawInfo *drawInfo) (A0, A1, D0, D1, D2, A2)
BOOL PointInImage(ULONG point, struct Image *image) (D0, A0)
void EraseImage(struct RastPort *rp, struct Image *image, LONG leftOffset, LONG topOffset) (A0, A1, D0, D1)
APTR NewObjectA(struct IClass *classPtr, UBYTE *classID, struct TagItem *tagList) (A0, A1, A2)
void DisposeObject(APTR object) (A0)
IPTR SetAttrsA(APTR object, struct TagItem *tagList) (A0, A1)
ULONG GetAttr(ULONG attrID, Object *object, IPTR *storagePtr) (D0, A0, A1)
IPTR SetGadgetAttrsA(struct Gadget *gadget, struct Window *window, struct Requester *requester, struct TagItem *tagList) (A0, A1, A2, A3)
APTR NextObject(APTR objectPtrPtr) (A0)
struct IClass *FindClass(ClassID classID) (A0)
struct IClass *MakeClass(ClassID classID, ClassID superClassID, struct IClass *superClassPtr, ULONG instanceSize, ULONG flags) (A0, A1, A2, D0, D1)
void AddClass(struct IClass *classPtr) (A0)
struct DrawInfo *GetScreenDrawInfo(struct Screen *screen) (A0)
void FreeScreenDrawInfo(struct Screen *screen, struct DrawInfo *drawInfo) (A0, A1)
BOOL ResetMenuStrip(struct Window *window, struct Menu *menu) (A0, A1)
void RemoveClass(struct IClass *classPtr) (A0)
BOOL FreeClass(struct IClass *iclass) (A0)
.skip 1 # AmigaOS 2.1 private: lockPubClass()()
.skip 1 # AmigaOS 2.1 private: unlockPubClass()()
.skip 6
.version 39
struct ScreenBuffer *AllocScreenBuffer(struct Screen *screen, struct BitMap *bitmap, ULONG flags) (A0, A1, D0)
void FreeScreenBuffer(struct Screen *screen, struct ScreenBuffer *screenbuffer) (A0, A1)
ULONG ChangeScreenBuffer(struct Screen *screen, struct ScreenBuffer *screenbuffer) (A0, A1)
void ScreenDepth(struct Screen *screen, ULONG flags, APTR reserved) (A0, D0, A1)
void ScreenPosition(struct Screen *screen, ULONG flags, LONG x1, LONG y1, LONG x2, LONG y2) (A0, D0, D1, D2, D3, D4)
void ScrollWindowRaster(struct Window *win, WORD dx, WORD dy, WORD xmin, WORD ymin, WORD xmax, WORD ymax) (A1, D0, D1, D2, D3, D4, D5)
void LendMenus(struct Window *fromwindow, struct Window *towindow) (A0, A1)
IPTR DoGadgetMethodA(struct Gadget *gad, struct Window *win, struct Requester *req, Msg msg) (A0, A1, A2, A3)
void SetWindowPointerA(struct Window *window, struct TagItem *taglist) (A0, A1)
BOOL TimedDisplayAlert(ULONG alertnumber, UBYTE *string, UWORD height, ULONG time) (D0, A0, D1, A1)
void HelpControl(struct Window *window, ULONG flags) (A0, D0)
.version 50
LONG IsWindowVisible(struct Window *window) (A0)
BOOL ShowWindow(struct Window *window, struct Window *other) (A0, A1)
BOOL HideWindow(struct Window *window) (A0)

struct Region *ChangeWindowShape(struct Window *window, struct Region *newshape, struct Hook *callback) (A0, A1, A2)
void SetDefaultScreenFont(struct TextFont *textfont) (A0)
IPTR DoNotify(Class *cl, Object *o, struct ICData *ic, struct opUpdate *msg) (A0, A1, A2, A3)
void FreeICData(struct ICData *icdata) (A0)

struct IntuiMessage *AllocIntuiMessage(struct Window *window) (A0)
void FreeIntuiMessage(struct IntuiMessage *imsg) (A0)
.skip 1 # MorphOS: Still reserved as LateIntuiInit() but not implemented
void SendIntuiMessage(struct Window *window, struct IntuiMessage *imsg) (A0, A1)
void ChangeDecoration(ULONG ID, struct NewDecorator *decor) (D0, A0) # MorphOS: Private diagnostic DumpIntuiState()
.skip 1 # MorphOS: GetSkinInfoAttrA(drawinfo,attr,taglist)(a0,d0,a1)
APTR StartScreenNotifyTagList(struct TagItem *tags) (A0)
BOOL EndScreenNotify(APTR notify) (A0)
IPTR GetDrawInfoAttr(struct DrawInfo *drawInfo, ULONG attrID, IPTR *errorPtr) (A0, D0, A1)
void WindowAction(struct Window *window, ULONG action, struct TagItem *tags) (A0, D0, A1)
.skip 1 # MorphOS: TransparencyControl(window,method,tags)(a0,d0,a1)
void ScrollWindowRasterNoFill(struct Window *win, WORD dx, WORD dy, WORD xmin, WORD ymin, WORD xmax, WORD ymax) (A1, D0, D1, D2, D3, D4, D5)
ULONG SetPointerBounds(struct Screen *screen, struct Rectangle *rect, ULONG reserved, struct TagItem *tags) (A0, A1, D0, A2)
Object **GetMonitorList(struct TagItem *tags) (A1)
void FreeMonitorList(Object **list) (A1)
# MorphOS: ScreenbarControlA(tags)(a1)
##end functionlist

##begin class
##begin config
basename ICClass
type class
classid ICCLASS
initpri 19
classdatatype struct ICData
##end config

##begin methodlist
OM_NEW
OM_SET
OM_NOTIFY
.alias OM_UPDATE
OM_DISPOSE
OM_GET
ICM_SETLOOP
ICM_CLEARLOOP
ICM_CHECKLOOP
##end methodlist
##end class

##begin class
##begin config
basename ModelClass
type class
classid MODELCLASS
superclass ICCLASS
initpri 18
classdatatype struct ModelData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_ADDMEMBER
OM_REMMEMBER
OM_UPDATE
.alias OM_NOTIFY
##end methodlist
##end class

##begin class
##begin config
basename ImageClass
type class
classid IMAGECLASS
initpri 19
classdatatype struct Image
##end config

##begin methodlist
OM_NEW
OM_SET
OM_GET
IM_ERASE
.alias IM_ERASEFRAME
IM_HITTEST
.alias IM_HITFRAME
##end methodlist
##end class

##begin class
##begin config
basename FrameIClass
type image
classid FRAMEICLASS
initpri 18
classdatatype struct FrameIData
##end config

##begin methodlist
OM_NEW
OM_SET
IM_FRAMEBOX
IM_DRAW
IM_DRAWFRAME
##end methodlist
##end class

##begin class
##begin config
basename SysIClass
type image
classid SYSICLASS
initpri 18
classdatatype struct SysIData
##end config

##begin methodlist
OM_NEW
OM_SET
OM_DISPOSE
IM_DRAW
##end methodlist
##end class

##begin class
##begin config
basename FillRectClass
type image
classid FILLRECTCLASS
initpri 18
classdatatype struct FillRectData
##end config

##begin methodlist
OM_NEW
OM_SET
IM_DRAW
.alias IM_DRAWFRAME
##end methodlist
##end class

##begin class
##begin config
basename ITextIClass
type image
classid ITEXTICLASS
initpri 18
##end config

##begin methodlist
IM_DRAW
# IM_DRAWFRAME (not implemented)
##end methodlist
##end class

##begin class
##begin config
basename GadgetClass
type class
classid GADGETCLASS
initpri 19
classdatatype struct GadgetData
##end config

##begin methodlist
OM_NEW
OM_SET
.alias OM_UPDATE
OM_GET
OM_NOTIFY
OM_DISPOSE
GM_RENDER
.function GadgetClass__One
GM_LAYOUT
.alias GM_DOMAIN
.alias GM_GOINACTIVE
.function GadgetClass__Zero
GM_HANDLEINPUT
.alias GM_GOACTIVE
.function GadgetClass_NoReuse
GM_HITTEST
GM_HELPTEST
ICM_SETLOOP
ICM_CLEARLOOP
ICM_CHECKLOOP
##end methodlist
##end class

##begin class
##begin config
basename ButtonGClass
type gadget
classid BUTTONGCLASS
classptr_field windowsysiclass
initpri 18
##end config

##begin methodlist
OM_NEW
OM_SET
.alias OM_UPDATE
GM_RENDER
GM_HITTEST
GM_GOACTIVE
GM_HANDLEINPUT
GM_GOINACTIVE
##end methodlist
##end class

##begin class
##begin config
basename FrButtonClass
classid FRBUTTONCLASS
superclass BUTTONGCLASS
initpri 17
##end config

##begin methodlist
OM_NEW
OM_SET
.alias OM_UPDATE
GM_RENDER
GM_HITTEST
##end methodlist
##end class

##begin class
##begin config
basename PropGClass
type gadget
classid PROPGCLASS
initpri 18
classdatatype struct PropGData
##end config

##begin methodlist
OM_NEW
OM_SET
.alias OM_UPDATE
OM_GET
GM_RENDER
GM_GOACTIVE
GM_HANDLEINPUT
GM_GOINACTIVE
##end methodlist
##end class

##begin class
##begin config
basename StrGClass
type gadget
classid STRGCLASS
initpri 18
classdatatype struct StrGData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
.alias OM_UPDATE
OM_GET
GM_RENDER
GM_GOACTIVE
GM_HANDLEINPUT
GM_GOINACTIVE
##end methodlist
##end class

##begin class
##begin config
basename GroupGClass
type gadget
classid GROUPGCLASS
initpri 18
classdatatype struct GroupGData
##end config

##begin methodlist
OM_NEW
OM_SET
.alias OM_UPDATE
OM_DISPOSE
OM_ADDMEMBER
OM_REMMEMBER
GM_HITTEST
GM_HANDLEINPUT
.alias GM_GOACTIVE
GM_GOINACTIVE
GM_RENDER
##end methodlist
##end class

##begin class
##begin config
basename DragBarClass
type gadget
classid NULL
initpri 18
classptr_field dragbarclass
classdatatype struct dragbar_data
##end config

##begin methodlist
OM_NEW
#GM_RENDER
GM_LAYOUT
.alias GM_DOMAIN
.function DragBarClass__NOP
GM_GOACTIVE
GM_GOINACTIVE
GM_HANDLEINPUT
GM_HITTEST
##end methodlist
##end class

##begin class
##begin config
basename SizeButtonClass
type gadget
classid NULL
initpri 18
classptr_field sizebuttonclass
classdatatype struct sizebutton_data
##end config

##begin methodlist
OM_NEW
GM_LAYOUT
.alias GM_DOMAIN
.function DragBarClass__NOP
GM_GOACTIVE
GM_GOINACTIVE
GM_HANDLEINPUT
##end methodlist
##end class

##begin class
##begin config
basename MenuBarLabelClass
type image
classid MENUBARLABELCLASS
initpri 18
classdatatype struct MenuBarLabelData
##end config

##begin methodlist
OM_NEW
OM_SET
OM_GET
IM_DRAW
##end methodlist
##end class

##begin class
##begin config
basename PointerClass
classid POINTERCLASS
initpri 19
classptr_field pointerclass
classdatatype struct PointerData
##end config

##begin methodlist
OM_NEW
OM_GET
OM_DISPOSE
##end methodlist
##end class

##begin class
##begin config
basename WinDecorClass
type class
classid WINDECORCLASS
initpri 19
classdatatype struct windecor_data
##end config

##begin methodlist
OM_NEW
OM_GET
WDM_GETDEFSIZE_SYSIMAGE
WDM_DRAW_SYSIMAGE
WDM_DRAW_WINBORDER
WDM_LAYOUT_BORDERGADGETS
WDM_DRAW_BORDERPROPBACK
WDM_DRAW_BORDERPROPKNOB
WDM_INITWINDOW
WDM_EXITWINDOW
WDM_WINDOWSHAPE
##end methodlist
##end class

##begin class
##begin config
basename ScrDecorClass
type class
classid SCRDECORCLASS
initpri 19
classdatatype struct scrdecor_data
##end config

##begin methodlist
OM_NEW
OM_GET
SDM_INITSCREEN
SDM_EXITSCREEN
SDM_GETDEFSIZE_SYSIMAGE
SDM_DRAW_SYSIMAGE
SDM_DRAW_SCREENBAR
SDM_LAYOUT_SCREENGADGETS
##end methodlist
##end class

##begin class
##begin config
basename MenuDecorClass
type class
classid MENUDECORCLASS
initpri 19
classdatatype struct menudecor_data
##end config

##begin methodlist
OM_NEW
OM_GET
MDM_GETDEFSIZE_SYSIMAGE
MDM_DRAW_SYSIMAGE
MDM_GETMENUSPACES
MDM_DRAWBACKGROUND
MDM_INITMENU
MDM_EXITMENU
##end methodlist
##end class

##begin class
##begin config
basename MonitorClass
type class
classid NULL
initpri 19
classptr_field monitorclass
classdatatype struct IMonitorNode
##end config

##begin methodlist
OM_NEW
OM_GET
OM_SET
OM_DISPOSE
MM_GetRootBitMap
MM_Query3DSupport
MM_GetDefaultGammaTables
MM_GetDefaultPixelFormat
MM_GetPointerBounds
MM_RunBlanker
MM_EnterPowerSaveMode
MM_ExitBlanker
MM_SetDefaultGammaTables
MM_GetCompositionFlags
MM_SetPointerPos
MM_CheckID
MM_SetPointerShape
MM_SetScreenGamma
MM_FindBest3dDepth
MM_Calc3dCapability
##end methodlist
##end class

##begin class
##begin config
basename ScreenClass
type class
classid NULL
initpri 19
classptr_field screenclass
classdatatype struct IntScreen
##end config

##begin methodlist
OM_DISPOSE
OM_GET
OM_SET
##end methodlist
##end class
