# $Id$
include $(TOP)/config/make.cfg

# BEGIN_DESC{makefile}
# This is the mmakefile for intuition.library. Use it if you want to compile
# only this part of AROS.
# END_DESC{makefile}

# Sigh, this is needed because libtail.c uses <libdefs.h> not "libdefs.h"
USER_INCLUDES := -I. -I$(TOP)/rom/boopsi -I$(TOP)/rom/dos

# BEGIN_DESC{localmakevar}
# \item{LIBNAME} The lowercase name of the library (without the extension).
#	This is used to help derive some filenames.
#
# \item{ULIBNAME} This also contains the library name, but with the correct
#	case (the same as found in the library base name).
#
# \item{OSMODULE} The name of the file which is created when compiling to
#	a target with module files. In this library it is expansion.library.
#
# \item{FILES} This is a list of all files (without the .c) that
#	contain internal functions of the library. You do not need to include
#	the library init, function-table or end files.
#
# \item{FUNCTIONS} This is a list of all the functions that make
#	up the library. The mmakefile will strip all the files in
#	this list for which a special CPU dependant version exists.
#	This list is concatenated into the file functions.c before
#	compilation for a speed boost.
# END_DESC{localmakevar}

OBJDIR	 := $(GENDIR)/$(CURDIR)
LIBNAME  := intuition
ULIBNAME := Intuition

OSMODULE  := intuition.library
FILES	  := boolgadgets boopsigadgets buttongclass frameiclass frbuttonclass \
	     gadgetclass gadgets imageclass inputhandler propgadgets propgclass \
	     requesters strgadgets strgclass sysiclass windowclasses \
	     displayerror intuition_misc inputhandler_support inputhandler_actions \
	     menus menutask barlabelclass fillrectclass groupgclass
	     
FUNCTIONS := \
	activategadget \
	activatewindow \
	addclass \
	addgadget \
	addglist \
	allocintuimessage \
	allocremember \
	allocscreenbuffer \
	alohaworkbench \
	autorequest \
	beginrefresh \
	buildeasyrequestargs \
	buildsysrequest \
	changescreenbuffer \
	changewindowbox \
	changewindowshape \
	cleardmrequest \
	clearmenustrip \
	clearpointer \
	closescreen \
	closewindow \
	closeworkbench \
	currenttime \
	displayalert \
	displaybeep \
	disposeobject \
	dogadgetmethoda \
	doubleclick \
	drawborder \
	drawimage \
	drawimagestate \
	easyrequestargs \
	endrefresh \
	endrequest \
	eraseimage \
	freeclass \
	freeintuimessage \
	freeremember \
	freescreenbuffer \
	freescreendrawinfo \
	freesysrequest \
	gadgetmouse \
	getattr \
	getdefaultpubscreen \
	getdefprefs \
	getprefs \
	getscreendata \
	getscreendrawinfo \
	helpcontrol \
	hidewindow \
	initrequester \
	intuitextlength \
	iswindowvisible \
	itemaddress \
	lateintuiinit \
	lendmenus \
	lockibase \
	lockpubscreen \
	lockpubscreenlist \
	makeclass \
	makescreen \
	modifyidcmp \
	modifyprop \
	movescreen \
	movewindow \
	movewindowinfrontof \
	newmodifyprop \
	newobjecta \
	nextobject \
	nextpubscreen \
	obtaingirport \
	offgadget \
	offmenu \
	ongadget \
	onmenu \
	openscreen \
	openscreentaglist \
	openwindow \
	openwindowtaglist \
	openworkbench \
	pointinimage \
	printitext \
	pubscreenstatus \
	queryoverscan \
	refreshgadgets \
	refreshglist \
	refreshwindowframe \
	releasegirport \
	remakedisplay \
	removeclass \
	removegadget \
	removeglist \
	reportmouse \
	request \
	resetmenustrip \
	rethinkdisplay \
	screendepth \
	screenposition \
	screentoback \
	screentofront \
	scrollwindowraster \
	sendintuimessage \
	setattrsa \
	setdefaultpubscreen \
	setdmrequest \
	setedithook \
	setgadgetattrsa \
	setmenustrip \
	setmousequeue \
	setpointer \
	setprefs \
	setpubscreenmodes \
	setwindowpointera \
	setwindowtitles \
	showtitle \
	showwindow \
	sizewindow \
	sysreqhandler \
	timeddisplayalert \
	unlockibase \
	unlockpubscreen \
	unlockpubscreenlist \
	viewaddress \
	viewportaddress \
	wbenchtoback \
	wbenchtofront \
	windowlimits \
	windowtoback \
	windowtofront \
	zipwindow

# BEGIN_DESC{localmakevar}
# \item{DEPLIBS} List of extra libraries that you want included during
#	the linking process. You should not include the paths in this
#	list, as it will be added later. You do not need to include your
#	own lib here. If your module will be linked again after creation
#	to create a monolithic kernel file, you do not need to specify
#	any libs here (as they will be added later). If you want the
#	module to be separate (like AROSfA) you should specify the
#	libraries.
# END_DESC{localmakevar}

ifeq ("$(FLAVOUR)","native")
DEPLIBS :=
else
DEPLIBS :=
endif

# BEGIN_DESC{localmakevar}
# This is where the machine dependant magic comes in. The directories under the
# $(TOP)/config subtree will create lists of files which they wish to be used.
# These lists are used to add files to the link, and to prevent the compilation
# of other files.
#
# We create versions of the file lists for use with creating the function
# table, which needs all of the files listed.
#
# We also set up the $(OBJDIR) variable, and do some test to see whether we
# are compiling a shared library.
# END_DESC{localmakevar}

ALL_FILES := $(FILES)
ALL_FUNCTIONS := $(FUNCTIONS)
%prepare_replace rom/intuition
%filter_replace FUNCTIONS
%filter_replace FILES

# Set up for shared library creation.
ifeq ("$(SHARED_INTUITION)"),"yes")
SPECIAL_CFLAGS := $(SPECIAL_CFLAGS) $(SHARED_CFLAGS)
endif
%prepare_shlib intuition $(SHARED_INTUITION)

%genromlib_finline hasrt=-hasrt

#MM kernel-intuition-linklib : setup includes kernel-intuition-$(ARCH)-$(CPU)
kernel-intuition-linklib : $(LIB)
	@$(NOP)

#MM kernel-intuition-module : setup includes kernel-intuition-$(ARCH)-$(CPU)
kernel-intuition-module : $(LIB) $(OSMODDIR)/$(OSMODULE)
	@$(NOP)

#MM clean setup

%asm_rule "$(ALL_FUNCTIONS) $(INIT_FILE) $(ALL_FILES) $(END_FILE)"
%ctoasm_q

%common
%include_deps
