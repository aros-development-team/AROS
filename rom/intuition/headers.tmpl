##begin defines
#ifdef AddClass
#   undef AddClass
#endif
#ifdef DisposeObject
#   undef DisposeObject
#endif
#ifdef FreeClass
#   undef FreeClass
#endif
#ifdef GetAttr
#   undef GetAttr
#endif
#ifdef MakeClass
#   undef MakeClass
#endif
#ifdef NewObjectA
#   undef NewObjectA
#endif
#ifdef NextObject
#   undef NextObject
#endif
#ifdef RemoveClass
#   undef RemoveClass
#endif
#ifdef SetAttrsA
#   undef SetAttrsA
#endif
##end defines

##begin clib
#ifndef INTUITION_INTUITION_H
#   include <intuition/intuition.h>
#endif
#ifndef INTUITION_INTUITIONBASE_H
#   include <intuition/intuitionbase.h>
#endif
#ifndef INTUITION_SCREENS_H
#   include <intuition/screens.h>
#endif
#ifndef INTUITION_CLASSES_H
#   include <intuition/classes.h>
#endif
#ifndef UTILITY_HOOKS_H
#   include <utility/hooks.h>
#endif
#ifndef AROS_DEBUG_H
#   include <aros/debug.h>
#endif

#ifndef IntuitionBase
extern struct IntuitionBase * IntuitionBase;
#endif

/* Prototypes for stubs in amiga.lib */
IPTR DoGadgetMethod (struct Gadget * gad, struct Window * win,  
                    struct Requester * req, ULONG MethodID, ...);
ULONG SetGadgetAttrs (struct Gadget * gad, struct Window * win,
                    struct Requester * req, Tag tag1, ...);

#ifndef CLIB_BOOPSI_PROTOS_H /* Prevent name clashes */
ULONG SetAttrs (APTR obj, Tag tag1, ...);
ULONG SetSuperAttrs (Class * cl, Object * obj, Tag tag1, ...);
APTR NewObject (Class * classPtr, UBYTE * classID, Tag tag1, ...);
#ifndef USE_BOOPSI_STUBS
IPTR DoMethodA (Object * obj, Msg message);
IPTR DoMethod (Object * obj, ULONG MethodID, ...);
IPTR DoSuperMethodA (Class * cl, Object * obj, Msg message);
IPTR DoSuperMethod (Class * cl, Object * obj, ULONG MethodID, ...);
IPTR CoerceMethodA (Class * cl, Object * obj, Msg message);
IPTR CoerceMethod (Class * cl, Object * obj, ULONG MethodID, ...);
#endif /* !USE_BOOPSI_STUBS */
#endif

IPTR DoSuperNewA(Class *CLASS, Object *object, struct GadgetInfo *gadgetInfo, struct TagItem *tags);
IPTR DoSuperNewTags(Class *CLASS, Object *object, struct GadgetInfo *gadgetInfo, ULONG methodID, ...);

#if !defined(INTUITION_NO_INLINE_STDARG) && !defined(NO_INLINE_STDARG)
//IPTR DoSuperNewA(Class *CLASS, Object *object, struct GadgetInfo *gadgetInfo, struct TagItem *tags);
//IPTR DoSuperNewTags(Class *CLASS, Object *object, struct GadgetInfo *gadgetInfo, ULONG methodID, ...);

#   ifndef CLIB_BOOPSI_PROTOS_H /* prevent name clashes */
    //ULONG SetAttrs (APTR obj, Tag tag1, ...);
    //ULONG SetSuperAttrs (Class * cl, Object * obj, Tag tag1, ...);
    //APTR NewObject (Class * classPtr, UBYTE * classID, Tag tag1, ...);

#       ifndef USE_BOOPSI_STUBS
#       define DoMethodA(object, message)                                 \
        ({                                                                \
            ASSERT_VALID_PTR((object));                                   \
            object != NULL ?                                              \
            ({                                                            \
                ASSERT_VALID_PTR(OCLASS((object)));                       \
                ASSERT_VALID_PTR((message));                              \
                CALLHOOKPKT                                               \
                (                                                         \
                    (struct Hook *) OCLASS((object)), (object), (message) \
                );                                                        \
            })                                                            \
            :                                                             \
                NULL                                                      \
            ;                                                             \
        })
        
        #define DoMethod(object, methodid, tags...) \
        ({                                          \
            IPTR __tags[] = {methodid, tags};       \
            DoMethodA((object), (__tags));          \
        })
        /*
        #define DoSuperMethodA(class, object, message)                     \
        ({                                                                 \
            class != NULL && object != NULL ?                              \
                CALLHOOKPKT                                                \
                (                                                          \
                    (struct Hook *) (class)->cl_Super, (object), (message) \
                )                                                          \
            :                                                              \
                NULL                                                       \
            ;                                                              \
        })
        */
        //IPTR DoSuperMethodA (Class * cl, Object * obj, Msg message);
        //IPTR DoSuperMethod (Class * cl, Object * obj, ULONG MethodID, ...);
        //IPTR CoerceMethodA (Class * cl, Object * obj, Msg message);
        //IPTR CoerceMethod (Class * cl, Object * obj, ULONG MethodID, ...);
#       endif /* !USE_BOOPSI_STUBS */
#   endif /* CLIB_BOOPSI_PROTOS_H */
    
#endif /* !INTUITION_NO_INLINE_STDARG */

#ifndef CLIB_BOOPSI_PROTOS_H /* Prevent name clashes */
IPTR CallHookA (struct Hook * hook, APTR obj, APTR param);
IPTR CallHook (struct Hook * hook, APTR obj, ...);
#endif

struct Window * OpenWindowTags (struct NewWindow * newWindow, Tag tag1, ...);
struct Screen * OpenScreenTags (struct NewScreen * newScreen, Tag tag1, ...);

LONG EasyRequest (struct Window * window, struct EasyStruct * easyStruct, ULONG * idcmpPtr, ...);

##end clib

##begin proto
#ifndef IntuitionBase
extern struct IntuitionBase * IntuitionBase;
#endif

##end proto
