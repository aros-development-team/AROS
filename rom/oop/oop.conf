##begin config
version 42.1
basename OOP
libbasetype struct IntOOPBase
residentpri 94
options noexpunge
##end config
##begin cdef
#include <oop/oop.h>
##end cdef
##begin cdefprivate
#include "intern.h"
##end cdefprivate
##begin functionlist
APTR OOP_NewObject(struct OOP_IClass *classPtr, UBYTE *classID, struct TagItem *tagList) (A0, A1, A2)
OOP_AttrBase OOP_ObtainAttrBase(STRPTR interfaceID) (A0)
OOP_MethodID OOP_GetMethodID(STRPTR interfaceID, ULONG methodOffset) (A0, D0)
void OOP_AddClass(OOP_Class *classPtr) (A0)
void OOP_ReleaseAttrBase(STRPTR interfaceID) (A0)
void OOP_DisposeObject(OOP_Object *obj) (A0)
void OOP_RemoveClass(OOP_Class *classPtr) (A0)
.skip 3
OOP_AttrBase OOP_GetAttrBase(STRPTR interfaceID) (A0)
IPTR OOP_GetAttr(OOP_Object *object, OOP_AttrID attrID, IPTR *storage) (A0, A1, A2)
IPTR OOP_SetAttrs(OOP_Object *object, struct TagItem *attrList) (A0, A1)
BOOL OOP_ObtainAttrBases(struct OOP_ABDescr *abd) (A0)
void OOP_ReleaseAttrBases(struct OOP_ABDescr *abd) (A0)
LONG OOP_ParseAttrs(struct TagItem *tags, IPTR *storage, ULONG numattrs, OOP_AttrCheck *attrcheck, OOP_AttrBase attrbase) (A0, A1, D0, A2, D1)
void *OOP_GetMethod(OOP_Object *obj, OOP_MethodID mid) (A0, D0)
OOP_Class *OOP_FindClass(UBYTE *classID) (A0)
##end functionlist
