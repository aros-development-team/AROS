# $Id$
include $(TOP)/config/make.cfg

# BEGIN_DESC{makefile}
# This is the mmakefile for oop.library. Use it if you want to compile
# only this part of AROS.
# END_DESC{makefile}

# Sigh, this is needed because libtail.c uses <libdefs.h> not "libdefs.h"
USER_INCLUDES := -I.

# Avoid warnings in include/intuition/*.h (only on amiga?)
CFLAGS   := $(CFLAGS) -DAROS_USE_OOP

MY_INCLS := $(wildcard include/*.h)
DEST_INC := $(foreach f,$(MY_INCLS), $(INCDIR)/oop/$(notdir $f))
GEN_INC	 := $(foreach f,$(MY_INCLS), $(GENINCDIR)/oop/$(notdir $f))

# BEGIN_DESC{localmakevar}
# \item{LIBNAME} The lowercase name of the library (without the extension).
#	This is used to help derive some filenames.
#
# \item{ULIBNAME} This also contains the library name, but with the correct
#	case (the same as found in the library base name).
#
# \item{OSMODULE} The name of the file which is created when compiling to
#	a target with module files. In this library it is expansion.library.
#
# \item{FILES} This is a list of all files (without the .c) that
#	contain internal functions of the library. You do not need to include
#	the library init, function-table or end files.
#
# \item{FUNCTIONS} This is a list of all the functions that make
#	up the library. The mmakefile will strip all the files in
#	this list for which a special CPU dependant version exists.
#	This list is concatenated into the file functions.c before
#	compilation for a speed boost.
# END_DESC{localmakevar}

OBJDIR	 := $(GENDIR)/$(CURDIR)
LIBNAME  := oop
ULIBNAME := OOP

OSMODULE  := oop.library
FILES	  :=	interfaceclass hash hiddmetaclass metaclass methodclass  \
		privatestubs proxyclass rootclass serverclass support 
	
FUNCTIONS := 	addclass		\
		addserver		\
		disposeobject		\
		findserver		\
		getattr			\
		getattrbase		\
		getmethod		\
		getmethodid		\
		newobject		\
		obtainattrbase		\
		obtainattrbases		\
		parseattrs		\
		releaseattrbase		\
		releaseattrbases	\
		removeclass		\
		removeserver		\
		setattrs

# BEGIN_DESC{localmakevar}
# \item{DEPLIBS} List of extra libraries that you want included during
#	the linking process. You should not include the paths in this
#	list, as it will be added later. You do not need to include your
#	own lib here.
# END_DESC{localmakevar}

ifeq ("$(FLAVOUR)","native")
DEPLIBS := amiga arossupport arosc
else
DEPLIBS :=
endif

# BEGIN_DESC{localmakevar}
# This is where the machine dependant magic comes in. The directories under the
# $(TOP)/config subtree will create lists of files which they wish to be used.
# These lists are used to add files to the link, and to prevent the compilation
# of other files.
#
# We create versions of the file lists for use with creating the function
# table, which needs all of the files listed.
#
# We also set up the $(OBJDIR) variable, and do some test to see whether we
# are compiling a shared library.
# END_DESC{localmakevar}

ALL_FILES := $(FILES)
ALL_FUNCTIONS := $(FUNCTIONS)
%prepare_replace rom/oop
%filter_replace FILES
%filter_replace FUNCTIONS

# Set up for shared library creation.
ifeq ("$(SHARED_OOP)"),"yes")
SPECIAL_CFLAGS := $(SPECIAL_CFLAGS) $(SHARED_CFLAGS)
endif
%prepare_shlib oop $(SHARED_OOP)

%genromlib_finline

#MM
setup-includes :
	%mkdirs_q  $(GENINCDIR) $(INCDIR) $(GENINCDIR)/oop $(INCDIR)/oop

#MM
includes-copy : $(DEST_INC) $(GEN_INC)
	@$(NOP)

$(INCDIR)/oop/%.h : include/%.h
	@$(CP) include/$(notdir $<) $@

$(GENINCDIR)/oop/%.h : include/%.h
	@$(CP) include/$(notdir $<) $@

#MM kernel-oop-linklib : setup includes kernel-oop-$(ARCH)-$(CPU)
kernel-oop-linklib : $(LIB)
	@$(NOP)

#MM kernel-oop-module : setup includes kernel-oop-$(ARCH)-$(CPU)
kernel-oop-module : $(LIB) $(OSMODDIR)/$(OSMODULE)
	@$(NOP)


# --- QUICK HACKS BEGIN --- 
# These are hacks for faster execution of "mmake" and "make". Use them
# only if you know set the setup is correct and do not add them as targets
# in other makefiles.
#
# Usage: 
#   mmake AROS.kernel-oop-module-quick
#   make -f TOP=/dh1/AROS CURDIR=rom/oop mmakefile kernel-oop-module-quick

#MM kernel-oop-module-quick : kernel-oop-$(ARCH)-$(CPU)
kernel-oop-module-quick : $(LIB) $(OSMODDIR)/$(OSMODULE)
	@$(NOP)

#MM kernel-oop-includes-quick : hidd-oop-$(ARCH)-$(CPU)
kernel-oop-includes-quick : setup-includes includes-generate includes-copy 
	$(NOP)

#MM kernel-oop-linklib-quick : kernel-oop-$(ARCH)-$(CPU)
kernel-oop-linklib-quick : $(LIB)
	@$(NOP)

# --- QUICK HACKS END ---


#MM clean setup

%asm_rule "$(ALL_FUNCTIONS) $(INIT_FILE) $(ALL_FILES) $(END_FILE)"
%ctoasm_q

%common
%include_deps
