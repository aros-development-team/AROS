/*
    Copyright © 1995-2001, The AROS Development Team. All rights reserved.
    $Id$

    Desc: Autodoc for the Meta interface.
    Lang: english
*/

Attrs:

NAME
	aMeta_ID		[I],	STRPTR
	
FUNCTION
	Specifies the class ID for the class.
	
---------------------------
NAME
	aMeta_SuperID		[I],	STRPTR

FUNCTION
	ID of public class that will be superclass of class to be created.
	
	
			
---------------------------
NAME
	aMeta_SuperPtr	[I],	Class *

FUNCTION
	Pointer to private class that will be superclass to
	class created.
	
NAME
	aMeta_InstSize	[I],	ULONG

FUNCTION
	Size of the instance data for this class.
	Note, this is not necessarily the same as the size of the whole
	object of this class.
	
---------------------------
NAME
	aMeta_InterfaceDescr	[I],	struct InterfaceDescr *
	
	Pointer to an array struct InterfaceDescr.
	This array has to be nullterminated. Each 
	
	struct InterfaceDescr
	{
    		struct MethodDescr *MethodTable;
    		STRPTR InterfaceID;
    		ULONG NumMethods; /* Number of methods in the methodtable  */
	};
	
	describes an interface of the class.
	The MethodTable is an array of 

	struct MethodDescr
	{
   		IPTR (*MethodFunc)();
		ULONG MethodIdx;
	};
	
	which describes each method's implemtation.

EXAMPLE

    struct MethodDescr root_mdescr[NUM_ROOT_METHODS + 1] =
    {
    	{ (IPTR (*)())unixio_new,	MIDX_Root_New		},
    	{ (IPTR (*)())unixio_dispose,	MIDX_Root_Dispose	},
    	{ NULL, 0UL }
    };

    struct MethodDescr unixio_mdescr[NUM_UNIXIO_METHODS + 1] =
    {
    	{ (IPTR (*)())unixio_wait,	HIDDMIDX_UnixIO_Wait		},
    	{ NULL, 0UL }
    };
    
    struct InterfaceDescr ifdescr[] =
    {
    	{root_mdescr, IID_Root, NUM_ROOT_METHODS},
	{unixio_mdescr, IID_UnixIO, NUM_UNIXIO_METHODS},
	{NULL, NULL, 0UL}
    };

	
    struct TagItem tags[] =
    {
        {aMeta_SuperID,			(IPTR)CLID_Hidd},
	{aMeta_InterfaceDescr,		(IPTR)ifdescr},
	{aMeta_ID,			(IPTR)CLID_UnixIO_Hidd},
	{aMeta_InstSize,		(IPTR)sizeof (struct UnixIOData) },
	{TAG_DONE, 0UL}
    };
    
    ...
    

    cl = NewObjectA(NULL, CLID_HIDDMeta, tags);
	
	
BUGS
	This API to class creation is not good, as it's not flexible
	nor "future-compatible" One should probably use tags for everything.
	For example there is no way to specify attribute
	types, method parameter struct types/stubs etc.
	
	Suggestions are welcome.
	
