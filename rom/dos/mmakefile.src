# $Id$
include $(TOP)/config/make.cfg

# BEGIN_DESC{makefile}
# This is the mmakefile for dos.library. Use it if you want to compile
# only this part of AROS.
# END_DESC{makefile}

USER_INCLUDES := -I. -I$(TOP)/rom/devs $(shell sdl-config --cflags)
OS_INCLUDES := -I$(INCDIR)

# BEGIN_DESC{localmakevar}
# \item{LIBNAME} The lowercase name of the library (without the extension).
#	This is used to help derive some filenames.
#
# \item{ULIBNAME} This also contains the library name, but with the correct
#	case (the same as found in the library base name).
#
# \item{OSMODULE} The name of the file which is created when compiling to
#	a target with module files. In this library it is expansion.library.
#
# \item{FILES} This is a list of all files (without the .c) that
#	contain internal functions of the library. You do not need to include
#	the library init, function-table or end files.
#
# \item{FUNCTIONS} This is a list of all the functions that make
#	up the library. The mmakefile will strip all the files in
#	this list for which a special CPU dependant version exists.
#	This list is concatenated into the file functions.c before
#	compilation for a speed boost.
# END_DESC{localmakevar}

OBJDIR	 := $(GENDIR)/$(CURDIR)
TESTOBJDIR := $(GENDIR)/$(CURDIR)
LIBNAME  := dos
ULIBNAME := Dos

OSMODULE  := dos.library
IMAGE_TYPES := aos aout elf
FILES	  := devname doname dosboot errorlist inithidds lddemon runprocess \
	     filesystem_support match_misc newcliproc rootnode dosdoio\
	     patternmatching \
	     $(foreach img, $(IMAGE_TYPES), internalloadseg_$(img))

FUNCTIONS := abortpkt addbuffers adddosentry addpart addprocess addsegment \
	     allocdosobject assignadd assignlate assignlock assignpath \
	     attemptlockdoslist changemode checksignal cli cliinitnewcli \
	     cliinitrun close comparedates createdir createnewproc \
	     createproc currentdir datestamp datetostr delay deletefile \
	     deletevar deviceproc displayerror dopkt dosgetstring dosgetlocalizedstring \
	     duplock endnotify error errorreport exall exallend examine execute exit exnext \
	     fault fgetc fgets filepart findarg findcliproc finddosentry findsegment \
	     findvar flush format fputc fputs fread freeargs freedeviceproc \
	     freedosentry freedosobject fwrite getargstr getconsoletask \
	     getcurrentdirname getdeviceproc getfilesystask getprogramdir \
	     getprogramname getprompt getvar info inhibit input \
	     internalloadseg internalunloadseg ioerr isfilesystem \
	     isinteractive loadseg lock lockdoslist lockrecord lockrecords \
	     makedosentry makelink matchend matchfirst matchnext matchpattern \
	     matchpatternnocase maxcli namefromlock newloadseg nextdosentry \
	     open openfromlock output parentdir parentoffh parsepattern \
	     parsepatternnocase pathpart printfault putstr read readargs \
	     readitem relabel readlink remassignlist remdosentry remsegment rename \
	     replypkt runcommand samedevice samelock seek selecterror selectinput \
	     selectoutput sendpkt setargstr setcomment setconsoletask \
	     setcurrentdirname setfiledate setfilesize setfilesystask \
	     setioerr setmode setowner setprogramdir setprogramname \
	     setprompt setprotection setvar setvbuf splitname startnotify \
	     strtodate strtolong systemtaglist ungetc unloadseg \
	     unlockdoslist unlockrecord unlockrecords vfprintf vfwritef \
	     vprintf waitforchar waitpkt write writechars

# BEGIN_DESC{localmakevar}
# \item{DEPLIBS} List of extra libraries that you want included during
#	the linking process. You should not include the paths in this
#	list, as it will be added later. You do not need to include your
#	own lib here.
# END_DESC{localmakevar}

ifeq ("$(FLAVOUR)","native")
DEPLIBS :=
else
DEPLIBS :=
endif

# BEGIN_DESC{localmakevar}
# This is where the machine dependant magic comes in. The directories under the
# $(TOP)/config subtree will create lists of files which they wish to be used.
# These lists are used to add files to the link, and to prevent the compilation
# of other files.
#
# We create versions of the file lists for use with creating the function
# table, which needs all of the files listed.
#
# We also set up the $(OBJDIR) variable, and do some test to see whether we
# are compiling a shared library.
# END_DESC{localmakevar}

ALL_FILES := $(FILES)
ALL_FUNCTIONS := $(FUNCTIONS)
%prepare_replace rom/dos
%filter_replace FILES
%filter_replace FUNCTIONS

# Set up for shared library creation.
ifeq ("$(SHARED_DOS)"),"yes")
SPECIAL_CFLAGS := $(SPECIAL_CFLAGS) $(SHARED_CFLAGS)
endif
%prepare_shlib dos $(SHARED_DOS)

%genromlib_finline hasrt=-hasrt

TESTS := datetostr runprocess strtodate splitname readargs
TEST_DEPLIBS := arossupport arosc amiga
TEST_DEPS := $(foreach f,$(TEST_DEPLIBS),$(LIBDIR)/lib$(f).a)

#MM
check : setup-check $(foreach f,$(TESTS),$(EXEDIR)/$(f))
	@$(NOP)

$(TESTDIR)/% : %.c $(TEST_DEPS)
	%link_q opt="$(ILDFLAGS) -DTEST $(COMMON_CFLAGS) $(LIBS)"

setup-check :
	%mkdirs_q $(TESTOBJDIR) $(EXEDIR)

$(TESTDIR)/runprocess : runprocess.c ../../config/unix/exec/stackswap.c
	$(CC) -DTEST -DNO_MAIN $(CFLAGS) -c ../../config/unix/exec/stackswap.c \
	    -o $(TESTOBJDIR)/ss.o
	$(CC) -DTEST $(CFLAGS) $< $(TESTOBJDIR)/ss.o -o $@
	$(RM) $(TESTOBJDIR)/ss.o

#MM kernel-dos-linklib : setup includes kernel-dos-$(ARCH)-$(CPU)
kernel-dos-linklib : $(LIB)
	@$(NOP)

#MM kernel-dos-module : setup includes kernel-dos-$(ARCH)-$(CPU)
kernel-dos-module : $(LIB) $(OSMODDIR)/$(OSMODULE)
	@$(NOP)

#MM clean setup

%asm_rule "$(ALL_FUNCTIONS) $(INIT_FILE) $(ALL_FILES) $(END_FILE)"
%ctoasm_q

%common
%include_deps
