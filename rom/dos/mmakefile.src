# $Id$
include $(TOP)/config/make.cfg

SVNREV        := $(shell $(SRCDIR)/scripts/svnrev.sh $(SRCDIR))
USER_INCLUDES := -I$(GENDIR)/$(CURDIR)
USER_CFLAGS   := -D__DOS_NOLIBBASE__ -DISODATE="\"$(shell date '+%Y-%m-%d')\"" -DSVNREV=\"$(SVNREV)\"

IMAGE_TYPES := aos elf

FILES	  := bstr_helper errorlist \
             boot isbootable \
	     match_misc newcliproc rootnode fs_driver \
	     patternmatching internalseek internalflush \
	     packethelper namefrom internalloadseg_support \
	     shell_helper

LOADSEG_FILES := internalloadseg \
		 $(foreach img, $(IMAGE_TYPES), internalloadseg_$(img))

FUNCTIONS := abortpkt addbuffers adddosentry addpart addsegment \
	     allocdosobject assignadd assignlate assignlock assignpath \
	     attemptlockdoslist changemode checksignal \
	     cli cliinit cliinitnewcli cliinitrun \
	     close comparedates createdir createnewproc \
	     createproc currentdir datestamp datetostr delay deletefile \
	     deletevar deviceproc displayerror dopkt dosgetstring \
	     duplock duplockfromfh endnotify errorreport \
	     exall exallend examine examinefh execute exit exnext \
	     fault fgetc fgets filepart findarg findcliproc finddosentry findsegment \
	     findvar flush format fputc fputs fread freeargs freedeviceproc \
	     freedosentry freedosobject fwrite getargstr getconsoletask \
	     getcurrentdirname getdeviceproc getfilesystask getprogramdir \
	     getprogramname getprompt getvar info inhibit input \
	     internalunloadseg ioerr isfilesystem \
	     isinteractive loadseg lock lockdoslist lockrecord lockrecords \
	     makedosentry makelink matchend matchfirst matchnext matchpattern \
	     matchpatternnocase maxcli namefromfh namefromlock newloadseg nextdosentry nil \
	     open openfromlock output parentdir parentoffh parsepattern \
	     parsepatternnocase pathpart printfault putstr read readargs \
	     readitem relabel readlink remassignlist remdosentry remsegment rename \
	     replypkt runcommand samedevice samelock scanvars seek \
	     selectinput selectoutput sendpkt setargstr setcomment setconsoletask \
	     setcurrentdirname setfiledate setfilesize setfilesystask \
	     setioerr setmode setowner setprogramdir setprogramname \
	     setprompt setprotection setvar setvbuf splitname startnotify \
	     strtodate strtolong systemtaglist ungetc unloadseg unlock \
	     unlockdoslist unlockrecord unlockrecords vfprintf vfwritef \
	     vprintf waitforchar waitpkt write writechars runhandler

#MM kernel-dos-linklib : workbench-libs-dos-catalogs
#MM kernel-dos-kobj : workbench-libs-dos-catalogs
#MM kernel-dos : workbench-libs-dos-catalogs

#MM kernel-dos-includes : \
#MM     kernel-utility-includes \
#MM     kernel-exec-includes \
#MM     kernel-timer-includes \
#MM     kernel-intuition-includes

#MM- core-linklibs : linklibs-dos

USER_CFLAGS += -DAROS_CPU="\"$(AROS_TARGET_CPU)\""

%build_module mmake=kernel-dos \
  modname=dos modtype=library \
  files="dos_init $(FUNCTIONS) $(FILES) $(LOADSEG_FILES)" uselibs="romhack"

$(GENDIR)/$(CURDIR)/errorlist.d : $(GENDIR)/$(CURDIR)/errorlist.h

$(GENDIR)/$(CURDIR)/errorlist.h : $(SRCDIR)/$(CURDIR)/catalogs/dos.cd $(SRCDIR)/$(CURDIR)/genstrings.py
	@$(ECHO) Generating $@...
	@$(PYTHON) $(SRCDIR)/$(CURDIR)/genstrings.py $< > $@

%build_linklib mmake=linklibs-loadseg libname=loadseg files="$(LOADSEG_FILES)" libdir=$(GENDIR)/lib

%common
