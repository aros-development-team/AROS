/*
    Copyright © 1995-2001, The AROS Development Team. All rights reserved.
    $Id$

    Desc: Exec functions declared as extern
    Lang: english
*/

extern void AROS_SLIB_ENTRY(Supervisor,Exec)();
extern void AROS_SLIB_ENTRY(ExitIntr,Exec)();
extern void AROS_SLIB_ENTRY(Schedule,Exec)();
extern void AROS_SLIB_ENTRY(Reschedule,Exec)();
extern void AROS_SLIB_ENTRY(Switch,Exec)();
extern void AROS_SLIB_ENTRY(Dispatch,Exec)();
extern void AROS_SLIB_ENTRY(Exception,Exec)();
extern void AROS_SLIB_ENTRY(InitCode,Exec)();
extern void AROS_SLIB_ENTRY(InitStruct,Exec)();
extern void AROS_SLIB_ENTRY(MakeLibrary,Exec)();
extern void AROS_SLIB_ENTRY(MakeFunctions,Exec)();
extern void AROS_SLIB_ENTRY(FindResident,Exec)();
extern void AROS_SLIB_ENTRY(InitResident,Exec)();
extern void AROS_SLIB_ENTRY(Alert,Exec)();
extern void AROS_SLIB_ENTRY(Debug,Exec)();
extern void AROS_SLIB_ENTRY(Disable,Exec)();
extern void AROS_SLIB_ENTRY(Enable,Exec)();
extern void AROS_SLIB_ENTRY(Forbid,Exec)();
extern void AROS_SLIB_ENTRY(Permit,Exec)();
extern void AROS_SLIB_ENTRY(SetSR,Exec)();
extern void AROS_SLIB_ENTRY(SuperState,Exec)();
extern void AROS_SLIB_ENTRY(UserState,Exec)();
extern void AROS_SLIB_ENTRY(SetIntVector,Exec)();
extern void AROS_SLIB_ENTRY(AddIntServer,Exec)();
extern void AROS_SLIB_ENTRY(RemIntServer,Exec)();
extern void AROS_SLIB_ENTRY(Cause,Exec)();
extern void AROS_SLIB_ENTRY(Allocate,Exec)();
extern void AROS_SLIB_ENTRY(Deallocate,Exec)();
extern void AROS_SLIB_ENTRY(AllocMem,Exec)();
extern void AROS_SLIB_ENTRY(AllocAbs,Exec)();
extern void AROS_SLIB_ENTRY(FreeMem,Exec)();
extern void AROS_SLIB_ENTRY(AvailMem,Exec)();
extern void AROS_SLIB_ENTRY(AllocEntry,Exec)();
extern void AROS_SLIB_ENTRY(FreeEntry,Exec)();
extern void AROS_SLIB_ENTRY(Insert,Exec)();
extern void AROS_SLIB_ENTRY(AddHead,Exec)();
extern void AROS_SLIB_ENTRY(AddTail,Exec)();
extern void AROS_SLIB_ENTRY(Remove,Exec)();
extern void AROS_SLIB_ENTRY(RemHead,Exec)();
extern void AROS_SLIB_ENTRY(RemTail,Exec)();
extern void AROS_SLIB_ENTRY(Enqueue,Exec)();
extern void AROS_SLIB_ENTRY(FindName,Exec)();
extern void AROS_SLIB_ENTRY(AddTask,Exec)();
extern void AROS_SLIB_ENTRY(RemTask,Exec)();
extern void AROS_SLIB_ENTRY(FindTask,Exec)();
extern void AROS_SLIB_ENTRY(SetTaskPri,Exec)();
extern void AROS_SLIB_ENTRY(SetSignal,Exec)();
extern void AROS_SLIB_ENTRY(SetExcept,Exec)();
extern void AROS_SLIB_ENTRY(Wait,Exec)();
extern void AROS_SLIB_ENTRY(Signal,Exec)();
extern void AROS_SLIB_ENTRY(AllocSignal,Exec)();
extern void AROS_SLIB_ENTRY(FreeSignal,Exec)();
extern void AROS_SLIB_ENTRY(AllocTrap,Exec)();
extern void AROS_SLIB_ENTRY(FreeTrap,Exec)();
extern void AROS_SLIB_ENTRY(AddPort,Exec)();
extern void AROS_SLIB_ENTRY(RemPort,Exec)();
extern void AROS_SLIB_ENTRY(PutMsg,Exec)();
extern void AROS_SLIB_ENTRY(GetMsg,Exec)();
extern void AROS_SLIB_ENTRY(ReplyMsg,Exec)();
extern void AROS_SLIB_ENTRY(WaitPort,Exec)();
extern void AROS_SLIB_ENTRY(FindPort,Exec)();
extern void AROS_SLIB_ENTRY(AddLibrary,Exec)();
extern void AROS_SLIB_ENTRY(RemLibrary,Exec)();
extern void AROS_SLIB_ENTRY(OldOpenLibrary,Exec)();
extern void AROS_SLIB_ENTRY(CloseLibrary,Exec)();
extern void AROS_SLIB_ENTRY(SetFunction,Exec)();
extern void AROS_SLIB_ENTRY(SumLibrary,Exec)();
extern void AROS_SLIB_ENTRY(AddDevice,Exec)();
extern void AROS_SLIB_ENTRY(RemDevice,Exec)();
extern void AROS_SLIB_ENTRY(OpenDevice,Exec)();
extern void AROS_SLIB_ENTRY(CloseDevice,Exec)();
extern void AROS_SLIB_ENTRY(DoIO,Exec)();
extern void AROS_SLIB_ENTRY(SendIO,Exec)();
extern void AROS_SLIB_ENTRY(CheckIO,Exec)();
extern void AROS_SLIB_ENTRY(WaitIO,Exec)();
extern void AROS_SLIB_ENTRY(AbortIO,Exec)();
extern void AROS_SLIB_ENTRY(AddResource,Exec)();
extern void AROS_SLIB_ENTRY(RemResource,Exec)();
extern void AROS_SLIB_ENTRY(OpenResource,Exec)();
extern void AROS_SLIB_ENTRY(RawIOInit,Exec)();
extern void AROS_SLIB_ENTRY(RawMayGetChar,Exec)();
extern void AROS_SLIB_ENTRY(RawPutChar,Exec)();
extern void AROS_SLIB_ENTRY(RawDoFmt,Exec)();
extern void AROS_SLIB_ENTRY(GetCC,Exec)();
extern void AROS_SLIB_ENTRY(TypeOfMem,Exec)();
extern void AROS_SLIB_ENTRY(Procure,Exec)();
extern void AROS_SLIB_ENTRY(Vacate,Exec)();
extern void AROS_SLIB_ENTRY(OpenLibrary,Exec)();
extern void AROS_SLIB_ENTRY(InitSemaphore,Exec)();
extern void AROS_SLIB_ENTRY(_ObtainSemaphore,Exec)();
extern void AROS_SLIB_ENTRY(_ReleaseSemaphore,Exec)();
extern void AROS_SLIB_ENTRY(AttemptSemaphore,Exec)();
extern void AROS_SLIB_ENTRY(ObtainSemaphoreList,Exec)();
extern void AROS_SLIB_ENTRY(ReleaseSemaphoreList,Exec)();
extern void AROS_SLIB_ENTRY(FindSemaphore,Exec)();
extern void AROS_SLIB_ENTRY(AddSemaphore,Exec)();
extern void AROS_SLIB_ENTRY(RemSemaphore,Exec)();
extern void AROS_SLIB_ENTRY(AddMemList,Exec)();
extern void AROS_SLIB_ENTRY(CopyMem,Exec)();
extern void AROS_SLIB_ENTRY(CopyMemQuick,Exec)();
extern void AROS_SLIB_ENTRY(CacheClearU,Exec)();
extern void AROS_SLIB_ENTRY(CacheClearE,Exec)();
extern void AROS_SLIB_ENTRY(CacheControl,Exec)();
extern void AROS_SLIB_ENTRY(CreateIORequest,Exec)();
extern void AROS_SLIB_ENTRY(DeleteIORequest,Exec)();
extern void AROS_SLIB_ENTRY(CreateMsgPort,Exec)();
extern void AROS_SLIB_ENTRY(DeleteMsgPort,Exec)();
extern void AROS_SLIB_ENTRY(_ObtainSemaphoreShared,Exec)();
extern void AROS_SLIB_ENTRY(AllocVec,Exec)();
extern void AROS_SLIB_ENTRY(FreeVec,Exec)();
extern void AROS_SLIB_ENTRY(CreatePool,Exec)();
extern void AROS_SLIB_ENTRY(DeletePool,Exec)();
extern void AROS_SLIB_ENTRY(AllocPooled,Exec)();
extern void AROS_SLIB_ENTRY(FreePooled,Exec)();
extern void AROS_SLIB_ENTRY(AttemptSemaphoreShared,Exec)();
extern void AROS_SLIB_ENTRY(ColdReboot,Exec)();
extern void AROS_SLIB_ENTRY(StackSwap,Exec)();
extern void AROS_SLIB_ENTRY(ChildFree,Exec)();
extern void AROS_SLIB_ENTRY(ChildOrphan,Exec)();
extern void AROS_SLIB_ENTRY(ChildStatus,Exec)();
extern void AROS_SLIB_ENTRY(ChildWait,Exec)();
extern void AROS_SLIB_ENTRY(CachePreDMA,Exec)();
extern void AROS_SLIB_ENTRY(CachePostDMA,Exec)();
extern void AROS_SLIB_ENTRY(AddMemHandler,Exec)();
extern void AROS_SLIB_ENTRY(RemMemHandler,Exec)();
extern void AROS_SLIB_ENTRY(ObtainQuickVector,Exec)();
extern void AROS_SLIB_ENTRY(TaggedOpenLibrary,Exec)();
