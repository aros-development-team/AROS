# $Id$
include $(TOP)/config/make.cfg

#MM kernel-exec-includes : \
#MM     compiler-includes \
#MM     kernel-exec-includes-$(ARCH)-$(CPU) \
#MM     includes-$(ARCH)-$(CPU)

ALL_FUNCTIONS	:= \
	abortio adddevice addhead addintserver addlibrary addmemhandler \
	addmemlist addport addresource addsemaphore addtail addtask alert \
	allocabs allocate allocentry allocmem allocpooled allocsignal \
	alloctrap allocvec attemptsemaphore attemptsemaphoreshared availmem \
	cachecleare cacheclearu cachecontrol cachepostdma cachepredma cause \
	checkio childfree childorphan childstatus childwait closedevice \
	closelibrary coldreboot copymem copymemquick createiorequest \
	createmsgport createpool deallocate debug deleteiorequest \
	deletemsgport deletepool disable dispatch doio enable enqueue \
	exception findname findport findresident findsemaphore findtask \
	forbid freeentry freemem freepooled freesignal freetrap freevec getcc \
	getmsg initcode initresident initsemaphore initstruct insert \
	makefunctions makelibrary obtainquickvector obtainsemaphore \
	obtainsemaphorelist obtainsemaphoreshared oldopenlibrary opendevice \
	openlibrary openresource permit preparecontext procure putmsg rawdofmt \
	rawioinit rawmaygetchar rawputchar releasesemaphore \
	releasesemaphorelist remdevice remhead remintserver remlibrary \
	remmemhandler remove remport remresource remsemaphore remtail remtask \
	replymsg reschedule sendio setexcept setfunction setintvector \
	setsignal setsr settaskpri signal stackswap sumkickdata sumlibrary \
	superstate supervisor switch taggedopenlibrary typeofmem userstate \
	vacate wait waitio waitport allocvecpooled freevecpooled newallocentry \
	newaddtask avl vnewrawdofmt shutdowna


INIT_FILE   := exec_init
SYS_FILES   := prepareexecbase
FILES	    := traphandler exec_util idletask

ifeq ($(FLAVOUR),palmnative)
#basically the same as 'not native' a few lines above except for LIB:=.
FILES	    += romtagscanner
endif

ifeq ($(FLAVOUR),native)
DEPLIBS := arossupport arosc
else
DEPLIBS :=
  ifeq ($(ARCH),darwin)
    FILES	    += romtagscanner
  endif
  ifeq ($(ARCH),mingw32)
    FILES	    += romtagscanner
  endif
endif

# I need the private includes (for SIZEOF_ALL_REGISTERS) and they
# have to be first in the list
USER_CFLAGS := -I. -I$(GENINCDIR) -idirafter /usr/include

# As a hack the SYS_FILES are added as the initfile.
%build_module mmake=kernel-exec \
  modname=exec modtype=library \
  files="$(SYS_FILES) $(INIT_FILE) $(ALL_FUNCTIONS) $(FILES)" \
  uselibs=$(DEPLIBS)

# ***** Native ***************
# Uncommented because unsupported at the moment
#ifeq ($(FLAVOUR),native)
#
## Main function for exec.strap. Need this apart as an anchor for the link:
#INIT_FILE   := execstrap_init
#OSMODULE    := exec.strap
#LIB	    := $(LIBDIR)/lib$(LIBNAME).a
#
## Other support files:
#FILES	    :=
#FUNCTIONS   := \
#	initcode initstruct makelibrary makefunctions findresident	    \
#	initresident setintvector addintserver remintserver		    \
#	availmem allocentry freeentry typeofmem addmemlist		    \
#	addmemhandler remmemhandler insert addhead addtail remove remhead   \
#	remtail enqueue findname setsignal allocsignal freesignal addport   \
#	remport waitport findport createmsgport deletemsgport putmsg getmsg \
#	replymsg doio sendio checkio waitio abortio createiorequest	    \
#	deleteiorequest addresource remresource openresource addlibrary     \
#	remlibrary oldopenlibrary closelibrary setfunction sumlibrary	    \
#	openlibrary taggedopenlibrary adddevice remdevice opendevice	    \
#	closedevice findtask rawdofmt allocvec freevec initsemaphore	    \
#	attemptsemaphore findsemaphore addsemaphore remsemaphore	    \
#	obtainsemaphoreshared attemptsemaphoreshared createpool deletepool  \
#	allocpooled freepooled \
#	cacheclearu cachepredma cachepostdma \
#	disable forbid coldreboot getcc
#
#
#
## ***** Not Native ***************
#else
