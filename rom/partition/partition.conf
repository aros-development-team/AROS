##begin config
basename Partition
libbase PartitionBase
libbasetype struct PartitionBase_intern
libbasetypeextern struct PartitionBase
seglist_field segList
addromtag FSLoader_resident
version 2.0
residentpri 104
##end config
##begin cdef
#include <libraries/partition.h>
##end cdef
##begin cdefprivate
#include "partition_intern.h"
##end cdefprivate
##begin functionlist
struct PartitionHandle *OpenRootPartition(CONST_STRPTR Device, LONG Unit) (A1, D1)
void CloseRootPartition(struct PartitionHandle *ph) (A1)
LONG OpenPartitionTable(struct PartitionHandle *root) (A1)
void ClosePartitionTable(struct PartitionHandle *root) (A1)
LONG WritePartitionTable(struct PartitionHandle *root) (A1)
LONG CreatePartitionTable(struct PartitionHandle *root, ULONG type) (A1, D1)
struct PartitionHandle *AddPartition(struct PartitionHandle *root, struct TagItem *taglist) (A1, A2)
void DeletePartition(struct PartitionHandle *ph) (A1)
LONG GetPartitionTableAttrs(struct PartitionHandle *root, struct TagItem *taglist) (A1, A2)
LONG SetPartitionTableAttrs(struct PartitionHandle *root, struct TagItem *taglist) (A1, A2)
LONG GetPartitionAttrs(struct PartitionHandle *ph, struct TagItem *taglist) (A1, A2)
LONG SetPartitionAttrs(struct PartitionHandle *ph, struct TagItem *taglist) (A1, A2)
struct PartitionAttribute *QueryPartitionTableAttrs(struct PartitionHandle *table) (A1)
struct PartitionAttribute *QueryPartitionAttrs(struct PartitionHandle *table) (A1)
LONG DestroyPartitionTable(struct PartitionHandle *root) (A1)
struct Node *FindFileSystemA(struct PartitionHandle *ph, struct TagItem *taglist) (A1, A2)
BPTR LoadFileSystem(struct Node *handle) (A1)
LONG GetFileSystemAttrsA(struct Node *handle, struct TagItem *taglist) (A1, A2)
LONG AddBootFileSystem(struct Node *handle) (A1)
##end functionlist
