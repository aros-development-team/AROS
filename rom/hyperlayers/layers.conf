##begin config
version 50.0
libbasetype struct LayersBase
residentpri 64
options noexpunge
##end config

##begin cdef
#include <graphics/layers.h>
#include <graphics/gfx.h>
#include <graphics/clip.h>
##end cdef

##begin cdefprivate
#include "layers_intern.h"
##end cdefprivate

##begin functionlist
void InitLayers(struct Layer_Info *li) (A0)
struct Layer *CreateUpfrontLayer(struct Layer_Info *li, struct BitMap *bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct BitMap *bm2) (A0, A1, D0, D1, D2, D3, D4, A2)
struct Layer *CreateBehindLayer(struct Layer_Info *li, struct BitMap *bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct BitMap *bm2) (A0, A1, D0, D1, D2, D3, D4, A2)
LONG UpfrontLayer(LONG dummy, struct Layer *l) (A0, A1)
LONG BehindLayer(LONG dummy, struct Layer *l) (A0, A1)
LONG MoveLayer(LONG dummy, struct Layer *l, LONG dx, LONG dy) (A0, A1, D0, D1)
LONG SizeLayer(LONG dummy, struct Layer *l, LONG dw, LONG dh) (A0, A1, D0, D1)
void ScrollLayer(LONG dummy, struct Layer *l, LONG dx, LONG dy) (A0, A1, D0, D1)
LONG BeginUpdate(struct Layer *l) (A0)
void EndUpdate(struct Layer *l, UWORD flag) (A0, D0)
LONG DeleteLayer(LONG dummy, struct Layer *l) (A0, A1)
void LockLayer(LONG dummy, struct Layer *layer) (A0, A1)
void UnlockLayer(struct Layer *layer) (A0)
void LockLayers(struct Layer_Info *li) (A0)
void UnlockLayers(struct Layer_Info *li) (A0)
void LockLayerInfo(struct Layer_Info *li) (A0)
void SwapBitsRastPortClipRect(struct RastPort *rp, struct ClipRect *cr) (A0, A1)
struct Layer *WhichLayer(struct Layer_Info *li, LONG x, LONG y) (A0, D0, D1)
void UnlockLayerInfo(struct Layer_Info *li) (A0)
struct Layer_Info *NewLayerInfo() ()
void DisposeLayerInfo(struct Layer_Info *li) (A0)
LONG FattenLayerInfo(struct Layer_Info *li) (A0)
void ThinLayerInfo(struct Layer_Info *li) (A0)
LONG MoveLayerInFrontOf(struct Layer *layer_to_move, struct Layer *other_layer) (A0, A1)
struct Region *InstallClipRegion(struct Layer *l, struct Region *region) (A0, A1)
LONG MoveSizeLayer(struct Layer *l, LONG dx, LONG dy, LONG dw, LONG dh) (A0, D0, D1, D2, D3)
struct Layer *CreateUpfrontHookLayer(struct Layer_Info *li, struct BitMap *bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct Hook *hook, struct BitMap *bm2) (A0, A1, D0, D1, D2, D3, D4, A3, A2)
struct Layer *CreateBehindHookLayer(struct Layer_Info *li, struct BitMap *bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct Hook *hook, struct BitMap *bm2) (A0, A1, D0, D1, D2, D3, D4, A3, A2)
struct Hook *InstallLayerHook(struct Layer *layer, struct Hook *hook) (A0, A1)
.version 39
struct Hook *InstallLayerInfoHook(struct Layer_Info *li, struct Hook *hook) (A0, A1)
void SortLayerCR(struct Layer *layer, LONG dx, LONG dy) (A0, D0, D1)
void DoHookClipRects(struct Hook *hook, struct RastPort *rport, struct Rectangle *rect) (A0, A1, A2)
.version 45
struct Region *ChangeLayerShape(struct Layer *l, struct Region *newshape, struct Hook *callback) (A0, A1, A2)
ULONG ScaleLayer(struct Layer *l, struct TagItem *taglist) (A0, A1)
.version 50
struct Layer *CreateUpfrontLayerTagList(struct Layer_Info *li, struct BitMap *bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct TagItem *tagList) (A0, A1, D0, D1, D2, D3, D4, A2)
struct Layer *CreateBehindLayerTagList(struct Layer_Info *li, struct BitMap *bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct TagItem *tagList) (A0, A1, D0, D1, D2, D3, D4, A2)
LONG ChangeLayerVisibility(struct Layer *l, int visible) (A0, D0)
.skip 1 # MorphOS: WhichLayerBehindLayer(l,x,y)(a0,d0/d1)
#.version 52 # We don't have V52 functions except IsLayerVisible(), so for now we are v50
LONG IsLayerVisible(struct Layer *l) (A0)
BOOL IsLayerHiddenBySibling(struct Layer *l, BOOL check_invisible) (A0, D0)
void CollectPixelsLayer(struct Layer *l, struct Region *r, struct Hook *callback) (A0, A1, A2)
# MorphOS V52 functions follow:
# private6()()
# RenderLayerInfoTagList(li,taglist) (A0, A1)
# LockLayerUpdates(l) (A0)
# UnlockLayerUpdates(l) (A0)
# IsVisibleInLayer(l,x0,y0,x1,y1) (A0, D0 D1, D2, D3)
# IsLayerHitable(l) (A0)
##end functionlist
