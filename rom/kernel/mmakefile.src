# $Id$
include $(TOP)/config/make.cfg

# Allow to override include files by placing them in arch-specific directories
# Note that kernel_#?.h files must be included using #include <name>, not #include "name"
# for this to work.
USER_INCLUDES := $(PRIV_KERNEL_INCLUDES) $(PRIV_EXEC_INCLUDES) \
	        -DAROS_ARCHITECTURE="\"$(AROS_TARGET_ARCH)-$(AROS_TARGET_CPU)\"" \
	        -D__AROS_EXEC_LIBRARY__

# Allow to add architecture-specific options
-include $(SRCDIR)/arch/all-$(ARCH)/kernel/make.opts
-include $(SRCDIR)/arch/$(CPU)-$(ARCH)/kernel/make.opts
-include $(SRCDIR)/arch/$(CPU)-$(ARCH)/$(AROS_TARGET_VARIANT)/kernel/make.opts

FUNCS :=     addexceptionhandler addirqhandler bug cause cli createcontext deletecontext    \
             displayalert dispatch getbootinfo getscheduler issuper mapglobal		    \
	     remexceptionhandler remirqhandler schedule setprotection setscheduler sti      \
	     switch unmapglobal virtualtophysical obtaininput releaseinput 		    \
	     putchar maygetchar allocpages freepages getsystemattr formatstr		    \
	     initmemory statmemory _bug _displayalert getcpucount getcpunumber		    \
	     allockernelbase prepareexecbase
FILES     := kernel_init cpu_init kernel_cpu kernel_debug kernel_panic kernel_intr \
	     kernel_memory kernel_romtags kernel_scheduler kernel_globals
MMU_FILES := kernel_mm
# You can replace this with own algorithm
ALLOCATOR := mm_linear

ifeq ($(USE_MMU),1)
    FILES += $(MMU_FILES) $(ALLOCATOR)
endif

%build_module mmake=kernel-kernel \
  modname=kernel modtype=resource \
  files="$(FILES) $(FUNCS)" uselibs="rom $(USER_LIBS)" nostartup=no

%common
