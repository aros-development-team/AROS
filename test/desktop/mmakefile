####################################################################
####################################################################
############# THIS IS A GENERATED FILE ! DO NOT EDIT ###############
####################################################################
####################################################################
# Makefile for loaddesktop program

include $(TOP)/config/make.cfg

FILES	:= wbobjectclass iconpresdef tooliconclass toolicondefaultpresclass wbapplicationclass wbdiskicon wbdrawericonclass wbiconclass wbprojecticonclass wbtooliconclass wbtrashcaniconclass wbwindowclass wbwindowdefaultpresclass ldesktop

EXEDIR := $(AROSDIR)/test/desktop
EXE := $(EXEDIR)/LoadDesktop

USE_CLIB_SHARED := yes
USE_AMIGALIB    := yes
USE_MUILIB      := yes
USE_AROSLIB     := yes

#MM test-desktop : includes linklibs

.PHONY : test-desktop test-desktop-clean test-desktop-quick
#MM
test-desktop-clean : clean
#MM
test-desktop-quick : test-desktop

LIBS       := -L$(LIBDIR) $(PRELIBS)
DEPLIBS       :=
LIB_CFLAGS :=
STARTUP := $(AROS_LIB)/startup.o
ifdef USE_DETACH
STARTUP := $(LIBDIR)/detach.o $(STARTUP)
endif
DEPLIBS := $(STARTUP)
ifdef USE_AROSLIB
LIBS := $(LIBS) -larossupport
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarossupport.a
endif
ifdef USE_AMIGALIB
LIBS := $(LIBS) -lamiga
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libamiga.a
endif
ifdef USE_ZLIB
LIBS := $(LIBS) -larosz
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosz.a
endif
ifdef USE_EXPATLIB
LIBS := $(LIBS) -lexpat
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libexpat.a
endif
ifdef USE_COOLIMAGESLIB
LIBS := $(LIBS) -lcoolimages
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libcoolimages.a
endif
ifdef USE_BGUILIB
LIBS := $(LIBS) -lbgui
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libbgui.a
endif
ifdef USE_MUILIB
LIBS := $(LIBS) -lmui
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libmui.a
endif
ifdef USE_REQTOOLSLIB
LIBS := $(LIBS) -lreqtoolsstubs
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libreqtoolsstubs.a
endif
ifdef USE_HIDDSTUBS
LIBS := $(LIBS) -lhiddstubs
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libhiddstubs.a
endif

# USE_ROMLIB is a special one to say that this is a shared module, and it
# should use the restricted c.lib. Currently this includes the static parts
# of the normal C lib, but in the future it may contain quite a bit more.

ifdef USE_ROMLIB
LIBS := $(LIBS) -lrom
DEPLIBS := $(DEPLIBS) $(LIBDIR)/librom.a
endif

ifdef USE_CLIB
# uncomment this if you want to compile by default
# against the shared version of the clib
LIBS := $(LIBS) -larosc_shared
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc_shared.a

# uncomment this if you want to compile by default
# against the static version of the clib
#LIBS := $(LIBS) -larosc
#DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc.a
else
    ifdef USE_CLIB_SHARED
	LIBS := $(LIBS) -larosc_shared
	DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc_shared.a
    else
	ifdef USE_CLIB_STATIC
	    LIBS := $(LIBS) -larosc
	    DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc.a
	else
	    ifdef USE_CLIB_LIBRARY
	        LIBS := $(LIBS) -larosc_shared
		DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc_shared.a
		LIB_CFLAGS := $(LIB_CFLAGS) -I$(TOP)/rom/exec -D_CLIB_LIBRARY_
	    endif		
	endif
    endif
endif

# m.lib MUST come after c.lib in it's various incarnations.
ifdef USE_MLIB
LIBS := $(LIBS) -larosm
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosm.a
endif

# These must always be linked if we are NOT building a module,
# otherwise strange things might happen.
ifndef MODULE
ifndef NO_AUTOINIT
LIBS := $(LIBS) -lautoinit
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libautoinit.a
endif
endif

LIBS := $(LIBS) 

ifeq ($(AROS_TARGET_ARCH),morphos)
LIBS := $(FORCE_LIBS)
DEPLIBS := $(FORCE_DEPLIBS)
endif

ifndef OBJDIR
OBJDIR := $(GENDIR)/$(CURDIR)
endif

ifneq (,)
  LIBS := LIBS
endif
ifndef CFLAGS
CFLAGS := $(TARGET_CFLAGS) $(USER_CFLAGS) $(INCLUDES) $(LIB_CFLAGS) -I$(AROS_INCLUDES) -D__AROS__ -D__AROS
endif

ifndef AFLAGS
AFLAGS := $(TARGET_AFLAGS) $(USER_AFLAGS) $(INCLUDES) $(LIB_CFLAGS) -I$(AROS_INCLUDES) -D__AROS__ -D__AROS
endif

ifndef LDFLAGS
LDFLAGS := $(TARGET_LDFLAGS) $(USER_LDFLAGS)
endif





test-desktop : setup $(EXE)

OBJS := $(foreach f,$(FILES),$(OBJDIR)/$(f).o)
DEPS := $(DEPS) $(foreach f,$(FILES),$(OBJDIR)/$(f).d)

$(OBJDIR)/%.o : %.c
		@$(ECHO) "Compiling $(CURDIR)/$(patsubst $(CURDIR)//,,$<)..."
	@$(IF) $(TARGET_CC) $(CFLAGS) -c $< -o $@ > $(GENDIR)/cerrors 2>&1 ; then \
	    $(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
		$(ECHO) "$(CURDIR)/$<: $(TARGET_CC) $(CFLAGS) -c $< -o $@" >> $(GENDIR)/errors ; \
		$(CAT) $(GENDIR)/cerrors >> $(GENDIR)/errors ; \
	    else \
		$(NOP) ; \
	    fi ; \
	else \
	    $(ECHO) "Compile failed: $(TARGET_CC) $(CFLAGS) -c $< -o $@" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi


$(OBJDIR)/%.d : %.c
		@$(IF) [ ! -d $(@D) ]; then $(MKDIR) $(@D) ; else $(NOP) ; fi
	@$(ECHO) "Makedepend $(CURDIR)/$(notdir $<)..."
	@$(MKDEPEND) $(CFLAGS) $< -o $@


$(EXEDIR)/% : $(STARTUP) $(DEPLIBS)

setup ::
		@$(FOR) dir in $(OBJDIR) $(EXEDIR) ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done


clean ::
	-@$(RM) $(OBJDIR)



$(EXE) : $(EXEDIR)/% : $(OBJS)
		@$(ECHO) "Linking $@..."
	@$(IF) $(STATIC_LD) $(LDFLAGS) $(STARTUP) $^ -o $@ $(LIBS) $(COMPILER_LIBS) $() 2>&1 > $(GENDIR)/cerrors 2>&1 ; then \
		$(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
				$(ECHO) "$@: $(STATIC_LD) $(LDFLAGS) $(STARTUP) $^ -o $@ $(LIBS) $()" >> $(GENDIR)/errors ; \
				$(CAT) $(GENDIR)/cerrors >> $(GENDIR)/errors ; \
	   	else \
			$(NOP) ; \
    	fi ; \
	else \
	    $(ECHO) "Link failed: $(STATIC_LD) $(LDFLAGS) $(STARTUP) $^ -o $@ $(LIBS) $()" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi



#MM setup
setup ::
	@$(FOR) dir in $(EXEDIR) ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done

# Delete generated makefiles
#MM
clean ::
	@$(RM) $(TOP)/$(CURDIR)/mmakefile $(TOP)/$(CURDIR)/mmakefile.bak

# Include these files but only if the current target is neither
# setup nor clean.
ifeq (,$(filter clean% %clean %clean% setup% includes% ,$(TARGET)))
-include $(DEPS)
endif
