# $Id$
include $(TOP)/config/make.cfg

FUNCS   := getcpucount getcpunumber
FILES   := startup kernel_debug platform_init ictl kernel_cpu traps utils smp
AFILES  := core_interrupts reboot
MAINDIR := rom/kernel

#MM kernel-kernel-pc-i386 : kernel-pc-acpica-includes includes-asm_h-i386 linklibs-bootconsole

USER_INCLUDES := $(PRIV_KERNEL_INCLUDES) $(PRIV_EXEC_INCLUDES) \
                 -I$(SRCDIR)/arch/all-native/kernel \
		 -isystem $(SRCDIR)/arch/all-native/bootconsole/include
USER_AFLAGS   := -isystem $(GENINCDIR)

%build_archspecific \
  mainmmake=kernel-kernel maindir=$(MAINDIR) \
  arch=pc-i386 files="$(FILES) $(FUNCS)" asmfiles=$(AFILES)

# Build smpboot.bin.o in $(GENDIR)/$(MAINDIR)/arch, where it will be picked up
# by the linker automatically (make.tmpl macros link in everything that is found there)
# However we don't want our intermediate files to be picked up, so we put them in
# $(GENDIR)/$(CURDIR)

OUTDIR := $(GENDIR)/$(MAINDIR)/arch
OBJDIR := $(GENDIR)/$(CURDIR)

kernel-kernel-pc-i386 :: $(OUTDIR)/smpboot.bin.o 
kernel-kernel-pc-i386-quick :: $(OUTDIR)/smpboot.bin.o 
kernel-kernel-pc-i386-kobj :: $(OUTDIR)/smpboot.bin.o
kernel-kernel-pc-i386-kobj-quick :: $(OUTDIR)/smpboot.bin.o

%rule_assemble_multi basenames=smpbootstrap targetdir=$(OBJDIR)
%rule_link_binary file=$(OUTDIR)/smpboot.bin.o name=smpbootstrap objs=$(OBJDIR)/smpbootstrap.o ldflags="-m elf_i386"

$(OBJDIR)/smpbootstrap.o : | $(OBJDIR)

GLOB_MKDIRS += $(OUTDIR) $(OBJDIR)

%common
