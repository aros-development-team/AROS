include $(TOP)/config/make.cfg
#
# Rules to create AROS Kernel for amiga-m68k
#

Q ?= @

#MM- kernel-link-amiga-m68k :			\
#MM     general-setup-amiga-m68k		\
#MM     kernel-bsp-objs				\
#MM     kernel-objs				\
#MM     kernel-alerthook-kobj \
#MM     kernel-amiga-m68k-amigavideo-kobj \
#MM     kernel-amiga-m68k-audio-kobj \
#MM     kernel-amiga-m68k-cd-kobj \
#MM     kernel-amiga-m68k-devs \
#MM     kernel-amiga-m68k-kbd-kobj \
#MM     kernel-amiga-m68k-mouse-kobj \
#MM     kernel-amiga-m68k-uaegfx-kobj \
#MM     kernel-amiga-m68k-wbtag-kobj \
#MM     kernel-aros-kobj \
#MM     kernel-ata-kobj \
#MM     kernel-audio-kobj \
#MM     kernel-battclock-kobj \
#MM     kernel-bootloader-amiga-m68k-kobj \
#MM     kernel-bootloader-kobj \
#MM     kernel-cardres-kobj \
#MM     kernel-cia-kobj \
#MM     kernel-console-kobj \
#MM     kernel-debug-kobj \
#MM     kernel-diag-kobj \
#MM     kernel-disk-kobj \
#MM     kernel-dos-kobj \
#MM     kernel-dosboot-kobj \
#MM     kernel-expansion-kobj \
#MM     kernel-filesystem-kobj \
#MM     kernel-freeanim-kobj \
#MM     kernel-fs-afs-kobj \
#MM     kernel-fs-cdfs-kobj \
#MM     kernel-fs-con-kobj \
#MM     kernel-fs-ram-kobj \
#MM     kernel-gameport-kobj \
#MM     kernel-graphics-kobj \
#MM     kernel-hidd-kobj \
#MM     kernel-hidd-gayleata-kobj \
#MM     kernel-hidd-graphics-kobj \
#MM     kernel-hidd-kbd-kobj \
#MM     kernel-hidd-mouse-kobj \
#MM     kernel-hidd-amigakbd-kobj \
#MM     kernel-hidd-amigamouse-kobj \
#MM     kernel-hidd-amigavideo-kobj \
#MM     kernel-hidd-uaegfx-kobj \
#MM     kernel-hidd-ata_gayle-kobj \
#MM     kernel-intuition-kobj \
#MM     kernel-input-kobj \
#MM     kernel-keymap-kobj \
#MM     kernel-keyboard-kobj \
#MM     kernel-layers-kobj \
#MM     kernel-lddemon-kobj \
#MM     kernel-m680x0-kobj \
#MM     kernel-misc-kobj \
#MM     kernel-oop-kobj \
#MM     kernel-partition-kobj \
#MM     kernel-processor-kobj \
#MM     kernel-potgo-kobj \
#MM     kernel-romboot-kobj \
#MM     kernel-setpatch-kobj \
#MM     kernel-shell-kobj \
#MM     kernel-shellcommands-kobj \
#MM     kernel-timer-kobj \
#MM     kernel-trackdisk-kobj \
#MM     kernel-utility-kobj \
#MM     kernel-usb-amiga-m68k \
#MM     kernel-workbook-kobj \
#MM     kernel-workbench-devs-amiga-m68k \
#MM     workbench-libs-gadtools-kobj \
#MM     workbench-libs-icon-kobj \
#MM     workbench-libs-lowlevel-kobj \
#MM     workbench-libs-mathffp-kobj \
#MM     workbench-libs-mathieeesingbas-kobj \
#MM     workbench-libs-nonvolatile-kobj \
#MM     workbench-libs-nvdisk-kobj \
#MM     workbench-libs-workbench-kobj \
#MM     linklibs-loadseg \
#MM     compiler-stdc \
#MM     compiler-stdcio \
#MM     compiler-posixc

#MM- kernel-workbench-devs-amiga-m68k : workbench-devs-amiga-m68k

USELIBS := amiga arossupport autoinit libinit stdc.static
LIBS    := -L$(GENDIR)/lib -lloadseg $(addprefix -l,$(USELIBS))
DEPLIBS := $(addprefix $(AROS_LIB)/lib,$(addsuffix .a,$(USELIBS)))

# Force rebuilding, so that we always get new date strings
rom_entry.o: FORCE

ext_entry.o: FORCE

# USe -m68060 when compiling .S files, as we will need the
# expanded instruction set to detect alterate CPUs
USER_AFLAGS := -march=68060 -DADATE="\"$(shell date "+%d.%m.%Y")\""

# Sadly, we need to consume Chip RAM for the initial SS and the ROM BSS.
# The initial System Stack is located at the end of the first 256K
# of CHIP RAM, but is only used until RTF_COLDSTART.
#
# Right before RTF_COLDSTART, a new SS will be allocated from the fastest
# available RAM, and this initial area will be ignored.
ROMLOC_ss  := 0x003f800

# Main ROM (0xf80000 - 0xffffff)
ROMLOC_rom := 0x0f80000

FILES=start early debug mmu
AFILES=rom_entry rom_init cpu_detect superstack_swap

KLIBS   := exec aros dos utility oop expansion partition debug
KDEVS   := timer input keyboard console trackdisk gameport audio ata
KHNDLRS := con afs ram
KHIDDS  := hiddclass graphics keyboard mouse amigakbd amigamouse amigavideo uaegfx ata_gayle
KRSRCS  := battclock kernel processor lddemon dosboot cia potgo disk FileSystem misc shell card bootloader
KHOOKS  := diag romboot

KOBJS_rom := $(addprefix $(KOBJSDIR)/,$(addsuffix _library.ko ,$(KLIBS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _device.ko  ,$(KDEVS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _handler.ko ,$(KHNDLRS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _hidd.ko    ,$(KHIDDS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _resource.ko,$(KRSRCS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _driver.ko  ,$(KDRVRS) )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _hook.ko    ,$(KHOOKS) ))

OBJS_rom := $(addprefix $(KOBJSDIR)/,$(addsuffix .o,$(AFILES))) \
	    $(addprefix $(KOBJSDIR)/,$(addsuffix .o,$(FILES)))
$(DISTDIR)/aros-amiga-m68k-rom.elf: $(KOBJS_rom) $(OBJS_rom)

# Expansion ROM (0xe00000-0xe7ffff)
FILES   := 
AFILES  := ext_entry

KLIBS   :=  keymap graphics layers intuition gadtools icon workbench \
            mathffp mathieeesingbas freeanim lowlevel nonvolatile nvdisk \
            setpatch
KDEVS   := cd
KHNDLRS := cdfs
KHIDDS  :=
KRSRCS  := shellcommands workbook wbtag
KHOOKS  := alert

ROMLOC_ext := 0xe00000
KOBJS_ext := \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _library.ko ,$(KLIBS)  )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _device.ko  ,$(KDEVS)  )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _handler.ko ,$(KHNDLRS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _hidd.ko    ,$(KHIDDS) )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _resource.ko,$(KRSRCS) )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _driver.ko  ,$(KDRVRS) )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _hook.ko    ,$(KHOOKS) ))
OBJS_ext := $(addprefix $(KOBJSDIR)/,$(addsuffix .o,$(AFILES))) \
	    $(addprefix $(KOBJSDIR)/,$(addsuffix .o,$(FILES)))
$(DISTDIR)/aros-amiga-m68k-ext.elf: $(KOBJS_ext) $(OBJS_ext)

#MM kernel-link-amiga-m68k:
kernel-link-amiga-m68k : $(DISTDIR)/aros-amiga-m68k-rom.bin $(DISTDIR)/aros-amiga-m68k-ext.bin

#MM kernel-link-amiga-m68k-quick: 
kernel-link-amiga-m68k-quick : $(DISTDIR)/aros-amiga-m68k-rom.bin $(DISTDIR)/aros-amiga-m68k-ext.bin

$(HOSTGENDIR)/tools/romcheck: romcheck.c
	$(Q)$(HOST_CC) $(DEBUG_CFLAGS) -o $@ $<

$(GENDIR)/%_objs.ld: $(SRCDIR)/$(CURDIR)/mmakefile.src
	$(Q)rm -f $@
	$(Q)for file in $(OBJS_$*) $(KOBJS_$*); do \
		echo "$$file(.rodata .rodata.*)" >>$@; \
		echo "$$file(.text)" >>$@; \
	done

$(DISTDIR)/aros-amiga-m68k-reloc.elf : $(DEPLIBS) $(SRCDIR)/$(CURDIR)/mmakefile.src \
	$(OBJS_rom) $(KOBJS_rom) \
        $(OBJS_ext) $(KOBJS_ext) \
	$(SRCDIR)/$(CURDIR)/aros-rom.ld \
	$(GENDIR)/rom_objs.ld \
	$(GENDIR)/ext_objs.ld
	@$(MKDIR) $(DISTDIR)
	@$(ECHO) Linking $@...
	$(Q)$(KERNEL_CC) -Wl,-r \
		-static -nostartfiles -nostdlib \
		-Wl,--defsym -Wl,start=0x0 \
		-Wl,--defsym -Wl,SysBase=0x4 \
		-Wl,--defsym -Wl,AbsExecBase=0x4 \
		-m68000 \
		-o $@ -Wl,-T -Wl,$(SRCDIR)/$(CURDIR)/aros-rom.ld \
		-L$(AROS_LIB) $(LIBS) -lgcc

$(DISTDIR)/aros-amiga-m68k.elf: $(DISTDIR)/aros-amiga-m68k-reloc.elf
	$(Q)$(KERNEL_LD) -o $@ \
	    --section-start .rom=$(ROMLOC_rom) \
	    --section-start .ext=$(ROMLOC_ext) \
	    --section-start .ss=$(ROMLOC_ss) \
	    $<
	$(Q)$(TARGET_OBJDUMP) -h $@ | grep '[rea][oxm][mte]   '

$(DISTDIR)/aros-amiga-m68k-%.bin : $(DISTDIR)/aros-amiga-m68k.elf $(HOSTGENDIR)/tools/romcheck
	$(Q)$(TARGET_OBJCOPY) \
		--output-target binary \
		--only-section=.$* \
		--gap-fill 0xff \
		$(DISTDIR)/aros-amiga-m68k.elf $@
	$(Q)echo -n "$*: "
	$(Q)$(HOSTGENDIR)/tools/romcheck $@
	$(Q)$(MKDIR) $(AROSARCHDIR)
	$(Q)$(CP) $@ $(AROSARCHDIR)/aros-$*.bin

#MM
clean ::
	-$(RM) $(TESTS)

USER_CFLAGS += $(PRIV_KERNEL_INCLUDES) $(PRIV_EXEC_INCLUDES)
USER_AFLAGS += $(PRIV_KERNEL_INCLUDES) $(PRIV_EXEC_INCLUDES)

$(KOBJSDIR)/%.o : %.c
	%compile_q cmd="$(KERNEL_CC)" opt="$(CFLAGS) $(USER_CFLAGS) -I$(AROSDIR)/Development/include -I$(GENINCDIR)"

$(KOBJSDIR)/%.o : %.S
	%compile_q cmd="$(KERNEL_CC)" opt="$(CFLAGS) $(AFLAGS) $(USER_AFLAGS) -I$(AROSDIR)/Development/include -I$(GENINCDIR)"

$(KOBJSDIR)/%.d : %.c
	%mkdepend_q

# Localize symbols, so that we don't get name clashes when linking
#
# .. except for exec.library. Our boot code needs symbols from it
#    (PrepareMoveExecBase, InitKickTags, etc)
%/exec_library.ko: %/exec_library.o
	$(Q)$(CP) $< $@

# .. except for kernel.resource. Our boot code needs symbols from it
#    (krnPrepareExecBase and krnCreateMemHeader)
%/kernel_resource.ko: %/kernel_resource.o
	$(Q)$(CP) $< $@

# .. except for expansion.library. Our boot code needs symbols from it
#    (__MemoryTest)
%/expansion_library.ko: %/expansion_library.o
	$(Q)$(CP) $< $@

# Localize symbols for everybody else though!
%.ko: %.o
	$(Q)$(NM_PLAIN) --defined-only $< | cut -d' ' -f3 >$@.sym
	$(Q)$(OBJCOPY) --localize-symbols $@.sym $< $@

DEPS		:= $(foreach f, $(FILES), $(TARGETDIR)/$(f).d)
-include $(DEPS)

###########################################################################

## Compressed elf for AROSBootstrap

#MM- kernel-link-amiga-m68k: kernel-boot-elf
#MM- kernel-link-amiga-m68k-quick: kernel-boot-elf-quick

#MM kernel-boot-elf:
#MM kernel-boot-elf-quick:
kernel-boot-elf: $(AROSARCHDIR)/aros.elf
kernel-boot-elf-quick: $(AROSARCHDIR)/aros.elf

# Main ROM, that must live in MEMF_LOCAL memory

FILES=mmu
AFILES=

KLIBS   := exec expansion
KDEVS   := 
KHNDLRS := 
KHIDDS  := 
KRSRCS  := kernel
KHOOKS  := diag

KOBJS_local := $(addprefix $(KOBJSDIR)/,$(addsuffix _library.ko ,$(KLIBS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _device.ko  ,$(KDEVS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _handler.ko ,$(KHNDLRS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _hidd.ko    ,$(KHIDDS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _resource.ko,$(KRSRCS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _driver.ko  ,$(KDRVRS) )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _hook.ko    ,$(KHOOKS) ))

OBJS_local:= $(addprefix $(KOBJSDIR)/,$(addsuffix .o,$(AFILES))) \
	    $(addprefix $(KOBJSDIR)/,$(addsuffix .o,$(FILES)))

FILES=start early debug
AFILES=rom_entry rom_init cpu_detect superstack_swap

OBJS_start := $(addprefix $(KOBJSDIR)/,$(addsuffix .o,$(AFILES))) \
	      $(addprefix $(KOBJSDIR)/,$(addsuffix .o,$(FILES)))


# Everything else. Can live in MEMF_ANY
FILES   := 
AFILES  := 

KLIBS   := aros utility dos oop mathffp mathieeesingbas partition \
           keymap graphics layers intuition gadtools icon workbench setpatch
KDEVS   := timer input keyboard console trackdisk gameport audio ata cd
KHNDLRS := cdfs con afs ram
KHIDDS  := hiddclass graphics keyboard mouse amigakbd amigamouse amigavideo uaegfx ata_gayle
KRSRCS  := battclock processor lddemon dosboot cia potgo disk \
           misc shell shellcommands workbook wbtag card FileSystem
KHOOKS  := alert romboot

KOBJS_any := \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _library.ko ,$(KLIBS)  )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _device.ko  ,$(KDEVS)  )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _handler.ko ,$(KHNDLRS))) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _hidd.ko    ,$(KHIDDS) )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _resource.ko,$(KRSRCS) )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _driver.ko  ,$(KDRVRS) )) \
	$(addprefix $(KOBJSDIR)/,$(addsuffix _hook.ko    ,$(KHOOKS) ))

$(DISTDIR)/aros-amiga-m68k-ram.elf : $(DEPLIBS) $(SRCDIR)/$(CURDIR)/mmakefile.src \
	$(OBJS_start) \
	$(OBJS_local) $(KOBJS_local) \
        $(OBJS_any) $(KOBJS_any) \
	$(SRCDIR)/$(CURDIR)/aros-ram.ld \
	$(GENDIR)/start_objs.ld \
	$(GENDIR)/local_objs.ld \
	$(GENDIR)/any_objs.ld
	@$(MKDIR) $(DISTDIR)
	@$(ECHO) Linking $@...
	$(Q)$(KERNEL_CC) -Wl,-r \
		-static -nostartfiles -nostdlib \
		-Wl,--defsym -Wl,start=0x0 \
		-Wl,--defsym -Wl,SysBase=0x4 \
		-Wl,--defsym -Wl,AbsExecBase=0x4 \
		-m68000 \
		-o $@ -Wl,-T -Wl,$(SRCDIR)/$(CURDIR)/aros-ram.ld \
		-L$(AROS_LIB) $(LIBS) -lgcc


$(AROSARCHDIR)/aros.elf: $(DISTDIR)/aros-amiga-m68k-ram.elf \
	$(SRCDIR)/$(CURDIR)/mmakefile.src
	$(Q)$(MKDIR) $(AROSARCHDIR)
	$(Q)$(TARGET_OBJCOPY) \
	    --strip-unneeded \
	    $< $@

%common
