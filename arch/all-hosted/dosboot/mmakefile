# $Id: mmakefile.src 29897 2008-10-27 09:27:10Z sonic $
include $(TOP)/config/make.cfg

#MM- kernel-dosboot-mingw32 : kernel-dosboot-hosted
#MM- kernel-dosboot-linux   : kernel-dosboot-hosted
#MM- kernel-dosboot-darwin  : kernel-dosboot-hosted
#MM- kernel-dosboot-freebsd : kernel-dosboot-hosted

USER_INCLUDES	:= -I$(GENINCDIR)
USER_CFLAGS	:= -I$(TOP)/rom/dosboot -I..

ifeq (boot ,)
  $(error no files or asmfiles given)
endif

BDID := $(BDID)_
ifneq ($(filter $(TARGET),kernel-dosboot-hosted),)
BDTARGETID := $(BDID)
endif

#MM- kernel-dosboot : kernel-dosboot-$(ARCH)-$(CPU) kernel-dosboot-$(ARCH) kernel-dosboot-$(CPU)
#MM- kernel-dosboot-linklib : kernel-dosboot-$(ARCH)-$(CPU) kernel-dosboot-$(ARCH) kernel-dosboot-$(CPU)
#MM- kernel-dosboot-kobj : kernel-dosboot-$(ARCH)-$(CPU) kernel-dosboot-$(ARCH) kernel-dosboot-$(CPU)

#MM kernel-dosboot-hosted : kernel-dosboot-includes

ifeq (hosted,)
  $(error argument arch has to be non empty for the rule_compile_archspecific macro)
endif

BD_OBJDIR$(BDID)  := $(GENDIR)/rom/dosboot/arch
BD_COBJS$(BDID)   := $(addsuffix .o,$(addprefix $(BD_OBJDIR$(BDID))/,$(notdir boot)))
BD_ASMOBJS$(BDID) := $(addsuffix .o,$(addprefix $(BD_OBJDIR$(BDID))/,$(notdir )))
BD_OBJS$(BDID)    := $(BD_COBJS$(BDID)) $(BD_ASMOBJS$(BDID))
BD_DEPS$(BDID)    := $(addsuffix .d,$(addprefix $(BD_OBJDIR$(BDID))/,$(notdir boot)))

ifeq ($(TARGET),kernel-dosboot-hosted)
vpath %.c $(filter-out ./,$(dir boot))
vpath %.s $(filter-out ./,$(dir ))
vpath %.S $(filter-out ./,$(dir ))
endif

$(BD_OBJS$(BDID)) : | $(BD_OBJDIR$(BDID))
GLOB_MKDIRS += $(BD_OBJDIR$(BDID))

#MM
kernel-dosboot-hosted :: $(BD_OBJS$(BDID))

ifeq ($(findstring target,host kernel target),)
  $(error unknown compiler target)
endif
ifeq (target,target)
$(BD_COBJS$(BDID)) $(BD_DEPS$(BDID)) : TMP_CMD:=$(TARGET_CC)
endif
ifeq (target,host)
$(BD_COBJS$(BDID)) $(BD_DEPS$(BDID)) : TMP_CMD:=$(HOST_CC)
endif
ifeq (target,kernel)
$(BD_COBJS$(BDID)) $(BD_DEPS$(BDID)) : TMP_CMD:=$(KERNEL_CC) $(KERNEL_CFLAGS)
endif
ifneq (,)
$(BD_COBJS$(BDID)) : TMP_CFLAGS:=$(CFLAGS) -I$(GENDIR)/rom/dosboot \
                     -include $(GENDIR)/rom/dosboot/include/_deflibdefs.h
else
$(BD_COBJS$(BDID)) : TMP_CFLAGS:=$(CFLAGS)
endif
ifeq ($(TARGET),kernel-dosboot-hosted)
$(BD_OBJDIR$(BDID))/%.o : %.c
	@$(ECHO) "Compiling $<"
	@$(IF) $(TMP_CMD) $(TMP_CFLAGS) -c $< -o $@ > $(GENDIR)/cerrors 2>&1 ; then \
	    $(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
		$(ECHO) "$<: $(TMP_CMD) $(TMP_CFLAGS) -c $< -o $@" >> $(GENDIR)/errors ; \
		tee < $(GENDIR)/cerrors -a $(GENDIR)/errors ; \
	    else \
		$(NOP) ; \
	    fi ; \
	else \
	    $(ECHO) "Compile failed: $(TMP_CMD) $(TMP_CFLAGS) -c $< -o $@" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi
endif

ifeq (,)
$(BD_DEPS$(BDID)) : TMP_DFLAGS:=$(CFLAGS)
else
$(BD_DEPS$(BDID)) : TMP_DFLAGS:=
endif
ifeq ($(TARGET),kernel-dosboot-hosted)
$(BD_OBJDIR$(BDID))/%.d : %.c
	@$(IF) $(TEST) ! -d $(dir $@) ; then $(MKDIR) $(dir $@) ; else $(NOP) ; fi
	@$(ECHO) "Makedepend $(CURDIR)/$(notdir $<)..."
	@AROS_CC="$(TMP_CMD)" $(MKDEPEND) $(TMP_DFLAGS) $< -o $@
endif

$(BD_ASMOBJS$(BDID)) : AFLAGS:=$(AFLAGS)

ifeq ($(TARGET),kernel-dosboot-hosted)
$(BD_OBJDIR$(BDID))/%.o : %.s
	@$(ECHO) "Assembling $(notdir $<)..."
	@$(IF) $(CC) $(AFLAGS) $< -o $@ > $(GENDIR)/cerrors 2>&1 ; then \
	    $(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
		$(ECHO) "$(notdir $<): $(CC) $(AFLAGS) $< -o $@" >> $(GENDIR)/errors ; \
		$(CAT) $(GENDIR)/cerrors >> $(GENDIR)/errors ; \
	    else \
		$(NOP) ; \
	    fi ; \
	else \
	    $(ECHO) "Assemble failed: $(CC) $(AFLAGS) $< -o $@" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi
$(BD_OBJDIR$(BDID))/%.o : %.S
	@$(ECHO) "Assembling $(notdir $<)..."
	@$(IF) $(CC) $(AFLAGS) $< -o $@ > $(GENDIR)/cerrors 2>&1 ; then \
	    $(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
		$(ECHO) "$(notdir $<): $(CC) $(AFLAGS) $< -o $@" >> $(GENDIR)/errors ; \
		$(CAT) $(GENDIR)/cerrors >> $(GENDIR)/errors ; \
	    else \
		$(NOP) ; \
	    fi ; \
	else \
	    $(ECHO) "Assemble failed: $(CC) $(AFLAGS) $< -o $@" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi
endif

ifneq ($(BD_DEPS$(BDID)),)
  ifneq (kernel-dosboot-hosted,)
    ifneq ($(findstring $(TARGET),kernel-dosboot-hosted),)
      -include $(BD_DEPS$(BDID))
    endif
  else
    ifeq (,$(filter clean% %clean %clean% setup% includes% %setup,$(TARGET)))
      -include $(BD_DEPS$(BDID))
    endif
  endif
endif

# Delete generated makefiles
#MM
clean ::
	@$(RM) $(TOP)/$(CURDIR)/mmakefile $(TOP)/$(CURDIR)/mmakefile.bak

include $(SRCDIR)/config/make.tail

BDID := $(BDTARGETID)
