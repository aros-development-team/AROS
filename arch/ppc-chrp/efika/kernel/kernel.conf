##begin config
version 2.0
residentpri 127
libbase KernelBase
libbasetype struct KernelBase
##end config
##begin cdef
#include <aros/kernel.h>
#include <inttypes.h>
#include <utility/tagitem.h>
#include <stdarg.h>
##end cdef
##begin cdefprivate
#include "kernel_intern.h"
##end cdefprivate
##begin functionlist
KRN_SchedType KrnGetScheduler() ()
void KrnSetScheduler(KRN_SchedType sched) (D0)
void KrnCause() ()
void KrnDispatch() ()
void KrnSwitch() ()
void KrnSchedule() ()
void * KrnAddIRQHandler(uint8_t irq, void *handler, void *handlerData, void *handlerData2) (D0, A0, A1, A2)
void KrnRemIRQHandler(void * handle) (A0)
void KrnCli() ()
void KrnSti() ()
struct TagItem *KrnGetBootInfo() ()
int KrnBug(const char *format, va_list args) (A0, A1)
int KrnIsSuper() ()
void * KrnAddExceptionHandler(uint8_t irq, void *handler, void *handlerData, void *handlerData2) (D0, A0, A1, A2)
void KrnRemExceptionHandler(void * handle) (A0)
int KrnMapGlobal(void *virtual, void *physical, uint32_t length, KRN_MapAttr flags) (A0, A1, D0, D1)
int KrnUnmapGlobal(void *virtual, uint32_t length) (A0, D0)
void *KrnCreateContext() ()
void KrnDeleteContext(void *context) (A0)
void *KrnVirtualToPhysical(void *virt) (A0)
void KrnSetProtection(void *address, uint32_t length, KRN_MapAttr flags) (A0, D0, D1) 
void KrnRegisterModule(const char *name, void *sections, void *eh) (A0, A1, A2)
void KrnUnregisterModule(void *address) (A0)
##end functionlist
