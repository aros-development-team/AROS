# $Id$
include $(TOP)/config/make.cfg


#MM bootiso-chrp-ppc-efika: \
#MM     kernel-chrp-ppc-efika \
#MM		kernel-chrp-ppc-irq \
#MM		kernel-package-chrp-ppc-efika \
#MM		arch-common-boot-generatebootsig \
#MM		workbench-complete

#MM kernel-package-chrp-ppc-efika: \
#MM	linklibs-clib \
#MM	kernel-bootloader-chrp-ppc-efika \
#MM kernel-bestcomm-chrp-ppc-efika \
#MM	kernel-expansion \
#MM	kernel-utility \
#MM kernel-openfirmware \
#MM	kernel-oop \
#MM	kernel-battclock \
#MM	kernel-hidd \
#MM	kernel-mathieeesingbas \
#MM	kernel-aros \
#MM	kernel-misc \
#MM	kernel-timer \
#MM	kernel-pci \
#MM kernel-pci-efika \
#MM	kernel-graphics \
#MM	kernel-cgfx-kobj \
#MM	kernel-layers \
#MM	kernel-keymap \
#MM	kernel-intuition \
#MM	kernel-input \
#MM	kernel-gameport \
#MM	kernel-keyboard \
#MM	kernel-console \
#MM	kernel-fs-con \
#MM	kernel-fs-packet \
#MM	kernel-workbench \
#MM	kernel-boot \
#MM kernel-dos \
#MM kernel-dosboot \
#MM kernel-ata \
#MM	hidd-i2c \
#MM	hidd-radeon \
#MM	hidd-usb \
#MM	workbench-fs-nil \
#MM	workbench-libs-partition \
#MM	contrib-cdvdfs \
#MM contrib-sfs \
#MM contrib-amberram \
#MM	workbench-hidd-graphics

PKG_GEN_LIBS 	:= aros partition expansion utility oop graphics layers intuition keymap workbench boot dos
PKG_GEN_RSRC 	:= dosboot bestcomm
PKG_GEN_DEVS 	:= input gameport keyboard console
PKG_GEN_HANDLERS:= con nil amberram cdrom
PKG_GEN_HIDDS	:= graphics hiddclass i2c pci

PKG_EFI_LIBS 	:= 
PKG_EFI_RSRC 	:= battclock bootloader openfirmware
PKG_EFI_DEVS 	:= timer ata
PKG_EFI_HANDLERS:= 
PKG_EFI_HIDDS	:= radeon pci-efika irq

PKG_HIDDS_USB 	:= usb ohci
PKG_USB			:= hid storage

MODULES_GENERIC := \
	$(addprefix $(BINDIR)/Libs/, $(addsuffix .library, $(PKG_GEN_LIBS))) \
	$(addprefix $(BINDIR)/Devs/, $(addsuffix .device, $(PKG_GEN_DEVS))) \
	$(addprefix $(BINDIR)/Devs/, $(addsuffix .resource, $(PKG_GEN_RSRC))) \
	$(addprefix $(BINDIR)/Devs/, $(addsuffix .handler, $(PKG_GEN_HANDLERS))) \
	$(addprefix $(BINDIR)/Devs/Drivers/, $(addsuffix .hidd, $(PKG_GEN_HIDDS)))

MODULES_EFIKA := \
	$(addprefix $(BINDIR)/Libs/, $(addsuffix .library, $(PKG_EFI_LIBS))) \
	$(addprefix $(BINDIR)/Devs/, $(addsuffix .device, $(PKG_EFI_DEVS))) \
	$(addprefix $(BINDIR)/Devs/, $(addsuffix .resource, $(PKG_EFI_RSRC))) \
	$(addprefix $(BINDIR)/Devs/, $(addsuffix .handler, $(PKG_EFI_HANDLERS))) \
	$(addprefix $(BINDIR)/Devs/Drivers/, $(addsuffix .hidd, $(PKG_EFI_HIDDS)))

MODULES_USB := \
	$(addprefix $(BINDIR)/Devs/Drivers/, $(addsuffix .hidd, $(PKG_HIDDS_USB))) \
	$(addprefix $(BINDIR)/Classes/USB/, $(addsuffix .hidd, $(PKG_USB)))

.PHONY: $(PORTSDIR)/aros-efika.iso
	
kernel-package-chrp-ppc-efika:
	$(RM) -rf $(BINDIR)/boot/modules
	$(RM) -rf $(BINDIR)/.pkg
	%mkdirs_q $(BINDIR)/boot/modules
	%mkdirs_q $(BINDIR)/.pkg
	@mv $(MODULES_GENERIC) $(BINDIR)/.pkg
	# Dirty hack to link graphics.library with cybergraphics (they use the same graphics_driver!!!)
	$(KERNEL_LD) -r $(BINDIR)/.pkg/graphics.library $(KOBJSDIR)/cybergraphics_library.o -o $(BINDIR)/.pkg/gfx.library
	$(RM) $(BINDIR)/.pkg/graphics.library
	$(TOP)/tools/package/pkg c $(BINDIR)/boot/modules/aros-ppc-generic.pkg $(BINDIR)/.pkg
	$(RM) -rf $(BINDIR)/.pkg/*
	@mv $(MODULES_EFIKA) $(BINDIR)/.pkg
	$(TOP)/tools/package/pkg c $(BINDIR)/boot/modules/aros-ppc-efika.pkg $(BINDIR)/.pkg
	$(RM) -rf $(BINDIR)/.pkg/*
	@mv $(MODULES_USB) $(BINDIR)/.pkg
	$(TOP)/tools/package/pkg c $(BINDIR)/boot/modules/aros-usb.pkg $(BINDIR)/.pkg
	$(RM) -rf $(BINDIR)/.pkg






bootiso-chrp-ppc-efika: $(PORTSDIR)/aros-efika.iso

$(PORTSDIR)/aros-efika.iso:
		%mkdirs_q $(AROSDIR)/S
		@$(CP) $(TOP)/workbench/s/Startup-Sequence $(AROSDIR)/S/Startup-Sequence
		@$(MKDIR) -p "$(AROSDIR)/Tools/Boot Disks"
		@$(MKDIR) -p "$(PORTSDIR)"
		@mkisofs -f \
                -o $(PORTSDIR)/aros$(AROS_TARGET_SUFFIX)-$(AROS_TARGET_ARCH)-$(AROS_TARGET_CPU).iso \
                -allow-leading-dots \
                -iso-level 4 \
                -V "AROS Live CD" \
                -publisher "AROS Development Team" \
                -sysid "AROS-$(AROS_TARGET_CPU)-$(AROS_TARGET_ARCH)" \
                -l -J -r \
                $(AROSDIR)

#                -no-emul-boot \
#                -b bootloader \
                