# $Id$
include $(TOP)/config/make.cfg

TARGETDIR 	:= $(GENDIR)/$(CURDIR)

BOBJS		:= $(TARGETDIR)/bootstrap.o $(TARGETDIR)/elfloader32.o \
		   $(TARGETDIR)/hostlib.o $(TARGETDIR)/debug.o	       \
		   $(TARGETDIR)/shutdown.o $(TARGETDIR)/icon.o
FILES		:= bootstrap elfloader32 hostlib debug

KOBJS_DEVICES   := $(KOBJSDIR)/timer_device.o	     $(KOBJSDIR)/gameport_device.o	   \
		   $(KOBJSDIR)/input_device.o	     $(KOBJSDIR)/console_device.o	   \
		   $(KOBJSDIR)/keyboard_device.o
KOBJS_HIDD	:= $(KOBJSDIR)/hiddclass_hidd.o	     $(KOBJSDIR)/graphics_hidd.o	   \
		   $(KOBJSDIR)/wingdi_hidd.o
KOBJS_LIBS	:= $(KOBJSDIR)/exec_library.o	     $(KOBJSDIR)/expansion_library.o	   \
		   $(KOBJSDIR)/boot_library.o	     $(KOBJSDIR)/dos_library.o		   \
		   $(KOBJSDIR)/utility_library.o     $(KOBJSDIR)/intuition_library.o	   \
		   $(KOBJSDIR)/keymap_library.o      $(KOBJSDIR)/cybergraphics_library.o   \
		   $(KOBJSDIR)/oop_library.o	     $(KOBJSDIR)/graphics_library.o	   \
		   $(KOBJSDIR)/layers_library.o	     $(KOBJSDIR)/aros_library.o
K_RES		:= $(KOBJSDIR)/kernel_resource.o     $(KOBJSDIR)/hostlib_resource.o	   \
		   $(KOBJSDIR)/battclock_resource.o	   				   \
		   $(KOBJSDIR)/bootmenu_resource.o   $(KOBJSDIR)/bootloader_resource.o	   \
		   $(KOBJSDIR)/dosboot_resource.o
KOBJS_HANDLERS  := $(KOBJSDIR)/emul_handler.o	     $(KOBJSDIR)/packet_handler.o	   \
		   $(KOBJSDIR)/amberram_handler.o    $(KOBJSDIR)/nil_handler.o		   \
		   $(KOBJSDIR)/con_handler.o

KOBJS := $(K_RES) $(KOBJS_HANDLERS) $(KOBJS_LIBS) $(KOBJS_DEVICES) $(KOBJS_HIDD)

#MM- AROS-mingw32-$(CPU): kernel-link-mingw32 workbench-hosted kernel-bootstrap-mingw32 arch-common-boot-generatebootsig
#MM kernel-link-mingw32: kernel-kernel-mingw32-kobj	    \
#MM			 kernel-bootloader-mingw32-kobj	    \
#MM			 kernel-hostlib-mingw32-kobj	    \
#MM			 kernel				    \
#MM			 kernel-fs-emul-mingw32-kobj	    \
#MM			 kernel-fs-packet-kobj		    \
#MM			 kernel-hidd-graphics-kobj	    \
#MM			 kernel-hidd-wingdi-kobj	    \
#MM			 contrib-amberram-kobj

#MM
kernel-bootstrap-mingw32: setup-mingw32 $(BINDIR)/boot/AROSBootstrap.exe

#MM
kernel-link-mingw32: $(BINDIR)/boot/aros-mingw32
#MM
kernel-link-mingw32-quick: $(BINDIR)/boot/aros-mingw32

setup-mingw32 :
	%mkdirs_q $(BINDIR)/boot $(OSGENDIR)/boot $(TARGETDIR)

$(BINDIR)/boot/aros-mingw32: setup-mingw32 $(KOBJS)
	@$(ECHO) Linking $@...
	@$(TARGET_CC) $(GENMAP) $(OSGENDIR)/boot/kernel.map \
	  -o $@ $(KOBJS) $(NOSTARTUP_LDFLAGS)\
	  -L$(LIBDIR) -lautoinit -llibinit -lamiga -larossupport -lrom -larosm -lhiddstubs -lhiddgraphicsstubs

$(TARGETDIR)/icon.o: $(SRCDIR)/$(CURDIR)/icon.rc $(SRCDIR)/$(CURDIR)/icon.ico
	@$(ECHO) Compiling $<...
	@$(KERNEL_RESCOMP) --output-format=coff $< $@

$(BINDIR)/boot/AROSBootstrap.exe: $(BOBJS)
	@$(ECHO) Linking $@...
	@$(KERNEL_CC) $(KERNEL_CFLAGS) -o $@ $(BOBJS)

#MM
clean ::
	-$(RM) $(TESTS)

$(TARGETDIR)/%.d : %.c
	%mkdepend_q cc="$(KERNEL_CC) $(KERNEL_CFLAGS) -I$(GENINCDIR)"

DEPS		:= $(foreach f, $(FILES), $(TARGETDIR)/$(f).d)
-include $(DEPS)

$(TARGETDIR)/%.o : %.c
	@$(ECHO) Compiling $<...
	@$(KERNEL_CC) $(KERNEL_CFLAGS) -o $@ -c $< -I$(GENINCDIR) -I$(TOP)/rom/exec

%common
