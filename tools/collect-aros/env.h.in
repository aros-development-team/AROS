#ifndef _ENV_H_
#define _ENV_H_

/*
 * Under Windows we can't use paths provided by configure because they are UNIX-style
 * and we don't use MSYS
 */
#ifdef _WIN32
#ifndef _STANDALONE_
#define _STANDALONE_
#endif
#endif

#ifdef _NATIVE_
#define LD_NAME      "/Development/bin/ld"
#define STRIP_NAME   "/Development/bin/strip"
#define NM_NAME      "/Development/bin/nm"
#define OBJDUMP_NAME "/Development/bin/objdump"
#endif
#ifdef _CROSS_
#define LD_NAME      "@AROS_CROSSTOOLSDIR@/@aros_target_cpu@-aros-ld"
#define STRIP_NAME   "@AROS_CROSSTOOLSDIR@/@aros_target_cpu@-aros-strip"
#define NM_NAME      "@AROS_CROSSTOOLSDIR@/@aros_target_cpu@-aros-nm"
#define OBJDUMP_NAME "@AROS_CROSSTOOLSDIR@/@aros_target_cpu@-aros-objdump"
#endif
#ifdef _STANDALONE_
#define LD_NAME      "@aros_target_cpu@-aros-ld"
#define STRIP_NAME   "@aros_target_cpu@-aros-strip"
#define NM_NAME      "@aros_target_cpu@-aros-nm"
#define OBJDUMP_NAME "@aros_target_cpu@-aros-objdump"
#endif

#ifndef LD_NAME
/* The following lines will be patched by AROS-SDK-Install */
#define LD_NAME      "@orig_target_ld@"
#define STRIP_NAME   "@aros_target_strip@"
#define NM_NAME      "@aros_target_nm@"
#define OBJDUMP_NAME "@aros_target_objdump@"
#endif

#define TARGET_CPU_@aros_target_cpu@

/*
 * Having these conditions here helps to bootstrap a crosscompiler.
 * You don't have to look up a value in configure script any more.
 */
#ifdef TARGET_CPU_m68k
#define OBJECT_FORMAT "-mm68kelf"
#endif
#ifdef TARGET_CPU_ppc
#define OBJECT_FORMAT "-melf32ppc"
#endif
#ifdef TARGET_CPU_i386
#define OBJECT_FORMAT "-melf_i386"
#endif
#ifdef TARGET_CPU_x86_64
#define OBJECT_FORMAT "-melf_x86_64"
#endif
#ifdef TARGET_CPU_arm
#define OBJECT_FORMAT "-marmelf_aros"
#endif
#ifdef TARGET_CPU_sparc
#define OBJECT_FORMAT "-melf_sparc"
#endif
#ifndef OBJECT_FORMAT
#error Unknown object format for your target CPU
#endif

#endif /* !_ENV_H */
