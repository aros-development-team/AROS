diff -ruN binutils-2.32-orig/bfd/Makefile.in binutils-2.32/bfd/Makefile.in
--- binutils-2.32-orig/bfd/Makefile.in	2019-02-02 16:47:56.000000000 +0100
+++ binutils-2.32/bfd/Makefile.in	2019-03-12 20:52:37.000000000 +0100
@@ -719,6 +719,7 @@
 	elf-nacl.lo \
 	elf-strtab.lo \
 	elf-vxworks.lo \
+	elf-aros.lo \
 	elf.lo \
 	elf32-am33lin.lo \
 	elf32-arc.lo \
@@ -856,6 +857,7 @@
 	elf-nacl.c \
 	elf-strtab.c \
 	elf-vxworks.c \
+	elf-aros.c \
 	elf.c \
 	elf32-am33lin.c \
 	elf32-arc.c \
@@ -1413,6 +1415,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf-properties.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf-strtab.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf-vxworks.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf-aros.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-aarch64.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-am33lin.Plo@am__quote@
diff -ruN binutils-2.32-orig/bfd/config.bfd binutils-2.32/bfd/config.bfd
--- binutils-2.32-orig/bfd/config.bfd	2019-01-19 17:01:32.000000000 +0100
+++ binutils-2.32/bfd/config.bfd	2019-03-09 20:48:07.000000000 +0100
@@ -230,7 +230,7 @@
     targ_archs="$targ_archs bfd_i386_arch bfd_powerpc_arch bfd_rs6000_arch"
     want64=true
     ;;
-  aarch64-*-elf | aarch64-*-rtems*)
+  aarch64-*-elf | aarch64-*-aros | aarch64-*-rtems*)
     targ_defvec=aarch64_elf64_le_vec
     targ_selvecs="aarch64_elf64_be_vec aarch64_elf32_le_vec aarch64_elf32_be_vec arm_elf32_le_vec arm_elf32_be_vec"
     want64=true
@@ -387,6 +387,10 @@
     targ_defvec=arm_elf32_le_vec
     targ_selvecs=arm_elf32_be_vec
     ;;
+  arm*-*-aros)
+    targ_defvec=arm_elf32_aros_le_vec
+    targ_selvecs="arm_elf32_fdpic_le_vec arm_elf32_aros_be_vec arm_elf32_be_vec arm_elf32_le_vec arm_elf32_fdpic_be_vec"
+    ;;
   arm-*-elf | arm*-*-freebsd* | arm*-*-linux-* | arm*-*-conix* | \
   arm*-*-uclinux* | arm-*-kfreebsd*-gnu | \
   arm*-*-eabi* | arm-*-rtems* | arm*-*-uclinuxfdpiceabi)
@@ -587,7 +591,7 @@
     ;;
   i[3-7]86-*-aros*)
     targ_defvec=i386_elf32_vec
-    targ_selvecs=iamcu_elf32_vec
+    targ_selvecs="iamcu_elf32_vec x86_64_elf64_vec"
     ;;
   i[3-7]86-*-dicos*)
     targ_defvec=i386_elf32_vec
@@ -718,6 +722,11 @@
     targ_selvecs=i386_elf32_vec
     want64=true
     ;;
+  x86_64-*-aros*)
+    targ_defvec=x86_64_elf64_vec
+    targ_selvecs=i386_elf32_vec
+    want64=true
+    ;;
 #endif
   i[3-7]86-*-lynxos*)
     targ_defvec=i386_elf32_vec
@@ -1103,6 +1112,11 @@
     targ_selvecs=rs6000_xcoff_vec
     want64=true
     ;;
+  powerpc64-*-aros*)
+    targ_defvec=powerpc_elf64_vec
+    targ_selvecs="powerpc_elf64_le_vec powerpc_elf32_vec powerpc_elf32_le_vec"
+    want64=true
+    ;;
   powerpc64-*-freebsd*)
     targ_defvec=powerpc_elf64_fbsd_vec
     targ_selvecs="powerpc_elf64_vec powerpc_elf32_vec powerpc_elf32_fbsd_vec powerpc_elf32_le_vec rs6000_xcoff_vec rs6000_xcoff64_vec rs6000_xcoff64_aix_vec"
@@ -1121,6 +1135,11 @@
     want64=true
     ;;
 #endif
+  powerpc-*-aros*)
+    targ_defvec=powerpc_elf32_vec
+    targ_selvecs="powerpc_elf64_vec powerpc_elf64_le_vec powerpc_elf32_le_vec"
+    want64=true
+    ;;
   powerpc-*-*freebsd*)
     targ_defvec=powerpc_elf32_fbsd_vec
     targ_selvecs="rs6000_xcoff_vec powerpc_elf32_vec powerpc_elf32_le_vec powerpc_boot_vec"
diff -ruN binutils-2.32-orig/bfd/configure binutils-2.32/bfd/configure
--- binutils-2.32-orig/bfd/configure	2019-02-02 16:47:56.000000000 +0100
+++ binutils-2.32/bfd/configure	2019-03-12 20:51:36.000000000 +0100
@@ -14669,16 +14669,18 @@
     aout_vec)			 tb="$tb host-aout.lo aout32.lo" ;;
     arc_elf32_be_vec)		 tb="$tb elf32-arc.lo elf32.lo $elf" ;;
     arc_elf32_le_vec)		 tb="$tb elf32-arc.lo elf32.lo $elf" ;;
-    arm_elf32_be_vec)		 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_le_vec)		 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_fdpic_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_fdpic_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_nacl_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_nacl_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_symbian_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_symbian_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_vxworks_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_vxworks_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
+    arm_elf32_be_vec)		 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_le_vec)		 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_aros_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_aros_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_fdpic_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_fdpic_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_nacl_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_nacl_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_symbian_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_symbian_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_vxworks_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_vxworks_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
     arm_pe_be_vec)		 tb="$tb pe-arm.lo peigen.lo $coff" ;;
     arm_pe_le_vec)		 tb="$tb pe-arm.lo peigen.lo $coff" ;;
     arm_pe_wince_be_vec)	 tb="$tb pe-arm-wince.lo pe-arm.lo peigen.lo $coff" ;;
diff -ruN binutils-2.32-orig/bfd/configure.ac binutils-2.32/bfd/configure.ac
--- binutils-2.32-orig/bfd/configure.ac	2019-01-19 17:01:32.000000000 +0100
+++ binutils-2.32/bfd/configure.ac	2019-03-12 20:50:40.000000000 +0100
@@ -437,16 +437,18 @@
     aout_vec)			 tb="$tb host-aout.lo aout32.lo" ;;
     arc_elf32_be_vec)		 tb="$tb elf32-arc.lo elf32.lo $elf" ;;
     arc_elf32_le_vec)		 tb="$tb elf32-arc.lo elf32.lo $elf" ;;
-    arm_elf32_be_vec)		 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_le_vec)		 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_fdpic_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_fdpic_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_nacl_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_nacl_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_symbian_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_symbian_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_vxworks_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
-    arm_elf32_vxworks_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo $elf" ;;
+    arm_elf32_be_vec)		 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_le_vec)		 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_aros_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_aros_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_fdpic_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_fdpic_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_nacl_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_nacl_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_symbian_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_symbian_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_vxworks_be_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
+    arm_elf32_vxworks_le_vec)	 tb="$tb elf32-arm.lo elf32.lo elf-nacl.lo elf-vxworks.lo elf-aros.lo $elf" ;;
     arm_pe_be_vec)		 tb="$tb pe-arm.lo peigen.lo $coff" ;;
     arm_pe_le_vec)		 tb="$tb pe-arm.lo peigen.lo $coff" ;;
     arm_pe_wince_be_vec)	 tb="$tb pe-arm-wince.lo pe-arm.lo peigen.lo $coff" ;;
diff -ruN binutils-2.32-orig/bfd/elf-aros.c binutils-2.32/bfd/elf-aros.c
--- binutils-2.32-orig/bfd/elf-aros.c	1970-01-01 01:00:00.000000000 +0100
+++ binutils-2.32/bfd/elf-aros.c	2019-03-17 13:43:57.000000000 +0100
@@ -0,0 +1,90 @@
+/* AROS support for ELF
+   Copyright (C) 2005-2019 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+
+/* This file provides routines used by all AROS targets.  */
+
+#include "sysdep.h"
+#include "bfd.h"
+#include "libbfd.h"
+#include "elf-bfd.h"
+#include "elf-aros.h"
+
+/* Copy relocations into the output file. Changes all relocations
+   from symbol-relative to section-relative. In next step strip can
+   then remove the symbols initially involved with relocations */
+
+bfd_boolean
+elf_aros_emit_relocs (bfd *output_bfd,
+		      asection *input_section,
+		      Elf_Internal_Shdr *input_rel_hdr,
+		      Elf_Internal_Rela *internal_relocs,
+		      struct elf_link_hash_entry **rel_hash)
+{
+  const struct elf_backend_data *bed;
+  int j;
+
+  bed = get_elf_backend_data (output_bfd);
+
+  if (output_bfd->flags & (DYNAMIC|EXEC_P))
+    {
+      Elf_Internal_Rela *irela;
+      Elf_Internal_Rela *irelaend;
+      struct elf_link_hash_entry **hash_ptr;
+
+      for (irela = internal_relocs,
+	     irelaend = irela + (NUM_SHDR_ENTRIES (input_rel_hdr)
+				 * bed->s->int_rels_per_ext_rel),
+	     hash_ptr = rel_hash;
+	   irela < irelaend;
+	   irela += bed->s->int_rels_per_ext_rel,
+	     hash_ptr++)
+	{
+	  if (*hash_ptr
+	      && ((*hash_ptr)->root.type == bfd_link_hash_defined
+		  || (*hash_ptr)->root.type == bfd_link_hash_defweak
+		  || (*hash_ptr)->root.type == bfd_link_hash_common)
+	      && (*hash_ptr)->root.u.def.section->output_section != NULL)
+	    {
+	      /* Remove relocation dependency on symbol. Use sections only */
+	      for (j = 0; j < bed->s->int_rels_per_ext_rel; j++)
+		{
+		  asection *sec = (*hash_ptr)->root.u.def.section;
+		  int this_idx = sec->output_section->target_index;
+
+		  irela[j].r_info
+		    = ELF32_R_INFO (this_idx, ELF32_R_TYPE (irela[j].r_info));
+		  irela[j].r_addend += (*hash_ptr)->root.u.def.value;
+		  irela[j].r_addend += sec->output_offset;
+		}
+	      /* Stop the generic routine adjusting this entry.  */
+	      *hash_ptr = NULL;
+	    }
+	}
+    }
+  return _bfd_elf_link_output_relocs (output_bfd, input_section,
+				      input_rel_hdr, internal_relocs,
+				      rel_hash);
+}
+
+bfd_boolean 
+elf_aros_final_link(bfd *abfd, struct bfd_link_info *link_info)
+{
+  link_info->emitrelocations = 1;
+  link_info->output_bfd->flags &= ~D_PAGED;
+  return bfd_elf_final_link(abfd, link_info);
+}
diff -ruN binutils-2.32-orig/bfd/elf-aros.h binutils-2.32/bfd/elf-aros.h
--- binutils-2.32-orig/bfd/elf-aros.h	1970-01-01 01:00:00.000000000 +0100
+++ binutils-2.32/bfd/elf-aros.h	2019-03-12 20:53:29.000000000 +0100
@@ -0,0 +1,27 @@
+/* AROS support for ELF
+   Copyright (C) 2019 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+
+#include "elf/common.h"
+#include "elf/internal.h"
+
+bfd_boolean elf_aros_emit_relocs
+  (bfd *output_bfd, asection *input_section, Elf_Internal_Shdr *input_rel_hdr,
+   Elf_Internal_Rela *internal_relocs, struct elf_link_hash_entry **rel_hash);
+
+bfd_boolean elf_aros_final_link
+  (bfd *abfd, struct bfd_link_info *link_info);
diff -ruN binutils-2.32-orig/bfd/elf32-arm.c binutils-2.32/bfd/elf32-arm.c
--- binutils-2.32-orig/bfd/elf32-arm.c	2019-01-28 18:09:04.000000000 +0100
+++ binutils-2.32/bfd/elf32-arm.c	2019-03-17 13:40:14.000000000 +0100
@@ -27,6 +27,7 @@
 #include "elf-bfd.h"
 #include "elf-nacl.h"
 #include "elf-vxworks.h"
+#include "elf-aros.h"
 #include "elf/arm.h"
 
 /* Return the relocation section associated with NAME.  HTAB is the
@@ -20296,6 +20297,75 @@
 
 #include "elf32-target.h"
 
+/* AROS target */
+
+#undef TARGET_LITTLE_SYM
+#define TARGET_LITTLE_SYM		arm_elf32_aros_le_vec
+#undef TARGET_LITTLE_NAME
+#define TARGET_LITTLE_NAME		"elf32-littlearm-aros"
+#undef TARGET_BIG_SYM
+#define TARGET_BIG_SYM			arm_elf32_aros_be_vec
+#undef TARGET_BIG_NAME
+#define TARGET_BIG_NAME			"elf32-bigarm-aros"
+#undef elf_match_priority
+#define elf_match_priority			128
+#undef ELF_OSABI
+#define ELF_OSABI				ELFOSABI_AROS
+
+static void
+elf32_arm_aros_begin_write_processing (bfd *abfd,
+				       struct bfd_link_info *link_info)
+{
+  /* File does not need paged attribute, so no aligning required */
+  abfd->flags &= ~D_PAGED;
+  abfd->flags |= HAS_RELOC;
+
+  elf32_arm_begin_write_processing (abfd, link_info);
+}
+
+#undef	elf32_bed
+#define elf32_bed			elf32_arm_aros_bed
+#undef  elf_backend_emit_relocs
+#define elf_backend_emit_relocs		elf_aros_emit_relocs
+
+#undef	ELF_MAXPAGESIZE
+#define ELF_MAXPAGESIZE			0x1000
+#undef	ELF_MINPAGESIZE
+#define ELF_MINPAGESIZE			0x1000
+#undef	ELF_COMMONPAGESIZE
+#define ELF_COMMONPAGESIZE		0x1000
+
+#undef  elf_backend_may_use_rel_p
+#define elf_backend_may_use_rel_p	0
+#undef  elf_backend_may_use_rela_p
+#define elf_backend_may_use_rela_p	1
+#undef  elf_backend_default_use_rela_p
+#define elf_backend_default_use_rela_p	1
+#undef  elf_backend_want_plt_sym
+#define elf_backend_want_plt_sym	0
+
+#undef  elf_backend_begin_write_processing
+#define elf_backend_begin_write_processing elf32_arm_aros_begin_write_processing 
+#undef bfd_elf32_bfd_final_link
+#define bfd_elf32_bfd_final_link	elf_aros_final_link
+
+
+#include "elf32-target.h"
+
+/* Reset to defaults.  */
+#undef ELF_OSABI
+#undef elf_match_priority
+#undef	ELF_MINPAGESIZE
+#define ELF_MINPAGESIZE			0x1000
+#undef	ELF_COMMONPAGESIZE
+#define ELF_COMMONPAGESIZE		0x1000
+#undef elf_backend_emit_relocs
+#define elf_backend_emit_relocs		NULL
+#undef elf_backend_begin_write_processing
+#define elf_backend_begin_write_processing elf32_arm_begin_write_processing 
+#undef bfd_elf32_bfd_final_link
+#define bfd_elf32_bfd_final_link        bfd_elf_final_link
+
 /* Native Client targets.  */
 
 #undef	TARGET_LITTLE_SYM
@@ -20408,6 +20472,7 @@
 #undef ELF_OSABI
 #define ELF_OSABI		ELFOSABI_ARM_FDPIC
 
+
 /* Like elf32_arm_link_hash_table_create -- but overrides
    appropriately for FDPIC.  */
 
diff -ruN binutils-2.32-orig/bfd/po/SRC-POTFILES.in binutils-2.32/bfd/po/SRC-POTFILES.in
--- binutils-2.32-orig/bfd/po/SRC-POTFILES.in	2019-02-02 16:48:06.000000000 +0100
+++ binutils-2.32/bfd/po/SRC-POTFILES.in	2019-03-12 20:52:49.000000000 +0100
@@ -140,6 +140,7 @@
 elf-properties.c
 elf-strtab.c
 elf-vxworks.c
+elf-aros.c
 elf.c
 elf32-am33lin.c
 elf32-arc.c
diff -ruN binutils-2.32-orig/bfd/targets.c binutils-2.32/bfd/targets.c
--- binutils-2.32-orig/bfd/targets.c	2019-01-19 17:01:33.000000000 +0100
+++ binutils-2.32/bfd/targets.c	2019-03-09 20:44:29.000000000 +0100
@@ -604,6 +604,8 @@
 extern const bfd_target arc_elf32_le_vec;
 extern const bfd_target arm_elf32_be_vec;
 extern const bfd_target arm_elf32_le_vec;
+extern const bfd_target arm_elf32_aros_be_vec;
+extern const bfd_target arm_elf32_aros_le_vec;
 extern const bfd_target arm_elf32_fdpic_be_vec;
 extern const bfd_target arm_elf32_fdpic_le_vec;
 extern const bfd_target arm_elf32_nacl_be_vec;
diff -ruN binutils-2.32-orig/binutils/configure binutils-2.32/binutils/configure
--- binutils-2.32-orig/binutils/configure	2019-02-02 16:54:08.000000000 +0100
+++ binutils-2.32/binutils/configure	2019-01-19 17:10:54.000000000 +0100
@@ -13774,7 +13774,9 @@
 $as_echo_n "checking for mbstate_t... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
+#if !defined(__AROS__)
 #include <wchar.h>
+#endif
 int
 main ()
 {
diff -ruN binutils-2.32-orig/binutils/sysdep.h binutils-2.32/binutils/sysdep.h
--- binutils-2.32-orig/binutils/sysdep.h	2019-01-19 17:01:33.000000000 +0100
+++ binutils-2.32/binutils/sysdep.h	2019-01-19 17:10:54.000000000 +0100
@@ -24,6 +24,7 @@
 #include "ansidecl.h"
 #include <stdio.h>
 #include <sys/types.h>
+#include <sys/stat.h>
 
 #include "bfdver.h"
 
diff -ruN binutils-2.32-orig/config.guess binutils-2.32/config.guess
--- binutils-2.32-orig/config.guess	2019-01-19 17:01:33.000000000 +0100
+++ binutils-2.32/config.guess	2019-01-19 17:10:54.000000000 +0100
@@ -342,6 +342,9 @@
     *:[Mm]orph[Oo][Ss]:*:*)
 	echo "$UNAME_MACHINE"-unknown-morphos
 	exit ;;
+    *:AROS:*:*)
+	echo ${UNAME_MACHINE}-unknown-aros
+	exit ;;
     *:OS/390:*:*)
 	echo i370-ibm-openedition
 	exit ;;
diff -ruN binutils-2.32-orig/intl/configure binutils-2.32/intl/configure
--- binutils-2.32-orig/intl/configure	2019-01-19 17:01:33.000000000 +0100
+++ binutils-2.32/intl/configure	2019-01-19 17:10:54.000000000 +0100
@@ -4748,6 +4748,9 @@
 
 int main ()
 {
+#if defined(__AROS__)
+  exit (1);
+#endif
   signal (SIGFPE, sigfpe_handler);
 /* IRIX and AIX (when "xlc -qcheck" is used) yield signal SIGTRAP.  */
 #if (defined (__sgi) || defined (_AIX)) && defined (SIGTRAP)
diff -ruN binutils-2.32-orig/ld/Makefile.in binutils-2.32/ld/Makefile.in
--- binutils-2.32-orig/ld/Makefile.in	2019-02-02 16:54:43.000000000 +0100
+++ binutils-2.32/ld/Makefile.in	2019-01-19 17:10:54.000000000 +0100
@@ -654,6 +654,7 @@
 	earclinux_prof.c \
 	earm_wince_pe.c \
 	earmelf.c \
+	earmelf_aros.c \
 	earmelf_fbsd.c \
 	earmelf_fuchsia.c \
 	earmelf_linux.c \
@@ -664,6 +665,7 @@
 	earmelf_phoenix.c \
 	earmelf_vxworks.c \
 	earmelfb.c \
+	earmelfb_aros.c \
 	earmelfb_fbsd.c \
 	earmelfb_fuchsia.c \
 	earmelfb_linux.c \
@@ -875,6 +877,8 @@
 	eaarch64elf32.c \
 	eaarch64elfb.c \
 	eaarch64elf32b.c \
+	eaarch64elf_aros.c \
+	eaarch64elfb_aros.c \
 	eaarch64cloudabi.c \
 	eaarch64cloudabib.c \
 	eaarch64fbsd.c \
@@ -1197,6 +1201,8 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32b.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elfb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf_aros.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elfb_aros.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64fbsdb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux.Po@am__quote@
@@ -1218,6 +1224,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcv2elfx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earm_wince_pe.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_aros.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_fuchsia.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux.Po@am__quote@
@@ -1228,6 +1235,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_phoenix.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_vxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_aros.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_fuchsia.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux.Po@am__quote@
@@ -2321,6 +2329,12 @@
   $(ELF_DEPS) $(srcdir)/emultempl/armelf.em \
   $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
 
+earmelf_aros.c: $(srcdir)/emulparams/armelf_aros.sh \
+  $(srcdir)/emulparams/armelf_linux_eabi.sh \
+  $(srcdir)/emulparams/armelf_linux.sh \
+  $(ELF_DEPS) $(srcdir)/emultempl/armelf.em \
+  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
+
 earmelf_nacl.c: $(srcdir)/emulparams/armelf_nacl.sh \
   $(srcdir)/emulparams/armelf_linux_eabi.sh \
   $(srcdir)/emulparams/armelf_linux.sh \
@@ -2375,6 +2389,13 @@
   $(ELF_DEPS) $(srcdir)/emultempl/armelf.em \
   $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
 
+earmelfb_aros.c: $(srcdir)/emulparams/armelfb_aros.sh \
+  $(srcdir)/emulparams/armelf_aros.sh \
+  $(srcdir)/emulparams/armelf_linux_eabi.sh \
+  $(srcdir)/emulparams/armelf_linux.sh \
+  $(ELF_DEPS) $(srcdir)/emultempl/armelf.em \
+  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
+
 earmelfb_nacl.c: $(srcdir)/emulparams/armelfb_nacl.sh \
   $(srcdir)/emulparams/armelf_nacl.sh \
   $(srcdir)/emulparams/armelf_linux_eabi.sh \
@@ -3144,6 +3165,14 @@
   $(ELF_DEPS) $(srcdir)/emultempl/aarch64elf.em \
   $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
 
+eaarch64elf_aros.c: $(srcdir)/emulparams/aarch64elf_aros.sh \
+  $(ELF_DEPS) $(srcdir)/emultempl/aarch64elf.em \
+  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
+
+eaarch64elfb_aros.c: $(srcdir)/emulparams/aarch64elfb_aros.sh $(srcdir)/emulparams/aarch64elf_aros.sh \
+  $(ELF_DEPS) $(srcdir)/emultempl/aarch64elf.em \
+  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
+
 eaarch64linux.c: $(srcdir)/emulparams/aarch64linux.sh \
   $(ELF_DEPS) $(srcdir)/emultempl/aarch64elf.em \
   $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
diff -ruN binutils-2.32-orig/ld/configure.tgt binutils-2.32/ld/configure.tgt
--- binutils-2.32-orig/ld/configure.tgt	2019-01-19 17:01:33.000000000 +0100
+++ binutils-2.32/ld/configure.tgt	2019-01-19 17:10:54.000000000 +0100
@@ -45,6 +45,10 @@
 # architecture variants should be kept together even if their names
 # break the alpha sorting.
 case "${targ}" in
+aarch64-*-aros*)		targ_emul=aarch64elf_aros
+			targ_extra_emuls=aarch64elfb_aros
+			targ_extra_libpath=$targ_extra_emuls
+			;;
 aarch64_be-*-elf)	targ_emul=aarch64elfb
 			targ_extra_emuls="aarch64elf aarch64elf32 aarch64elf32b armelfb armelf" ;;
 aarch64-*-elf | aarch64-*-rtems*)
@@ -128,6 +132,10 @@
 			targ_extra_emuls="armelfb armelf armelf_linux"
 			targ_extra_libpath="armelf_linux"
 			;;
+arm*-*-aros*)		targ_emul=armelf_aros
+			targ_extra_emuls=armelfb_aros
+			targ_extra_libpath=$targ_extra_emuls
+			;;
 arm*-*-linux-*eabi*)	targ_emul=armelf_linux_eabi
 			targ_extra_emuls="armelfb_linux_eabi"
 			targ_extra_libpath=$targ_extra_emuls
@@ -315,6 +323,9 @@
 			targ_extra_libpath="elf_i386 elf_iamcu elf32_x86_64 elf_l1om elf_k1om"
 			tdir_elf_i386=`echo ${targ_alias} | sed -e 's/x86_64/i386/'`
 			;;
+x86_64-*-aros*)		targ_emul=elf_x86_64
+			targ_extra_emuls=elf_i386
+			;;
 i[3-7]86-*-kaos*)	targ_emul=elf_i386 ;;
 i[3-7]86-*-dragonfly*)	targ_emul=elf_i386
 			targ_extra_emuls="elf_iamcu i386bsd" ;;
@@ -632,6 +643,7 @@
 powerpc-*-beos*)	targ_emul=aixppc ;;
 powerpc-*-windiss*)	targ_emul=elf32ppcwindiss ;;
 powerpc-*-lynxos*)	targ_emul=ppclynx ;;
+powerpc-*-aros*)	targ_emul=elf32ppc ;;
 pru*-*-*)		targ_emul=pruelf ;;
 riscv32*-*-linux*)	targ_emul=elf32lriscv
 			targ_extra_emuls="elf32lriscv_ilp32f elf32lriscv_ilp32 elf64lriscv elf64lriscv_lp64f elf64lriscv_lp64"
diff -ruN binutils-2.32-orig/ld/emulparams/aarch64elf_aros.sh binutils-2.32/ld/emulparams/aarch64elf_aros.sh
--- binutils-2.32-orig/ld/emulparams/aarch64elf_aros.sh	1970-01-01 01:00:00.000000000 +0100
+++ binutils-2.32/ld/emulparams/aarch64elf_aros.sh	2019-01-19 17:10:54.000000000 +0100
@@ -0,0 +1 @@
+. ${srcdir}/emulparams/aarch64elf.sh
diff -ruN binutils-2.32-orig/ld/emulparams/aarch64elfb_aros.sh binutils-2.32/ld/emulparams/aarch64elfb_aros.sh
--- binutils-2.32-orig/ld/emulparams/aarch64elfb_aros.sh	1970-01-01 01:00:00.000000000 +0100
+++ binutils-2.32/ld/emulparams/aarch64elfb_aros.sh	2019-01-19 17:10:54.000000000 +0100
@@ -0,0 +1 @@
+. ${srcdir}/emulparams/aarch64elfb.sh
diff -ruN binutils-2.32-orig/ld/emulparams/armelf_aros.sh binutils-2.32/ld/emulparams/armelf_aros.sh
--- binutils-2.32-orig/ld/emulparams/armelf_aros.sh	1970-01-01 01:00:00.000000000 +0100
+++ binutils-2.32/ld/emulparams/armelf_aros.sh	2019-03-12 16:46:27.000000000 +0100
@@ -0,0 +1,7 @@
+. ${srcdir}/emulparams/armelf_linux_eabi.sh
+OUTPUT_FORMAT="elf32-littlearm-aros"
+BIG_OUTPUT_FORMAT="elf32-bigarm-aros"
+LITTLE_OUTPUT_FORMAT="elf32-littlearm-aros"
+
+TEXT_START_ADDR=0x80000000
+SEPARATE_CODE=yes
diff -ruN binutils-2.32-orig/ld/emulparams/armelfb_aros.sh binutils-2.32/ld/emulparams/armelfb_aros.sh
--- binutils-2.32-orig/ld/emulparams/armelfb_aros.sh	1970-01-01 01:00:00.000000000 +0100
+++ binutils-2.32/ld/emulparams/armelfb_aros.sh	2019-03-09 21:37:00.000000000 +0100
@@ -0,0 +1,4 @@
+. ${srcdir}/emulparams/armelf_aros.sh
+OUTPUT_FORMAT="elf32-bigarm-aros"
+BIG_OUTPUT_FORMAT="elf32-bigarm-aros"
+LITTLE_OUTPUT_FORMAT="elf32-littlearm-aros"
