# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    pc-i386:
      arosbuild.target: 'pc-i386'
      arosbuild.name: '$(arosbuild.target)'
    pc-x86_64:
      arosbuild.target: 'pc-x86_64'
      arosbuild.name: '$(arosbuild.target)'
    pc-x86_64-smp:
      arosbuild.target: 'pc-x86_64'
      arosbuild.variant: 'smp'
      arosbuild.name: '$(arosbuild.target)-$(arosbuild.variant)'
    amiga-m68k:
      arosbuild.target: 'amiga-m68k'
      arosbuild.name: '$(arosbuild.target)'

variables:
  AROSBUILDGCCVERS: '9.1.0'
  AROSBUILDTOOLCHAINDIR:  '$(AZBUILDPATH)/toolchain' # Location builds are done in
  AROSPORTSSRCSDIR:  '$(AZBUILDPATH)/portssources' #
  AROSBUILDSDIR:  '$(AZBUILDPATH)/builds' # Location builds are done in
  AROSBUILDDIR:  '$(AROSBUILDSDIR)/$(arosbuild.target)' # Actual build directory
  AZBUILDPATH: '$(system.defaultWorkingDirectory)' # workspace path
  #modulePath: '$(AZBUILDPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(AROSBUILDSDIR)'
    mkdir -p '$(AROSBUILDDIR)'
    mkdir -p '$(AROSBUILDTOOLCHAINDIR)'
    echo '##vso[task.prependpath]$(AROSBUILDTOOLCHAINDIR)'
    echo '##vso[task.prependpath]$(AROSPORTSSRCSDIR)'
    echo '##vso[task.prependpath]$(AROSBUILDDIR)'
  displayName: 'Setup workspace'

- script: |
    ../../configure --target=$(arosbuild.target) --enable-target-variant=$(arosbuild.variant) --enable-ccache --with-gcc-version=$(AROSBUILDGCCVERS)  --with-portssources=$(AROSPORTSSRCSDIR)
    make
  workingDirectory: '$(AROSBUILDDIR)'
  displayName: 'build $(arosbuild.name)'
