##begin config
basename IFFParse
libbasetype struct IFFParseBase_intern
version 50.2
residentpri -121
##end config
##begin cdef
#include <utility/utility.h>
#include <utility/hooks.h>
#include <libraries/iffparse.h>
##end cdef
##begin cdefprivate
#include "iffparse_intern.h"
##end cdefprivate
##begin functionlist
.version 33
struct IFFHandle *AllocIFF() ()
LONG OpenIFF(struct IFFHandle *iff, LONG rwMode) (A0, D0)
LONG ParseIFF(struct IFFHandle *iff, LONG mode) (A0, D0)
void CloseIFF(struct IFFHandle *iff) (A0)
void FreeIFF(struct IFFHandle *iff) (A0)
LONG ReadChunkBytes(struct IFFHandle *iff, APTR buf, LONG numBytes) (A0, A1, D0)
LONG WriteChunkBytes(struct IFFHandle *iff, APTR buf, LONG numBytes) (A0, A1, D0)
LONG ReadChunkRecords(struct IFFHandle *iff, APTR buf, LONG bytesPerRecord, LONG numRecords) (A0, A1, D0, D1)
LONG WriteChunkRecords(struct IFFHandle *iff, APTR buf, LONG bytesPerRecord, LONG numRecords) (A0, A1, D0, D1)
LONG PushChunk(struct IFFHandle *iff, LONG type, LONG id, LONG size) (A0, D0, D1, D2)
LONG PopChunk(struct IFFHandle *iff) (A0)

LONG EntryHandler(struct IFFHandle *iff, LONG type, LONG id, LONG position, struct Hook *handler, APTR object) (A0, D0, D1, D2, A1, A2)
LONG ExitHandler(struct IFFHandle *iff, LONG type, LONG id, LONG position, struct Hook *handler, APTR object) (A0, D0, D1, D2, A1, A2)
LONG PropChunk(struct IFFHandle *iff, LONG type, LONG id) (A0, D0, D1)
LONG PropChunks(struct IFFHandle *iff, const LONG *propArray, LONG numPairs) (A0, A1, D0)
LONG StopChunk(struct IFFHandle *iff, LONG type, LONG id) (A0, D0, D1)
LONG StopChunks(struct IFFHandle *iff, const LONG *propArray, LONG numPairs) (A0, A1, D0)
LONG CollectionChunk(struct IFFHandle *iff, LONG type, LONG id) (A0, D0, D1)
LONG CollectionChunks(struct IFFHandle *iff, const LONG *propArray, LONG numPairs) (A0, A1, D0)
LONG StopOnExit(struct IFFHandle *iff, LONG type, LONG id) (A0, D0, D1)
struct StoredProperty *FindProp(struct IFFHandle *iff, LONG type, LONG id) (A0, D0, D1)
struct CollectionItem *FindCollection(struct IFFHandle *iff, LONG type, LONG id) (A0, D0, D1)
struct ContextNode *FindPropContext(struct IFFHandle *iff) (A0)
struct ContextNode *CurrentChunk(struct IFFHandle *iff) (A0)
struct ContextNode *ParentChunk(struct ContextNode *contextNode) (A0)
struct LocalContextItem *AllocLocalItem(LONG type, LONG id, LONG ident, ULONG dataSize) (D0, D1, D2, D3)
APTR LocalItemData(struct LocalContextItem *localItem) (A0)
void SetLocalItemPurge(struct LocalContextItem *localItem, struct Hook *purgeHook) (A0, A1)
void FreeLocalItem(struct LocalContextItem *localItem) (A0)
struct LocalContextItem *FindLocalItem(struct IFFHandle *iff, LONG type, LONG id, LONG ident) (A0, D0, D1, D2)
LONG StoreLocalItem(struct IFFHandle *iff, struct LocalContextItem *localItem, LONG position) (A0, A1, D0)
void StoreItemInContext(struct IFFHandle *iff, struct LocalContextItem *localItem, struct ContextNode *contextNode) (A0, A1, A2)
void InitIFF(struct IFFHandle *iff, LONG flags, struct Hook *streamHook) (A0, D0, A1)
void InitIFFasDOS(struct IFFHandle *iff) (A0)
void InitIFFasClip(struct IFFHandle *iff) (A0)
struct ClipboardHandle *OpenClipboard(LONG unitNumber) (D0)
void CloseClipboard(struct ClipboardHandle *clipHandle) (A0)
LONG GoodID(LONG id) (D0)
LONG GoodType(LONG type) (D0)
STRPTR IDtoStr(LONG id, STRPTR buf) (D0, A0)
##end functionlist
