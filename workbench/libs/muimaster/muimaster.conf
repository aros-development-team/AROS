##begin config
basename MUIMaster
libbase MUIMasterBase
libbasetype struct MUIMasterBase_intern
version 19.47
##end config

##begin cdef

#ifndef INTUITION_CLASSES_H
#   include <intuition/classes.h>
#endif

#ifndef INTUITION_CLASSUSR_H
#   include <intuition/classusr.h>
#endif

#ifndef UTILITIY_TAGITEM_H
#   include <utility/tagitem.h>
#endif

#ifndef GRAPHICS_REGIONS_H
#   include <graphics/regions.h>
#endif

#ifndef MUIMasterBase
extern struct Library *MUIMasterBase;
#endif

/* By default, disable the variadic stuff for zune, since it's not 
   very backward compatible */
#ifndef MUIMASTER_YES_INLINE_STDARG
#undef  MUIMASTER_NO_INLINE_STDARG
#define MUIMASTER_NO_INLINE_STDARG
#endif

/* Prototypes for stubs in mui.lib */

__BEGIN_DECLS

APTR 	MUI_AllocAslRequestTags(unsigned long reqType, Tag tag1, ...) __stackparm;
BOOL 	MUI_AslRequestTags(APTR requester, Tag tag1, ...) __stackparm;
Object *MUI_MakeObject(LONG type, ...);
Object *MUI_NewObject(const char *classname, Tag tag1, ...) __stackparm;
LONG    MUI_Request(APTR app, APTR win, LONG flags, const char *title, const char *gadgets, 
const char *format, ...) __stackparm;

__END_DECLS

/* Predeclaration of private structures */
struct MUI_RenderInfo;
struct MUI_PenSpec;

##end cdef

##begin cdefprivate 
#define MUI_OBSOLETE
#include "muimaster_intern.h"
#include "mui.h"
##end cdefprivate

##begin functionlist
Object* MUI_NewObjectA(ClassID classid, struct TagItem* tags) (A0, A1)
void MUI_DisposeObject(Object* obj) (A0)
LONG MUI_RequestA(APTR app, APTR win, LONGBITS flags, CONST_STRPTR title, CONST_STRPTR gadgets, CONST_STRPTR format, APTR params) (D0, D1, D2, A0, A1, A2, A3)
APTR MUI_AllocAslRequest(unsigned long reqType, struct TagItem* tagList) (D0, A0)
BOOL MUI_AslRequest(APTR requester, struct TagItem* tagList) (A0, A1)
void MUI_FreeAslRequest(APTR requester) (A0)
LONG MUI_Error() ()
LONG MUI_SetError(LONG num) (D0)
struct IClass* MUI_GetClass(ClassID classid) (A0)
void MUI_FreeClass(Class* cl) (A0)
void MUI_RequestIDCMP(Object* obj, ULONG flags) (A0, D0)
void MUI_RejectIDCMP(Object* obj, ULONG flags) (A0, D0)
void MUI_Redraw(Object* obj, ULONG flags) (A0, D0)
struct MUI_CustomClass* MUI_CreateCustomClass(struct Library* base, ClassID supername, struct MUI_CustomClass* supermcc, ULONG datasize, APTR dispatcher) (A0, A1, A2, D0, A3)
BOOL MUI_DeleteCustomClass(struct MUI_CustomClass* mcc) (A0)
Object* MUI_MakeObjectA(LONG type, IPTR* params) (D0, A0)
BOOL MUI_Layout(Object* obj, LONG left, LONG top, LONG width, LONG height, ULONG flags) (A0, D0, D1, D2, D3, D4)
.skip 1 # Reserved
.skip 1 # Reserved
.skip 1 # Reserved
.skip 1 # Reserved
LONG MUI_ObtainPen(struct MUI_RenderInfo* mri, struct MUI_PenSpec* spec, ULONG flags) (A0, A1, D0)
void MUI_ReleasePen(struct MUI_RenderInfo* mri, LONG pen) (A0, D0)
APTR MUI_AddClipping(struct MUI_RenderInfo* mri, WORD left, WORD top, WORD width, WORD height) (A0, D0, D1, D2, D3)
void MUI_RemoveClipping(struct MUI_RenderInfo* mri, APTR handle) (A0, A1)
APTR MUI_AddClipRegion(struct MUI_RenderInfo* mri, struct Region* r) (A0, A1)
void MUI_RemoveClipRegion(struct MUI_RenderInfo* mri, APTR handle) (A0, A1)
BOOL MUI_BeginRefresh(struct MUI_RenderInfo* mri, ULONG flags) (A0, D0)
void MUI_EndRefresh(struct MUI_RenderInfo* mri, ULONG flags) (A0, D0)
##end functionlist
