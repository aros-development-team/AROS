CFLAGS = NOVERS
LIBCODE =

SUPPORTOBJS = \
  objs/dragndrop.o \
  objs/frame.o \
  objs/imspec.o \
  objs/support.o \
  objs/prefs.o \
  objs/textengine.o

LIBOBJS = \
  objs/mui_addclipping.o\
  objs/mui_addclipregion.o\
  objs/mui_allocaslrequest.o\
  objs/mui_aslrequest.o\
  objs/mui_beginrefresh.o\
  objs/mui_createcustomclass.o\
  objs/mui_deletecustomclass.o\
  objs/mui_disposeobject.o\
  objs/mui_endrefresh.o\
  objs/mui_error.o\
  objs/mui_freeaslrequest.o\
  objs/mui_freeclass.o\
  objs/mui_getclass.o\
  objs/mui_layout.o\
  objs/mui_makeobject.o\
  objs/mui_newobject.o\
  objs/mui_obtainpen.o\
  objs/mui_redraw.o\
  objs/mui_rejectidcmp.o\
  objs/mui_releasepen.o\
  objs/mui_removeclipping.o\
  objs/mui_removeclipregion.o\
  objs/mui_request.o\
  objs/mui_requestidcmp.o\
  objs/mui_seterror.o

CLASSESOBJS= \
  objs/classes/application.o \
  objs/classes/area.o \
  objs/classes/family.o \
  objs/classes/group.o \
  objs/classes/notify.o \
  objs/classes/numeric.o \
  objs/classes/slider.o \
  objs/classes/window.o \
  objs/classes/text.o

all: dirs $(SUPPORTOBJS) $(LIBOBJS) $(CLASSESOBJS) test

dirs:
  execute  <<
    if not exists objs
      makedir objs
    endif

    if not exists objs/classes
      makedir objs/classes
    endif
<


objs/dragndrop.o: dragndrop.c
  sc $(CFLAGS) dragndrop.c objname=$@

objs/frame.o: frame.c
  sc $(CFLAGS) frame.c objname=$@

objs/imspec.o: imspec.c
  sc $(CFLAGS) imspec.c objname=$@

objs/support.o: support.c
  sc $(CFLAGS) support.c objname=$@

objs/textengine.o: textengine.c
  sc $(CFLAGS) textengine.c objname=$@

objs/prefs.o: prefs.c
  sc $(CFLAGS) prefs.c objname=$@


objs/mui_addclipping.o: mui_addclipping.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_addclipping.c objname=$@

objs/mui_addclipregion.o: mui_addclipregion.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_addclipregion.c objname=$@

objs/mui_allocaslrequest.o: mui_allocaslrequest.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_allocaslrequest.c objname=$@

objs/mui_aslrequest.o: mui_aslrequest.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_aslrequest.c objname=$@

objs/mui_beginrefresh.o: mui_beginrefresh.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_beginrefresh.c objname=$@

objs/mui_createcustomclass.o: mui_createcustomclass.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_createcustomclass.c objname=$@

objs/mui_deletecustomclass.o: mui_deletecustomclass.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_deletecustomclass.c objname=$@

objs/mui_disposeobject.o: mui_disposeobject.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_disposeobject.c objname=$@

objs/mui_endrefresh.o: mui_endrefresh.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_endrefresh.c objname=$@

objs/mui_error.o: mui_error.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_error.c objname=$@

objs/mui_freeaslrequest.o: mui_freeaslrequest.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_freeaslrequest.c objname=$@

objs/mui_freeclass.o: mui_freeclass.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_freeclass.c objname=$@

objs/mui_getclass.o: mui_getclass.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_getclass.c objname=$@

objs/mui_layout.o: mui_layout.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_layout.c objname=$@

objs/mui_makeobject.o: mui_makeobject.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_makeobject.c objname=$@

objs/mui_newobject.o: mui_newobject.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_newobject.c objname=$@

objs/mui_obtainpen.o: mui_obtainpen.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_obtainpen.c objname=$@

objs/mui_redraw.o: mui_redraw.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_redraw.c objname=$@

objs/mui_rejectidcmp.o: mui_rejectidcmp.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_rejectidcmp.c objname=$@

objs/mui_releasepen.o: mui_releasepen.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_releasepen.c objname=$@

objs/mui_removeclipping.o: mui_removeclipping.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_removeclipping.c objname=$@

objs/mui_removeclipregion.o: mui_removeclipregion.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_removeclipregion.c objname=$@

objs/mui_request.o: mui_request.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_request.c objname=$@

objs/mui_requestidcmp.o: mui_requestidcmp.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_requestidcmp.c objname=$@

objs/mui_seterror.o: mui_seterror.c
  sc $(CFLAGS) $(LIBSDIRS) $(LIBCODE) mui_seterror.c objname=$@


objs/classes/application.o: classes/application.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/application.c objname=$@

objs/classes/area.o: classes/area.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/area.c objname=$@

objs/classes/family.o: classes/family.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/family.c objname=$@

objs/classes/notify.o: classes/notify.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/notify.c objname=$@

objs/classes/numeric.o: classes/numeric.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/numeric.c objname=$@

objs/classes/slider.o: classes/slider.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/slider.c objname=$@

objs/classes/window.o: classes/window.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/window.c objname=$@

objs/classes/group.o: classes/group.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/group.c objname=$@

objs/classes/text.o: classes/text.c
  sc $(CFLAGS) $(CLASSESDIRS) classes/text.c objname=$@


objs/test.o: test.c
  sc $(CFLAGS) $(CLASSESDIRS) test.c objname=$@

test: objs/test.o $(SUPPORTOBJS) $(LIBOBJS) $(CLASSESOBJS)
  sc link lib lib:debug.lib to test with <<
objs/test.o $(SUPPORTOBJS) $(LIBOBJS) $(CLASSESOBJS)
<

clean:
  -delete objs all
  -delete test
