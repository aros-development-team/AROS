==id $Id$
* "zunemaster.library"
==base _ZuneMasterBase
==bias 30
==public
==include <exec/types.h>
==include <exec/lists.h>
==include <intuition/intuition.h>
==include <intuition/classes.h>
==include <intuition/classusr.h>
==include <intuition/gadgetclass.h>
==include <utility/tagitem.h>
==include <libraries/mui.h>
==public
*
* Public entries
*
Object *MUI_NewObjectA(CONST_STRPTR classname, struct TagItem *tags)(A0,A1)
==varargs
Object *MUI_NewObject(CONST_STRPTR classname, Tag tag1,...)(A0,A1)
VOID MUI_DisposeObject(Object *obj)(A0)
LONG MUI_RequestA(APTR app,APTR win, ULONG flags, CONST_STRPTR title, CONST_STRPTR gadgets, CONST_STRPTR format,APTR params)(D0,D1,D2,A0,A1,A2,A3)
==varargs
LONG MUI_Request(APTR app,APTR win, ULONG flags, CONST_STRPTR title, CONST_STRPTR gadgets, CONST_STRPTR format, ULONG dummy, ...)(D0,D1,D2,A0,A1,A2,A3)
APTR MUI_AllocAslRequest(ULONG reqType, struct TagItem *tagList)(D0,A0)
==varargs
APTR MUI_AllocAslRequestTags(ULONG reqType, Tag tag1, ...)(D0,A0)
BOOL MUI_AslRequest(APTR requester, struct TagItem *tagList)(A0,A1)
==varargs
BOOL MUI_AslRequestTags(APTR requester, Tag tag1, ...)(A0,A1)
VOID MUI_FreeAslRequest(APTR requester )(A0)
LONG MUI_Error()()
LONG MUI_SetError(LONG num)(D0)
struct IClass *MUI_GetClass (CONST_STRPTR classname)(A0)
VOID MUI_FreeClass (struct IClass *classptr)(A0)
VOID MUI_RequestIDCMP(Object *obj,ULONG flags)(A0,D0)
VOID MUI_RejectIDCMP(Object *obj,ULONG flags)(A0,D0)
VOID MUI_Redraw(Object *obj,ULONG flags)(A0,D0)
struct MUI_CustomClass *MUI_CreateCustomClass(struct Library *base,CONST_STRPTR supername,struct MUI_CustomClass *supermcc,LONG datasize,APTR dispatcher)(A0,A1,A2,D0,A3)
BOOL MUI_DeleteCustomClass(struct MUI_CustomClass *mcc)(A0)
Object *MUI_MakeObjectA(LONG type,ULONG *params)(D0,A0)
==varargs
Object *MUI_MakeObject(LONG type, ULONG dummy, ...)(D0,A0)
BOOL MUI_Layout(Object *obj,LONG left,LONG top,LONG width,LONG height,ULONG flags)(A0,D0,D1,D2,D3,D4)
==reserve 4
LONG MUI_ObtainPen(struct MUI_RenderInfo *mri,struct MUI_PenSpec *spec,ULONG flags)(A0,A1,D0)
VOID MUI_ReleasePen(struct MUI_RenderInfo *mri,LONG pen)(A0,D0)
APTR MUI_AddClipping(struct MUI_RenderInfo *mri,WORD left,WORD top,WORD width,WORD height)(A0,D0,D1,D2,D3)
VOID MUI_RemoveClipping(struct MUI_RenderInfo *mri,APTR handle)(A0,A1)
APTR MUI_AddClipRegion(struct MUI_RenderInfo *mri,struct Region *r)(A0,A1)
VOID MUI_RemoveClipRegion(struct MUI_RenderInfo *mri,APTR handle)(A0,A1)
BOOL MUI_BeginRefresh(struct MUI_RenderInfo *mri,ULONG flags)(A0,D0)
VOID MUI_EndRefresh(struct MUI_RenderInfo *mri,ULONG flags)(A0,D0)
==end
