##begin config
version 6.4
date 29.07.2007
copyright Copyright (c) 2005-2007 codesets.library Open Source Team
libbasetype struct LibraryHeader *
##end config

##begin cdef
#include <libraries/codesets.h>

struct codeset * CodesetsSetDefault(STRPTR name, Tag attrs, ...);
void CodesetsFree(APTR obj, Tag attrs, ...);
STRPTR * CodesetsSupported(Tag attrs, ...);
struct codeset * CodesetsFind(STRPTR name, Tag attrs, ...);
struct codeset * CodesetsFindBest(Tag attrs, ...);
STRPTR CodesetsUTF8ToStr(Tag attrs, ...);
UTF8 * CodesetsUTF8Create(Tag attrs, ...);
ULONG CodesetsEncodeB64(Tag attrs, ...);
ULONG CodesetsDecodeB64(Tag attrs, ...);
ULONG CodesetsStrLen(STRPTR str, Tag attrs, ...);
void CodesetsFreeVecPooled(APTR pool, APTR mem, Tag attrs, ...);
STRPTR CodesetsConvertStr(Tag attrs, ...);
struct codesetList * CodesetsListCreate(Tag attrs, ...);
BOOL CodesetsListDelete(Tag tag1, ...);
BOOL CodesetsListAdd(struct codesetList *codesetsList, Tag attrs, ...);
BOOL CodesetsListRemove(Tag tag1, ...);
##end cdef

##begin cdefprivate
#include <exec/exec.h>
#include <libraries/codesets.h>
#include "base.h"
##end cdefprivate

##begin functionlist
ULONG CodesetsConvertUTF32toUTF16(const UTF32 **sourceStart, const UTF32 *sourceEnd, UTF16 **targetStart, UTF16 *targetEnd, ULONG flags) (A0,A1,A2,A3,D0)
ULONG CodesetsConvertUTF16toUTF32(const  UTF16 **sourceStart, const UTF16 *sourceEnd, UTF32 **targetStart, UTF32 *targetEnd, ULONG flags) (A0,A1,A2,A3,D0)
ULONG CodesetsConvertUTF16toUTF8(const UTF16 **sourceStart, const UTF16 *sourceEnd, UTF8 **targetStart,	UTF8 *targetEnd, ULONG flags) (A0,A1,A2,A3,D0)
BOOL CodesetsIsLegalUTF8(const UTF8 *source, ULONG length) (A0,D0)
BOOL CodesetsIsLegalUTF8Sequence(const UTF8 *source, const UTF8 *sourceEnd) (A0,D1)
ULONG CodesetsConvertUTF8toUTF16(const UTF8 **sourceStart, const UTF8 *sourceEnd, UTF16 **targetStart, UTF16 *targetEnd, ULONG flags) (A0,A1,A2,A3,D0)
ULONG CodesetsConvertUTF32toUTF8(const UTF32 **sourceStart, const UTF32 *sourceEnd, UTF8 **targetStart, UTF8 *targetEnd, ULONG flags) (A0,A1,A2,A3,D0)
ULONG CodesetsConvertUTF8toUTF32(const UTF8 **sourceStart, const UTF8 *sourceEnd, UTF32 **targetStart, UTF32 *targetEnd, ULONG flags) (A0,A1,A2,A3,D0)
struct codeset * CodesetsSetDefaultA(STRPTR name, struct TagItem * attrs) (A0,A1)
void CodesetsFreeA(APTR obj, struct TagItem * attrs) (A0,A1)
STRPTR * CodesetsSupportedA(struct TagItem * attrs) (A0)
struct codeset * CodesetsFindA(STRPTR name, struct TagItem * attrs) (A0,A1)
struct codeset * CodesetsFindBestA(struct TagItem * attrs) (A0)
ULONG CodesetsUTF8Len(const UTF8 *str) (A0)
STRPTR CodesetsUTF8ToStrA(struct TagItem * attrs) (A0)
UTF8 * CodesetsUTF8CreateA(struct TagItem * attrs) (A0)
ULONG CodesetsEncodeB64A(struct TagItem * attrs) (A0)
ULONG CodesetsDecodeB64A(struct TagItem * attrs) (A0)
ULONG CodesetsStrLenA(STRPTR str, struct TagItem * attrs) (A0,A1)
BOOL CodesetsIsValidUTF8(STRPTR str) (A0)
void CodesetsFreeVecPooledA(APTR pool, APTR mem, struct TagItem *attrs) (A0,A1,A2)
STRPTR CodesetsConvertStrA(struct TagItem * attrs) (A0)
struct codesetList * CodesetsListCreateA(struct TagItem *attrs) (A0)
BOOL CodesetsListDeleteA(struct TagItem *attrs) (A0)
BOOL CodesetsListAddA(struct codesetList *codesetsList, struct TagItem *attrs) (A0,A1)
BOOL CodesetsListRemoveA(struct TagItem *attrs) (A0)
##end functionlist
