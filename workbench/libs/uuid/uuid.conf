##begin config
version 1.0
basename UUID
libbasetype struct uuid_base
residentpri 49
##end config
##begin cdef
#include <libraries/uuid.h>
##end cdef
##begin cdefprivate
#include "uuid_private.h"
##end cdefprivate
##begin functionlist
int UUID_Compare(const uuid_t *u1, const uuid_t *u2) (A0,A1)
void UUID_GetNameSpace(uuid_namespace_t NameSpace, uuid_t *uuid) (D0,A0)
int UUID_Parse(const char *in, uuid_t *uuid) (A0,A1)
void UUID_Unparse(const uuid_t * uuid, char *out) (A0,A1)
void UUID_Pack(const uuid_t * uuid, uint8_t *out) (A0,A1)
void UUID_Unpack(const uint8_t *in, uuid_t *uuid) (A0,A1)
void UUID_Clear(uuid_t *uuid) (A0)
void UUID_Copy(const uuid_t * src, uuid_t *dst) (A0,A1)
void UUID_Generate(uuid_type_t type, uuid_t *uuid) (D0,A0)
##end functionlist
