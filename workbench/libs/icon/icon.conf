##begin config
version 44.4
libbasetype struct IconBase
seglist_field ib_SegList
residentpri -122
##end config
##begin cdef
#include <intuition/intuition.h>
#include <workbench/workbench.h>
#include <workbench/icon.h>
#include <utility/tagitem.h>
##end cdef
##begin cdefprivate
#include "icon_intern.h"
##end cdefprivate
##begin functionlist
.version 36
.skip 4
void FreeFreeList(struct FreeList *freelist) (A0)
.skip 2
BOOL AddFreeList(struct FreeList *freelist, APTR mem, unsigned long size) (A0, A1, A2)
struct DiskObject *GetDiskObject(CONST_STRPTR name) (A0)
BOOL PutDiskObject(CONST_STRPTR name, struct DiskObject *icon) (A0, A1)
void FreeDiskObject(struct DiskObject *diskobj) (A0)
UBYTE *FindToolType(const STRPTR *toolTypeArray, const STRPTR typeName) (A0, A1)
BOOL MatchToolValue(UBYTE *typeString, UBYTE *value) (A0, A1)
UBYTE *BumpRevision(UBYTE *newname, UBYTE *oldname) (A0, A1)
.skip 1
struct DiskObject *GetDefDiskObject(LONG type) (D0)
BOOL PutDefDiskObject(struct DiskObject *icon) (A0)
struct DiskObject *GetDiskObjectNew(CONST_STRPTR name) (A0)
.version 37
BOOL DeleteDiskObject(UBYTE *name) (A0)
.skip 1
.version 44
struct DiskObject *DupDiskObjectA(struct DiskObject *icon, struct TagItem *tags) (A0, A1)
ULONG IconControlA(struct DiskObject *icon, struct TagItem *tags) (A0, A1)
void DrawIconStateA(struct RastPort *rp, struct DiskObject *icon, STRPTR label, LONG leftEdge, LONG topEdge, ULONG state, struct TagItem *tags) (A0, A1, A2, D0, D1, D2, A3)
BOOL GetIconRectangleA(struct RastPort *rp, struct DiskObject *icon, STRPTR label, struct Rectangle *rectangle, struct TagItem *tags) (A0, A1, A2, A3, A4)
struct DiskObject *NewDiskObject(ULONG type) (D0)
struct DiskObject *GetIconTagList(CONST_STRPTR name, const struct TagItem *tags) (A0, A1)
BOOL PutIconTagList(CONST_STRPTR name, struct DiskObject *icon, struct TagItem *tags) (A0, A1, A2)
BOOL LayoutIconA(struct DiskObject *icon, struct Screen *screen, struct TagItem *tags) (A0, A1, A2)
void ChangeToSelectedIconColor(struct ColorRegister *cr) (A0)
##end functionlist
