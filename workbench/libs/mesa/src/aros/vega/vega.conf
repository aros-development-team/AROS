##begin config
version 1.4
libbasetype struct VegaBase
##end config
##begin cdef
#include <VG/openvg.h>
#include <VG/vgu.h>
##end cdef
##begin cdefprivate
#include "vega_intern.h"
##end cdefprivate
##begin functionlist
APTR GetOpenVGStateTrackerApi() ()
.skip 29
VGErrorCode vgGetError() ()
void vgFlush() ()
void vgFinish() ()
void vgSetf(VGParamType type, VGfloat value) (D0, D1)
void vgSeti(VGParamType type, VGint value) (D0, D1)
void vgSetfv(VGParamType type, VGint count, const VGfloat * values) (D0, D1, A0)
void vgSetiv(VGParamType type, VGint count, const VGint * values) (D0, D1, A0)
VGfloat vgGetf(VGParamType type) (D0)
VGint vgGeti(VGParamType type) (D0)
VGint vgGetVectorSize(VGParamType type) (D0)
void vgGetfv(VGParamType type, VGint count, VGfloat * values) (D0, D1, A0)
void vgGetiv(VGParamType type, VGint count, VGint * values) (D0, D1, A0)
void vgSetParameterf(VGHandle object, VGint paramType, VGfloat value) (D0, D1, D2)
void vgSetParameteri(VGHandle object, VGint paramType, VGint value) (D0, D1, D2)
void vgSetParameterfv(VGHandle object, VGint paramType, VGint count, const VGfloat * values) (D0, D1, D2, A0)
void vgSetParameteriv(VGHandle object, VGint paramType, VGint count, const VGint * values) (D0, D1, D2, A0)
VGfloat vgGetParameterf(VGHandle object, VGint paramType) (D0, D1)
VGint vgGetParameteri(VGHandle object, VGint paramType) (D0, D1)
VGint vgGetParameterVectorSize(VGHandle object, VGint paramType) (D0, D1)
void vgGetParameterfv(VGHandle object, VGint paramType, VGint count, VGfloat * values) (D0, D1, D2, A0)
void vgGetParameteriv(VGHandle object, VGint paramType, VGint count, VGint * values) (D0, D1, D2, A0)
void vgLoadIdentity() ()
void vgLoadMatrix(const VGfloat * m) (A0)
void vgGetMatrix(VGfloat * m) (A0)
void vgMultMatrix(const VGfloat * m) (A0)
void vgTranslate(VGfloat tx, VGfloat ty) (D0, D1)
void vgScale(VGfloat sx, VGfloat sy) (D0, D1)
void vgShear(VGfloat shx, VGfloat shy) (D0, D1)
void vgRotate(VGfloat angle) (D0)
void vgMask(VGHandle mask, VGMaskOperation operation, VGint x, VGint y, VGint width, VGint height) (D0, D1, D2, D3, D4, D5)
void vgRenderToMask(VGPath path, VGbitfield paintModes, VGMaskOperation operation) (D0, D1, D2)
VGMaskLayer vgCreateMaskLayer(VGint width, VGint height) (D0, D1)
void vgDestroyMaskLayer(VGMaskLayer maskLayer) (D0)
void vgFillMaskLayer(VGMaskLayer maskLayer, VGint x, VGint y, VGint width, VGint height, VGfloat value) (D0, D1, D2, D3, D4, D5)
void vgCopyMask(VGMaskLayer maskLayer, VGint dx, VGint dy, VGint sx, VGint sy, VGint width, VGint height) (D0, D1, D2, D3, D4, D5, D6)
void vgClear(VGint x, VGint y, VGint width, VGint height) (D0, D1, D2, D3)
VGPath vgCreatePath(VGint pathFormat, VGPathDatatype datatype, VGfloat scale, VGfloat bias, VGint segmentCapacityHint, VGint coordCapacityHint, VGbitfield capabilities) (D0, D1, D2, D3, D4, D5, D6)
void vgClearPath(VGPath path, VGbitfield capabilities) (D0, D1)
void vgDestroyPath(VGPath path) (D0)
void vgRemovePathCapabilities(VGPath path, VGbitfield capabilities) (D0, D1)
VGbitfield vgGetPathCapabilities(VGPath path) (D0)
void vgAppendPath(VGPath dstPath, VGPath srcPath) (D0, D1)
void vgAppendPathData(VGPath dstPath, VGint numSegments, const VGubyte * pathSegments, const void * pathData) (D0, D1, A0, A1)
void vgModifyPathCoords(VGPath dstPath, VGint startIndex, VGint numSegments, const void * pathData) (D0, D1, D2, A0)
void vgTransformPath(VGPath dstPath, VGPath srcPath) (D0, D1)
VGboolean vgInterpolatePath(VGPath dstPath, VGPath startPath, VGPath endPath, VGfloat amount) (D0, D1, D2, D3)
VGfloat vgPathLength(VGPath path, VGint startSegment, VGint numSegments) (D0, D1, D2)
void vgPointAlongPath(VGPath path, VGint startSegment, VGint numSegments, VGfloat distance, VGfloat * x, VGfloat * y, VGfloat * tangentX, VGfloat * tangentY) (D0, D1, D2, D3, A0, A1, A2, A3)
void vgPathBounds(VGPath path, VGfloat * minX, VGfloat * minY, VGfloat * width, VGfloat * height) (D0, A0, A1, A2, A3)
void vgPathTransformedBounds(VGPath path, VGfloat * minX, VGfloat * minY, VGfloat * width, VGfloat * height) (D0, A0, A1, A2, A3)
void vgDrawPath(VGPath path, VGbitfield paintModes) (D0, D1)
VGPaint vgCreatePaint() ()
void vgDestroyPaint(VGPaint paint) (D0)
void vgSetPaint(VGPaint paint, VGbitfield paintModes) (D0, D1)
VGPaint vgGetPaint(VGPaintMode paintMode) (D0)
void vgSetColor(VGPaint paint, VGuint rgba) (D0, D1)
VGuint vgGetColor(VGPaint paint) (D0)
void vgPaintPattern(VGPaint paint, VGImage pattern) (D0, D1)
VGImage vgCreateImage(VGImageFormat format, VGint width, VGint height, VGbitfield allowedQuality) (D0, D1, D2, D3)
void vgDestroyImage(VGImage image) (D0)
void vgClearImage(VGImage image, VGint x, VGint y, VGint width, VGint height) (D0, D1, D2, D3, D4)
void vgImageSubData(VGImage image, const void * data, VGint dataStride, VGImageFormat dataFormat, VGint x, VGint y, VGint width, VGint height) (D0, A0, D1, D2, D3, D4, D5, D6)
void vgGetImageSubData(VGImage image, void * data, VGint dataStride, VGImageFormat dataFormat, VGint x, VGint y, VGint width, VGint height) (D0, A0, D1, D2, D3, D4, D5, D6)
VGImage vgChildImage(VGImage parent, VGint x, VGint y, VGint width, VGint height) (D0, D1, D2, D3, D4)
VGImage vgGetParent(VGImage image) (D0)
void vgCopyImage(VGImage dst, VGint dx, VGint dy, VGImage src, VGint sx, VGint sy, VGint width, VGint height, VGboolean dither) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void vgDrawImage(VGImage image) (D0)
void vgSetPixels(VGint dx, VGint dy, VGImage src, VGint sx, VGint sy, VGint width, VGint height) (D0, D1, D2, D3, D4, D5, D6)
void vgWritePixels(const void * data, VGint dataStride, VGImageFormat dataFormat, VGint dx, VGint dy, VGint width, VGint height) (A0, D0, D1, D2, D3, D4, D5)
void vgGetPixels(VGImage dst, VGint dx, VGint dy, VGint sx, VGint sy, VGint width, VGint height) (D0, D1, D2, D3, D4, D5, D6)
void vgReadPixels(void * data, VGint dataStride, VGImageFormat dataFormat, VGint sx, VGint sy, VGint width, VGint height) (A0, D0, D1, D2, D3, D4, D5)
void vgCopyPixels(VGint dx, VGint dy, VGint sx, VGint sy, VGint width, VGint height) (D0, D1, D2, D3, D4, D5)
VGFont vgCreateFont(VGint glyphCapacityHint) (D0)
void vgDestroyFont(VGFont font) (D0)
void vgSetGlyphToPath(VGFont font, VGuint glyphIndex, VGPath path, VGboolean isHinted, const VGfloat * glyphOrigin, const VGfloat * escapement) (D0, D1, D2, D3, A0, A1)
void vgSetGlyphToImage(VGFont font, VGuint glyphIndex, VGImage image, const VGfloat * glyphOrigin, const VGfloat * escapement) (D0, D1, D2, A0, A1)
void vgClearGlyph(VGFont font, VGuint glyphIndex) (D0, D1)
void vgDrawGlyph(VGFont font, VGuint glyphIndex, VGbitfield paintModes, VGboolean allowAutoHinting) (D0, D1, D2, D3)
void vgDrawGlyphs(VGFont font, VGint glyphCount, const VGuint * glyphIndices, const VGfloat * adjustments_x, const VGfloat * adjustments_y, VGbitfield paintModes, VGboolean allowAutoHinting) (D0, D1, A0, A1, A2, D2, D3)
void vgColorMatrix(VGImage dst, VGImage src, const VGfloat * matrix) (D0, D1, A0)
void vgConvolve(VGImage dst, VGImage src, VGint kernelWidth, VGint kernelHeight, VGint shiftX, VGint shiftY, const VGshort * kernel, VGfloat scale, VGfloat bias, VGTilingMode tilingMode) (D0, D1, D2, D3, D4, D5, A0, D6, D7, A1)
void vgSeparableConvolve(VGImage dst, VGImage src, VGint kernelWidth, VGint kernelHeight, VGint shiftX, VGint shiftY, const VGshort * kernelX, const VGshort * kernelY, VGfloat scale, VGfloat bias, VGTilingMode tilingMode) (D0, D1, D2, D3, D4, D5, A0, A1, D6, D7, A2)
void vgGaussianBlur(VGImage dst, VGImage src, VGfloat stdDeviationX, VGfloat stdDeviationY, VGTilingMode tilingMode) (D0, D1, D2, D3, D4)
void vgLookup(VGImage dst, VGImage src, const VGubyte * redLUT, const VGubyte * greenLUT, const VGubyte * blueLUT, const VGubyte * alphaLUT, VGboolean outputLinear, VGboolean outputPremultiplied) (D0, D1, A0, A1, A2, A3, D2, D3)
void vgLookupSingle(VGImage dst, VGImage src, const VGuint * lookupTable, VGImageChannel sourceChannel, VGboolean outputLinear, VGboolean outputPremultiplied) (D0, D1, A0, D2, D3, D4)
VGHardwareQueryResult vgHardwareQuery(VGHardwareQueryType key, VGint setting) (D0, D1)
const VGubyte * vgGetString(VGStringID name) (D0)
VGUErrorCode vguLine(VGPath path, VGfloat x0, VGfloat y0, VGfloat x1, VGfloat y1) (D0, D1, D2, D3, D4)
VGUErrorCode vguPolygon(VGPath path, const VGfloat * points, VGint count, VGboolean closed) (D0, A0, D1, D2)
VGUErrorCode vguRect(VGPath path, VGfloat x, VGfloat y, VGfloat width, VGfloat height) (D0, D1, D2, D3, D4)
VGUErrorCode vguRoundRect(VGPath path, VGfloat x, VGfloat y, VGfloat width, VGfloat height, VGfloat arcWidth, VGfloat arcHeight) (D0, D1, D2, D3, D4, D5, D6)
VGUErrorCode vguEllipse(VGPath path, VGfloat cx, VGfloat cy, VGfloat width, VGfloat height) (D0, D1, D2, D3, D4)
VGUErrorCode vguArc(VGPath path, VGfloat x, VGfloat y, VGfloat width, VGfloat height, VGfloat startAngle, VGfloat angleExtent, VGUArcType arcType) (D0, D1, D2, D3, D4, D5, D6, D7)
VGUErrorCode vguComputeWarpQuadToSquare(VGfloat sx0, VGfloat sy0, VGfloat sx1, VGfloat sy1, VGfloat sx2, VGfloat sy2, VGfloat sx3, VGfloat sy3, VGfloat * matrix) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
VGUErrorCode vguComputeWarpSquareToQuad(VGfloat dx0, VGfloat dy0, VGfloat dx1, VGfloat dy1, VGfloat dx2, VGfloat dy2, VGfloat dx3, VGfloat dy3, VGfloat * matrix) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
##end functionlist
