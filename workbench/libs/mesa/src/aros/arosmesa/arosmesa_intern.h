#ifndef AROSMESA_INTERN_H
#define AROSMESA_INTERN_H

#include <aros/config.h>

struct gl_func;
extern struct gl_func gl_func;

#define GLCALL(func,...) (gl_func.func(__VA_ARGS__))

/* GL functions are retrieved via glAGetProcAddress */

struct gl_func
{
    void (*glBlendFuncSeparate) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    void (*glFogCoordf) (GLfloat coord);
    void (*glFogCoordfv) (const GLfloat * coord);
    void (*glFogCoordd) (GLdouble coord);
    void (*glFogCoorddv) (const GLdouble * coord);
    void (*glFogCoordPointer) (GLenum type, GLsizei stride, const GLvoid * pointer);
    void (*glMultiDrawArrays) (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
    void (*glMultiDrawElements) (GLenum mode, const GLsizei * count, GLenum type, const GLvoid *  * indices, GLsizei primcount);
    void (*glPointParameterf) (GLenum pname, GLfloat param);
    void (*glPointParameterfv) (GLenum pname, const GLfloat * params);
    void (*glPointParameteri) (GLenum pname, GLint param);
    void (*glPointParameteriv) (GLenum pname, const GLint * params);
    void (*glSecondaryColor3b) (GLbyte red, GLbyte green, GLbyte blue);
    void (*glSecondaryColor3bv) (const GLbyte * v);
    void (*glSecondaryColor3d) (GLdouble red, GLdouble green, GLdouble blue);
    void (*glSecondaryColor3dv) (const GLdouble * v);
    void (*glSecondaryColor3f) (GLfloat red, GLfloat green, GLfloat blue);
    void (*glSecondaryColor3fv) (const GLfloat * v);
    void (*glSecondaryColor3i) (GLint red, GLint green, GLint blue);
    void (*glSecondaryColor3iv) (const GLint * v);
    void (*glSecondaryColor3s) (GLshort red, GLshort green, GLshort blue);
    void (*glSecondaryColor3sv) (const GLshort * v);
    void (*glSecondaryColor3ub) (GLubyte red, GLubyte green, GLubyte blue);
    void (*glSecondaryColor3ubv) (const GLubyte * v);
    void (*glSecondaryColor3ui) (GLuint red, GLuint green, GLuint blue);
    void (*glSecondaryColor3uiv) (const GLuint * v);
    void (*glSecondaryColor3us) (GLushort red, GLushort green, GLushort blue);
    void (*glSecondaryColor3usv) (const GLushort * v);
    void (*glSecondaryColorPointer) (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
    void (*glWindowPos2d) (GLdouble x, GLdouble y);
    void (*glWindowPos2dv) (const GLdouble * v);
    void (*glWindowPos2f) (GLfloat x, GLfloat y);
    void (*glWindowPos2fv) (const GLfloat * v);
    void (*glWindowPos2i) (GLint x, GLint y);
    void (*glWindowPos2iv) (const GLint * v);
    void (*glWindowPos2s) (GLshort x, GLshort y);
    void (*glWindowPos2sv) (const GLshort * v);
    void (*glWindowPos3d) (GLdouble x, GLdouble y, GLdouble z);
    void (*glWindowPos3dv) (const GLdouble * v);
    void (*glWindowPos3f) (GLfloat x, GLfloat y, GLfloat z);
    void (*glWindowPos3fv) (const GLfloat * v);
    void (*glWindowPos3i) (GLint x, GLint y, GLint z);
    void (*glWindowPos3iv) (const GLint * v);
    void (*glWindowPos3s) (GLshort x, GLshort y, GLshort z);
    void (*glWindowPos3sv) (const GLshort * v);
    void (*glGenQueries) (GLsizei n, GLuint * ids);
    void (*glDeleteQueries) (GLsizei n, const GLuint * ids);
    GLboolean (*glIsQuery) (GLuint id);
    void (*glBeginQuery) (GLenum target, GLuint id);
    void (*glEndQuery) (GLenum target);
    void (*glGetQueryiv) (GLenum target, GLenum pname, GLint * params);
    void (*glGetQueryObjectiv) (GLuint id, GLenum pname, GLint * params);
    void (*glGetQueryObjectuiv) (GLuint id, GLenum pname, GLuint * params);
    void (*glBindBuffer) (GLenum target, GLuint buffer);
    void (*glDeleteBuffers) (GLsizei n, const GLuint * buffers);
    void (*glGenBuffers) (GLsizei n, GLuint * buffers);
    GLboolean (*glIsBuffer) (GLuint buffer);
    void (*glBufferData) (GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage);
    void (*glBufferSubData) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid * data);
    void (*glGetBufferSubData) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid * data);
    GLvoid* (*glMapBuffer) (GLenum target, GLenum access);
    GLboolean (*glUnmapBuffer) (GLenum target);
    void (*glGetBufferParameteriv) (GLenum target, GLenum pname, GLint * params);
    void (*glGetBufferPointerv) (GLenum target, GLenum pname, GLvoid *  * params);
    void (*glBlendEquationSeparate) (GLenum modeRGB, GLenum modeAlpha);
    void (*glDrawBuffers) (GLsizei n, const GLenum * bufs);
    void (*glStencilOpSeparate) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    void (*glStencilFuncSeparate) (GLenum face, GLenum func, GLint ref, GLuint mask);
    void (*glStencilMaskSeparate) (GLenum face, GLuint mask);
    void (*glAttachShader) (GLuint program, GLuint shader);
    void (*glBindAttribLocation) (GLuint program, GLuint index, const GLchar * name);
    void (*glCompileShader) (GLuint shader);
    GLuint (*glCreateProgram) ();
    GLuint (*glCreateShader) (GLenum type);
    void (*glDeleteProgram) (GLuint program);
    void (*glDeleteShader) (GLuint shader);
    void (*glDetachShader) (GLuint program, GLuint shader);
    void (*glDisableVertexAttribArray) (GLuint index);
    void (*glEnableVertexAttribArray) (GLuint index);
    void (*glGetActiveAttrib) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
    void (*glGetActiveUniform) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
    void (*glGetAttachedShaders) (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * obj);
    GLint (*glGetAttribLocation) (GLuint program, const GLchar * name);
    void (*glGetProgramiv) (GLuint program, GLenum pname, GLint * params);
    void (*glGetProgramInfoLog) (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
    void (*glGetShaderiv) (GLuint shader, GLenum pname, GLint * params);
    void (*glGetShaderInfoLog) (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
    void (*glGetShaderSource) (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
    GLint (*glGetUniformLocation) (GLuint program, const GLchar * name);
    void (*glGetUniformfv) (GLuint program, GLint location, GLfloat * params);
    void (*glGetUniformiv) (GLuint program, GLint location, GLint * params);
    void (*glGetVertexAttribdv) (GLuint index, GLenum pname, GLdouble * params);
    void (*glGetVertexAttribfv) (GLuint index, GLenum pname, GLfloat * params);
    void (*glGetVertexAttribiv) (GLuint index, GLenum pname, GLint * params);
    void (*glGetVertexAttribPointerv) (GLuint index, GLenum pname, GLvoid *  * pointer);
    GLboolean (*glIsProgram) (GLuint program);
    GLboolean (*glIsShader) (GLuint shader);
    void (*glLinkProgram) (GLuint program);
    void (*glShaderSource) (GLuint shader, GLsizei count, const GLchar *  * string, const GLint * length);
    void (*glUseProgram) (GLuint program);
    void (*glUniform1f) (GLint location, GLfloat v0);
    void (*glUniform2f) (GLint location, GLfloat v0, GLfloat v1);
    void (*glUniform3f) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    void (*glUniform4f) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    void (*glUniform1i) (GLint location, GLint v0);
    void (*glUniform2i) (GLint location, GLint v0, GLint v1);
    void (*glUniform3i) (GLint location, GLint v0, GLint v1, GLint v2);
    void (*glUniform4i) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    void (*glUniform1fv) (GLint location, GLsizei count, const GLfloat * value);
    void (*glUniform2fv) (GLint location, GLsizei count, const GLfloat * value);
    void (*glUniform3fv) (GLint location, GLsizei count, const GLfloat * value);
    void (*glUniform4fv) (GLint location, GLsizei count, const GLfloat * value);
    void (*glUniform1iv) (GLint location, GLsizei count, const GLint * value);
    void (*glUniform2iv) (GLint location, GLsizei count, const GLint * value);
    void (*glUniform3iv) (GLint location, GLsizei count, const GLint * value);
    void (*glUniform4iv) (GLint location, GLsizei count, const GLint * value);
    void (*glUniformMatrix2fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix3fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix4fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glValidateProgram) (GLuint program);
    void (*glVertexAttrib1d) (GLuint index, GLdouble x);
    void (*glVertexAttrib1dv) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib1f) (GLuint index, GLfloat x);
    void (*glVertexAttrib1fv) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib1s) (GLuint index, GLshort x);
    void (*glVertexAttrib1sv) (GLuint index, const GLshort * v);
    void (*glVertexAttrib2d) (GLuint index, GLdouble x, GLdouble y);
    void (*glVertexAttrib2dv) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib2f) (GLuint index, GLfloat x, GLfloat y);
    void (*glVertexAttrib2fv) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib2s) (GLuint index, GLshort x, GLshort y);
    void (*glVertexAttrib2sv) (GLuint index, const GLshort * v);
    void (*glVertexAttrib3d) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
    void (*glVertexAttrib3dv) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib3f) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
    void (*glVertexAttrib3fv) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib3s) (GLuint index, GLshort x, GLshort y, GLshort z);
    void (*glVertexAttrib3sv) (GLuint index, const GLshort * v);
    void (*glVertexAttrib4Nbv) (GLuint index, const GLbyte * v);
    void (*glVertexAttrib4Niv) (GLuint index, const GLint * v);
    void (*glVertexAttrib4Nsv) (GLuint index, const GLshort * v);
    void (*glVertexAttrib4Nub) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    void (*glVertexAttrib4Nubv) (GLuint index, const GLubyte * v);
    void (*glVertexAttrib4Nuiv) (GLuint index, const GLuint * v);
    void (*glVertexAttrib4Nusv) (GLuint index, const GLushort * v);
    void (*glVertexAttrib4bv) (GLuint index, const GLbyte * v);
    void (*glVertexAttrib4d) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (*glVertexAttrib4dv) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib4f) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (*glVertexAttrib4fv) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib4iv) (GLuint index, const GLint * v);
    void (*glVertexAttrib4s) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    void (*glVertexAttrib4sv) (GLuint index, const GLshort * v);
    void (*glVertexAttrib4ubv) (GLuint index, const GLubyte * v);
    void (*glVertexAttrib4uiv) (GLuint index, const GLuint * v);
    void (*glVertexAttrib4usv) (GLuint index, const GLushort * v);
    void (*glVertexAttribPointer) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
    void (*glUniformMatrix2x3fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix3x2fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix2x4fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix4x2fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix3x4fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix4x3fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glLoadTransposeMatrixfARB) (const GLfloat * m);
    void (*glLoadTransposeMatrixdARB) (const GLdouble * m);
    void (*glMultTransposeMatrixfARB) (const GLfloat * m);
    void (*glMultTransposeMatrixdARB) (const GLdouble * m);
    void (*glSampleCoverageARB) (GLclampf value, GLboolean invert);
    void (*glCompressedTexImage3DARB) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data);
    void (*glCompressedTexImage2DARB) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data);
    void (*glCompressedTexImage1DARB) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data);
    void (*glCompressedTexSubImage3DARB) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data);
    void (*glCompressedTexSubImage2DARB) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data);
    void (*glCompressedTexSubImage1DARB) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data);
    void (*glGetCompressedTexImageARB) (GLenum target, GLint level, GLvoid * img);
    void (*glPointParameterfARB) (GLenum pname, GLfloat param);
    void (*glPointParameterfvARB) (GLenum pname, const GLfloat * params);
    void (*glWindowPos2dARB) (GLdouble x, GLdouble y);
    void (*glWindowPos2dvARB) (const GLdouble * v);
    void (*glWindowPos2fARB) (GLfloat x, GLfloat y);
    void (*glWindowPos2fvARB) (const GLfloat * v);
    void (*glWindowPos2iARB) (GLint x, GLint y);
    void (*glWindowPos2ivARB) (const GLint * v);
    void (*glWindowPos2sARB) (GLshort x, GLshort y);
    void (*glWindowPos2svARB) (const GLshort * v);
    void (*glWindowPos3dARB) (GLdouble x, GLdouble y, GLdouble z);
    void (*glWindowPos3dvARB) (const GLdouble * v);
    void (*glWindowPos3fARB) (GLfloat x, GLfloat y, GLfloat z);
    void (*glWindowPos3fvARB) (const GLfloat * v);
    void (*glWindowPos3iARB) (GLint x, GLint y, GLint z);
    void (*glWindowPos3ivARB) (const GLint * v);
    void (*glWindowPos3sARB) (GLshort x, GLshort y, GLshort z);
    void (*glWindowPos3svARB) (const GLshort * v);
    void (*glVertexAttrib1dARB) (GLuint index, GLdouble x);
    void (*glVertexAttrib1dvARB) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib1fARB) (GLuint index, GLfloat x);
    void (*glVertexAttrib1fvARB) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib1sARB) (GLuint index, GLshort x);
    void (*glVertexAttrib1svARB) (GLuint index, const GLshort * v);
    void (*glVertexAttrib2dARB) (GLuint index, GLdouble x, GLdouble y);
    void (*glVertexAttrib2dvARB) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib2fARB) (GLuint index, GLfloat x, GLfloat y);
    void (*glVertexAttrib2fvARB) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib2sARB) (GLuint index, GLshort x, GLshort y);
    void (*glVertexAttrib2svARB) (GLuint index, const GLshort * v);
    void (*glVertexAttrib3dARB) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
    void (*glVertexAttrib3dvARB) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib3fARB) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
    void (*glVertexAttrib3fvARB) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib3sARB) (GLuint index, GLshort x, GLshort y, GLshort z);
    void (*glVertexAttrib3svARB) (GLuint index, const GLshort * v);
    void (*glVertexAttrib4NbvARB) (GLuint index, const GLbyte * v);
    void (*glVertexAttrib4NivARB) (GLuint index, const GLint * v);
    void (*glVertexAttrib4NsvARB) (GLuint index, const GLshort * v);
    void (*glVertexAttrib4NubARB) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    void (*glVertexAttrib4NubvARB) (GLuint index, const GLubyte * v);
    void (*glVertexAttrib4NuivARB) (GLuint index, const GLuint * v);
    void (*glVertexAttrib4NusvARB) (GLuint index, const GLushort * v);
    void (*glVertexAttrib4bvARB) (GLuint index, const GLbyte * v);
    void (*glVertexAttrib4dARB) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (*glVertexAttrib4dvARB) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib4fARB) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (*glVertexAttrib4fvARB) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib4ivARB) (GLuint index, const GLint * v);
    void (*glVertexAttrib4sARB) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    void (*glVertexAttrib4svARB) (GLuint index, const GLshort * v);
    void (*glVertexAttrib4ubvARB) (GLuint index, const GLubyte * v);
    void (*glVertexAttrib4uivARB) (GLuint index, const GLuint * v);
    void (*glVertexAttrib4usvARB) (GLuint index, const GLushort * v);
    void (*glVertexAttribPointerARB) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
    void (*glEnableVertexAttribArrayARB) (GLuint index);
    void (*glDisableVertexAttribArrayARB) (GLuint index);
    void (*glProgramStringARB) (GLenum target, GLenum format, GLsizei len, const GLvoid * string);
    void (*glBindProgramARB) (GLenum target, GLuint program);
    void (*glDeleteProgramsARB) (GLsizei n, const GLuint * programs);
    void (*glGenProgramsARB) (GLsizei n, GLuint * programs);
    void (*glProgramEnvParameter4dARB) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (*glProgramEnvParameter4dvARB) (GLenum target, GLuint index, const GLdouble * params);
    void (*glProgramEnvParameter4fARB) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (*glProgramEnvParameter4fvARB) (GLenum target, GLuint index, const GLfloat * params);
    void (*glProgramLocalParameter4dARB) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (*glProgramLocalParameter4dvARB) (GLenum target, GLuint index, const GLdouble * params);
    void (*glProgramLocalParameter4fARB) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (*glProgramLocalParameter4fvARB) (GLenum target, GLuint index, const GLfloat * params);
    void (*glGetProgramEnvParameterdvARB) (GLenum target, GLuint index, GLdouble * params);
    void (*glGetProgramEnvParameterfvARB) (GLenum target, GLuint index, GLfloat * params);
    void (*glGetProgramLocalParameterdvARB) (GLenum target, GLuint index, GLdouble * params);
    void (*glGetProgramLocalParameterfvARB) (GLenum target, GLuint index, GLfloat * params);
    void (*glGetProgramivARB) (GLenum target, GLenum pname, GLint * params);
    void (*glGetProgramStringARB) (GLenum target, GLenum pname, GLvoid * string);
    void (*glGetVertexAttribdvARB) (GLuint index, GLenum pname, GLdouble * params);
    void (*glGetVertexAttribfvARB) (GLuint index, GLenum pname, GLfloat * params);
    void (*glGetVertexAttribivARB) (GLuint index, GLenum pname, GLint * params);
    void (*glGetVertexAttribPointervARB) (GLuint index, GLenum pname, GLvoid *  * pointer);
    GLboolean (*glIsProgramARB) (GLuint program);
    void (*glBindBufferARB) (GLenum target, GLuint buffer);
    void (*glDeleteBuffersARB) (GLsizei n, const GLuint * buffers);
    void (*glGenBuffersARB) (GLsizei n, GLuint * buffers);
    GLboolean (*glIsBufferARB) (GLuint buffer);
    void (*glBufferDataARB) (GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage);
    void (*glBufferSubDataARB) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data);
    void (*glGetBufferSubDataARB) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid * data);
    GLvoid* (*glMapBufferARB) (GLenum target, GLenum access);
    GLboolean (*glUnmapBufferARB) (GLenum target);
    void (*glGetBufferParameterivARB) (GLenum target, GLenum pname, GLint * params);
    void (*glGetBufferPointervARB) (GLenum target, GLenum pname, GLvoid *  * params);
    void (*glGenQueriesARB) (GLsizei n, GLuint * ids);
    void (*glDeleteQueriesARB) (GLsizei n, const GLuint * ids);
    GLboolean (*glIsQueryARB) (GLuint id);
    void (*glBeginQueryARB) (GLenum target, GLuint id);
    void (*glEndQueryARB) (GLenum target);
    void (*glGetQueryivARB) (GLenum target, GLenum pname, GLint * params);
    void (*glGetQueryObjectivARB) (GLuint id, GLenum pname, GLint * params);
    void (*glGetQueryObjectuivARB) (GLuint id, GLenum pname, GLuint * params);
    void (*glDeleteObjectARB) (GLhandleARB obj);
    GLhandleARB (*glGetHandleARB) (GLenum pname);
    void (*glDetachObjectARB) (GLhandleARB containerObj, GLhandleARB attachedObj);
    GLhandleARB (*glCreateShaderObjectARB) (GLenum shaderType);
    void (*glShaderSourceARB) (GLhandleARB shaderObj, GLsizei count, const GLcharARB *  * string, const GLint * length);
    void (*glCompileShaderARB) (GLhandleARB shaderObj);
    GLhandleARB (*glCreateProgramObjectARB) ();
    void (*glAttachObjectARB) (GLhandleARB containerObj, GLhandleARB obj);
    void (*glLinkProgramARB) (GLhandleARB programObj);
    void (*glUseProgramObjectARB) (GLhandleARB programObj);
    void (*glValidateProgramARB) (GLhandleARB programObj);
    void (*glUniform1fARB) (GLint location, GLfloat v0);
    void (*glUniform2fARB) (GLint location, GLfloat v0, GLfloat v1);
    void (*glUniform3fARB) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    void (*glUniform4fARB) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    void (*glUniform1iARB) (GLint location, GLint v0);
    void (*glUniform2iARB) (GLint location, GLint v0, GLint v1);
    void (*glUniform3iARB) (GLint location, GLint v0, GLint v1, GLint v2);
    void (*glUniform4iARB) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    void (*glUniform1fvARB) (GLint location, GLsizei count, const GLfloat * value);
    void (*glUniform2fvARB) (GLint location, GLsizei count, const GLfloat * value);
    void (*glUniform3fvARB) (GLint location, GLsizei count, const GLfloat * value);
    void (*glUniform4fvARB) (GLint location, GLsizei count, const GLfloat * value);
    void (*glUniform1ivARB) (GLint location, GLsizei count, const GLint * value);
    void (*glUniform2ivARB) (GLint location, GLsizei count, const GLint * value);
    void (*glUniform3ivARB) (GLint location, GLsizei count, const GLint * value);
    void (*glUniform4ivARB) (GLint location, GLsizei count, const GLint * value);
    void (*glUniformMatrix2fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix3fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glUniformMatrix4fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    void (*glGetObjectParameterfvARB) (GLhandleARB obj, GLenum pname, GLfloat * params);
    void (*glGetObjectParameterivARB) (GLhandleARB obj, GLenum pname, GLint * params);
    void (*glGetInfoLogARB) (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
    void (*glGetAttachedObjectsARB) (GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
    GLint (*glGetUniformLocationARB) (GLhandleARB programObj, const GLcharARB * name);
    void (*glGetActiveUniformARB) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
    void (*glGetUniformfvARB) (GLhandleARB programObj, GLint location, GLfloat * params);
    void (*glGetUniformivARB) (GLhandleARB programObj, GLint location, GLint * params);
    void (*glGetShaderSourceARB) (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
    void (*glBindAttribLocationARB) (GLhandleARB programObj, GLuint index, const GLcharARB * name);
    void (*glGetActiveAttribARB) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
    GLint (*glGetAttribLocationARB) (GLhandleARB programObj, const GLcharARB * name);
    void (*glDrawBuffersARB) (GLsizei n, const GLenum * bufs);
    GLboolean (*glIsRenderbuffer) (GLuint renderbuffer);
    void (*glBindRenderbuffer) (GLenum target, GLuint renderbuffer);
    void (*glDeleteRenderbuffers) (GLsizei n, const GLuint * renderbuffers);
    void (*glGenRenderbuffers) (GLsizei n, GLuint * renderbuffers);
    void (*glRenderbufferStorage) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    void (*glGetRenderbufferParameteriv) (GLenum target, GLenum pname, GLint * params);
    GLboolean (*glIsFramebuffer) (GLuint framebuffer);
    void (*glBindFramebuffer) (GLenum target, GLuint framebuffer);
    void (*glDeleteFramebuffers) (GLsizei n, const GLuint * framebuffers);
    void (*glGenFramebuffers) (GLsizei n, GLuint * framebuffers);
    GLenum (*glCheckFramebufferStatus) (GLenum target);
    void (*glFramebufferTexture1D) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (*glFramebufferTexture2D) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (*glFramebufferTexture3D) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    void (*glFramebufferRenderbuffer) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    void (*glGetFramebufferAttachmentParameteriv) (GLenum target, GLenum attachment, GLenum pname, GLint * params);
    void (*glGenerateMipmap) (GLenum target);
    void (*glBlitFramebuffer) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    void (*glRenderbufferStorageMultisample) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (*glFramebufferTextureLayer) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    void (*glBlendColorEXT) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
    void (*glPolygonOffsetEXT) (GLfloat factor, GLfloat bias);
    void (*glTexImage3DEXT) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
    void (*glTexSubImage3DEXT) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels);
    void (*glTexSubImage1DEXT) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels);
    void (*glTexSubImage2DEXT) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);
    void (*glCopyTexImage1DEXT) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    void (*glCopyTexImage2DEXT) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    void (*glCopyTexSubImage1DEXT) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    void (*glCopyTexSubImage2DEXT) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    void (*glCopyTexSubImage3DEXT) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    GLboolean (*glAreTexturesResidentEXT) (GLsizei n, const GLuint * textures, GLboolean * residences);
    void (*glBindTextureEXT) (GLenum target, GLuint texture);
    void (*glDeleteTexturesEXT) (GLsizei n, const GLuint * textures);
    void (*glGenTexturesEXT) (GLsizei n, GLuint * textures);
    GLboolean (*glIsTextureEXT) (GLuint texture);
    void (*glPrioritizeTexturesEXT) (GLsizei n, const GLuint * textures, const GLclampf * priorities);
    void (*glArrayElementEXT) (GLint i);
    void (*glColorPointerEXT) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);
    void (*glDrawArraysEXT) (GLenum mode, GLint first, GLsizei count);
    void (*glEdgeFlagPointerEXT) (GLsizei stride, GLsizei count, const GLboolean * pointer);
    void (*glGetPointervEXT) (GLenum pname, GLvoid *  * params);
    void (*glIndexPointerEXT) (GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);
    void (*glNormalPointerEXT) (GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);
    void (*glTexCoordPointerEXT) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);
    void (*glVertexPointerEXT) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);
    void (*glBlendEquationEXT) (GLenum mode);
    void (*glPointParameterfEXT) (GLenum pname, GLfloat param);
    void (*glPointParameterfvEXT) (GLenum pname, const GLfloat * params);
    void (*glColorTableEXT) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid * table);
    void (*glGetColorTableEXT) (GLenum target, GLenum format, GLenum type, GLvoid * data);
    void (*glGetColorTableParameterivEXT) (GLenum target, GLenum pname, GLint * params);
    void (*glGetColorTableParameterfvEXT) (GLenum target, GLenum pname, GLfloat * params);
    void (*glLockArraysEXT) (GLint first, GLsizei count);
    void (*glUnlockArraysEXT) ();
    void (*glDrawRangeElementsEXT) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices);
    void (*glSecondaryColor3bEXT) (GLbyte red, GLbyte green, GLbyte blue);
    void (*glSecondaryColor3bvEXT) (const GLbyte * v);
    void (*glSecondaryColor3dEXT) (GLdouble red, GLdouble green, GLdouble blue);
    void (*glSecondaryColor3dvEXT) (const GLdouble * v);
    void (*glSecondaryColor3fEXT) (GLfloat red, GLfloat green, GLfloat blue);
    void (*glSecondaryColor3fvEXT) (const GLfloat * v);
    void (*glSecondaryColor3iEXT) (GLint red, GLint green, GLint blue);
    void (*glSecondaryColor3ivEXT) (const GLint * v);
    void (*glSecondaryColor3sEXT) (GLshort red, GLshort green, GLshort blue);
    void (*glSecondaryColor3svEXT) (const GLshort * v);
    void (*glSecondaryColor3ubEXT) (GLubyte red, GLubyte green, GLubyte blue);
    void (*glSecondaryColor3ubvEXT) (const GLubyte * v);
    void (*glSecondaryColor3uiEXT) (GLuint red, GLuint green, GLuint blue);
    void (*glSecondaryColor3uivEXT) (const GLuint * v);
    void (*glSecondaryColor3usEXT) (GLushort red, GLushort green, GLushort blue);
    void (*glSecondaryColor3usvEXT) (const GLushort * v);
    void (*glSecondaryColorPointerEXT) (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
    void (*glMultiDrawArraysEXT) (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
    void (*glMultiDrawElementsEXT) (GLenum mode, const GLsizei * count, GLenum type, const GLvoid *  * indices, GLsizei primcount);
    void (*glFogCoordfEXT) (GLfloat coord);
    void (*glFogCoordfvEXT) (const GLfloat * coord);
    void (*glFogCoorddEXT) (GLdouble coord);
    void (*glFogCoorddvEXT) (const GLdouble * coord);
    void (*glFogCoordPointerEXT) (GLenum type, GLsizei stride, const GLvoid * pointer);
    void (*glBlendFuncSeparateEXT) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    void (*glFlushVertexArrayRangeNV) ();
    void (*glVertexArrayRangeNV) (GLsizei length, const GLvoid * pointer);
    void (*glCombinerParameterfvNV) (GLenum pname, const GLfloat * params);
    void (*glCombinerParameterfNV) (GLenum pname, GLfloat param);
    void (*glCombinerParameterivNV) (GLenum pname, const GLint * params);
    void (*glCombinerParameteriNV) (GLenum pname, GLint param);
    void (*glCombinerInputNV) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
    void (*glCombinerOutputNV) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
    void (*glFinalCombinerInputNV) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
    void (*glGetCombinerInputParameterfvNV) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
    void (*glGetCombinerInputParameterivNV) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
    void (*glGetCombinerOutputParameterfvNV) (GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
    void (*glGetCombinerOutputParameterivNV) (GLenum stage, GLenum portion, GLenum pname, GLint * params);
    void (*glGetFinalCombinerInputParameterfvNV) (GLenum variable, GLenum pname, GLfloat * params);
    void (*glGetFinalCombinerInputParameterivNV) (GLenum variable, GLenum pname, GLint * params);
    void (*glResizeBuffersMESA) ();
    void (*glWindowPos2dMESA) (GLdouble x, GLdouble y);
    void (*glWindowPos2dvMESA) (const GLdouble * v);
    void (*glWindowPos2fMESA) (GLfloat x, GLfloat y);
    void (*glWindowPos2fvMESA) (const GLfloat * v);
    void (*glWindowPos2iMESA) (GLint x, GLint y);
    void (*glWindowPos2ivMESA) (const GLint * v);
    void (*glWindowPos2sMESA) (GLshort x, GLshort y);
    void (*glWindowPos2svMESA) (const GLshort * v);
    void (*glWindowPos3dMESA) (GLdouble x, GLdouble y, GLdouble z);
    void (*glWindowPos3dvMESA) (const GLdouble * v);
    void (*glWindowPos3fMESA) (GLfloat x, GLfloat y, GLfloat z);
    void (*glWindowPos3fvMESA) (const GLfloat * v);
    void (*glWindowPos3iMESA) (GLint x, GLint y, GLint z);
    void (*glWindowPos3ivMESA) (const GLint * v);
    void (*glWindowPos3sMESA) (GLshort x, GLshort y, GLshort z);
    void (*glWindowPos3svMESA) (const GLshort * v);
    void (*glWindowPos4dMESA) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (*glWindowPos4dvMESA) (const GLdouble * v);
    void (*glWindowPos4fMESA) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (*glWindowPos4fvMESA) (const GLfloat * v);
    void (*glWindowPos4iMESA) (GLint x, GLint y, GLint z, GLint w);
    void (*glWindowPos4ivMESA) (const GLint * v);
    void (*glWindowPos4sMESA) (GLshort x, GLshort y, GLshort z, GLshort w);
    void (*glWindowPos4svMESA) (const GLshort * v);
    GLboolean (*glAreProgramsResidentNV) (GLsizei n, const GLuint * programs, GLboolean * residences);
    void (*glBindProgramNV) (GLenum target, GLuint id);
    void (*glDeleteProgramsNV) (GLsizei n, const GLuint * programs);
    void (*glExecuteProgramNV) (GLenum target, GLuint id, const GLfloat * params);
    void (*glGenProgramsNV) (GLsizei n, GLuint * programs);
    void (*glGetProgramParameterdvNV) (GLenum target, GLuint index, GLenum pname, GLdouble * params);
    void (*glGetProgramParameterfvNV) (GLenum target, GLuint index, GLenum pname, GLfloat * params);
    void (*glGetProgramivNV) (GLuint id, GLenum pname, GLint * params);
    void (*glGetProgramStringNV) (GLuint id, GLenum pname, GLubyte * program);
    void (*glGetTrackMatrixivNV) (GLenum target, GLuint address, GLenum pname, GLint * params);
    void (*glGetVertexAttribdvNV) (GLuint index, GLenum pname, GLdouble * params);
    void (*glGetVertexAttribfvNV) (GLuint index, GLenum pname, GLfloat * params);
    void (*glGetVertexAttribivNV) (GLuint index, GLenum pname, GLint * params);
    void (*glGetVertexAttribPointervNV) (GLuint index, GLenum pname, GLvoid *  * pointer);
    GLboolean (*glIsProgramNV) (GLuint id);
    void (*glLoadProgramNV) (GLenum target, GLuint id, GLsizei len, const GLubyte * program);
    void (*glProgramParameter4dNV) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (*glProgramParameter4dvNV) (GLenum target, GLuint index, const GLdouble * v);
    void (*glProgramParameter4fNV) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (*glProgramParameter4fvNV) (GLenum target, GLuint index, const GLfloat * v);
    void (*glProgramParameters4dvNV) (GLenum target, GLuint index, GLsizei count, const GLdouble * v);
    void (*glProgramParameters4fvNV) (GLenum target, GLuint index, GLsizei count, const GLfloat * v);
    void (*glRequestResidentProgramsNV) (GLsizei n, const GLuint * programs);
    void (*glTrackMatrixNV) (GLenum target, GLuint address, GLenum matrix, GLenum transform);
    void (*glVertexAttribPointerNV) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid * pointer);
    void (*glVertexAttrib1dNV) (GLuint index, GLdouble x);
    void (*glVertexAttrib1dvNV) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib1fNV) (GLuint index, GLfloat x);
    void (*glVertexAttrib1fvNV) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib1sNV) (GLuint index, GLshort x);
    void (*glVertexAttrib1svNV) (GLuint index, const GLshort * v);
    void (*glVertexAttrib2dNV) (GLuint index, GLdouble x, GLdouble y);
    void (*glVertexAttrib2dvNV) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib2fNV) (GLuint index, GLfloat x, GLfloat y);
    void (*glVertexAttrib2fvNV) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib2sNV) (GLuint index, GLshort x, GLshort y);
    void (*glVertexAttrib2svNV) (GLuint index, const GLshort * v);
    void (*glVertexAttrib3dNV) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
    void (*glVertexAttrib3dvNV) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib3fNV) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
    void (*glVertexAttrib3fvNV) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib3sNV) (GLuint index, GLshort x, GLshort y, GLshort z);
    void (*glVertexAttrib3svNV) (GLuint index, const GLshort * v);
    void (*glVertexAttrib4dNV) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (*glVertexAttrib4dvNV) (GLuint index, const GLdouble * v);
    void (*glVertexAttrib4fNV) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (*glVertexAttrib4fvNV) (GLuint index, const GLfloat * v);
    void (*glVertexAttrib4sNV) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    void (*glVertexAttrib4svNV) (GLuint index, const GLshort * v);
    void (*glVertexAttrib4ubNV) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    void (*glVertexAttrib4ubvNV) (GLuint index, const GLubyte * v);
    void (*glVertexAttribs1dvNV) (GLuint index, GLsizei count, const GLdouble * v);
    void (*glVertexAttribs1fvNV) (GLuint index, GLsizei count, const GLfloat * v);
    void (*glVertexAttribs1svNV) (GLuint index, GLsizei count, const GLshort * v);
    void (*glVertexAttribs2dvNV) (GLuint index, GLsizei count, const GLdouble * v);
    void (*glVertexAttribs2fvNV) (GLuint index, GLsizei count, const GLfloat * v);
    void (*glVertexAttribs2svNV) (GLuint index, GLsizei count, const GLshort * v);
    void (*glVertexAttribs3dvNV) (GLuint index, GLsizei count, const GLdouble * v);
    void (*glVertexAttribs3fvNV) (GLuint index, GLsizei count, const GLfloat * v);
    void (*glVertexAttribs3svNV) (GLuint index, GLsizei count, const GLshort * v);
    void (*glVertexAttribs4dvNV) (GLuint index, GLsizei count, const GLdouble * v);
    void (*glVertexAttribs4fvNV) (GLuint index, GLsizei count, const GLfloat * v);
    void (*glVertexAttribs4svNV) (GLuint index, GLsizei count, const GLshort * v);
    void (*glVertexAttribs4ubvNV) (GLuint index, GLsizei count, const GLubyte * v);
    void (*glTexBumpParameterivATI) (GLenum pname, const GLint * param);
    void (*glTexBumpParameterfvATI) (GLenum pname, const GLfloat * param);
    void (*glGetTexBumpParameterivATI) (GLenum pname, GLint * param);
    void (*glGetTexBumpParameterfvATI) (GLenum pname, GLfloat * param);
    GLuint (*glGenFragmentShadersATI) (GLuint range);
    void (*glBindFragmentShaderATI) (GLuint id);
    void (*glDeleteFragmentShaderATI) (GLuint id);
    void (*glBeginFragmentShaderATI) ();
    void (*glEndFragmentShaderATI) ();
    void (*glPassTexCoordATI) (GLuint dst, GLuint coord, GLenum swizzle);
    void (*glSampleMapATI) (GLuint dst, GLuint interp, GLenum swizzle);
    void (*glColorFragmentOp1ATI) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
    void (*glColorFragmentOp2ATI) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
    void (*glColorFragmentOp3ATI) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
    void (*glAlphaFragmentOp1ATI) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
    void (*glAlphaFragmentOp2ATI) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
    void (*glAlphaFragmentOp3ATI) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
    void (*glSetFragmentShaderConstantATI) (GLuint dst, const GLfloat * value);
    void (*glPointParameteriNV) (GLenum pname, GLint param);
    void (*glPointParameterivNV) (GLenum pname, const GLint * params);
    void (*glDrawBuffersATI) (GLsizei n, const GLenum * bufs);
    void (*glProgramNamedParameter4fNV) (GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    void (*glProgramNamedParameter4dNV) (GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    void (*glProgramNamedParameter4fvNV) (GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
    void (*glProgramNamedParameter4dvNV) (GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
    void (*glGetProgramNamedParameterfvNV) (GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
    void (*glGetProgramNamedParameterdvNV) (GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
    GLboolean (*glIsRenderbufferEXT) (GLuint renderbuffer);
    void (*glBindRenderbufferEXT) (GLenum target, GLuint renderbuffer);
    void (*glDeleteRenderbuffersEXT) (GLsizei n, const GLuint * renderbuffers);
    void (*glGenRenderbuffersEXT) (GLsizei n, GLuint * renderbuffers);
    void (*glRenderbufferStorageEXT) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    void (*glGetRenderbufferParameterivEXT) (GLenum target, GLenum pname, GLint * params);
    GLboolean (*glIsFramebufferEXT) (GLuint framebuffer);
    void (*glBindFramebufferEXT) (GLenum target, GLuint framebuffer);
    void (*glDeleteFramebuffersEXT) (GLsizei n, const GLuint * framebuffers);
    void (*glGenFramebuffersEXT) (GLsizei n, GLuint * framebuffers);
    GLenum (*glCheckFramebufferStatusEXT) (GLenum target);
    void (*glFramebufferTexture1DEXT) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (*glFramebufferTexture2DEXT) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    void (*glFramebufferTexture3DEXT) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    void (*glFramebufferRenderbufferEXT) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    void (*glGetFramebufferAttachmentParameterivEXT) (GLenum target, GLenum attachment, GLenum pname, GLint * params);
    void (*glGenerateMipmapEXT) (GLenum target);
    void (*glFramebufferTextureLayerEXT) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    GLvoid* (*glMapBufferRange) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
    void (*glFlushMappedBufferRange) (GLenum target, GLintptr offset, GLsizeiptr length);
    void (*glBindVertexArray) (GLuint array);
    void (*glDeleteVertexArrays) (GLsizei n, const GLuint * arrays);
    void (*glGenVertexArrays) (GLsizei n, GLuint * arrays);
    GLboolean (*glIsVertexArray) (GLuint array);
    void (*glCopyBufferSubData) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    GLsync (*glFenceSync) (GLenum condition, GLbitfield flags);
    GLboolean (*glIsSync) (GLsync sync);
    void (*glDeleteSync) (GLsync sync);
    GLenum (*glClientWaitSync) (GLsync sync, GLbitfield flags, GLuint64 timeout);
    void (*glWaitSync) (GLsync sync, GLbitfield flags, GLuint64 timeout);
    void (*glGetInteger64v) (GLenum pname, GLint64 * params);
    void (*glGetSynciv) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
    void (*glProvokingVertexEXT) (GLenum mode);
    void (*glDrawElementsBaseVertex) (GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLint basevertex);
    void (*glDrawRangeElementsBaseVertex) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices, GLint basevertex);
    void (*glMultiDrawElementsBaseVertex) (GLenum mode, const GLsizei * count, GLenum type, const GLvoid *  * indices, GLsizei primcount, const GLint * basevertex);
    void (*glProvokingVertex) (GLenum mode);
    void (*glRenderbufferStorageMultisampleEXT) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    void (*glColorMaskIndexedEXT) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    void (*glGetBooleanIndexedvEXT) (GLenum target, GLuint index, GLboolean * data);
    void (*glGetIntegerIndexedvEXT) (GLenum target, GLuint index, GLint * data);
    void (*glEnableIndexedEXT) (GLenum target, GLuint index);
    void (*glDisableIndexedEXT) (GLenum target, GLuint index);
    GLboolean (*glIsEnabledIndexedEXT) (GLenum target, GLuint index);
    void (*glBeginConditionalRenderNV) (GLuint id, GLenum mode);
    void (*glEndConditionalRenderNV) ();
    GLenum (*glObjectPurgeableAPPLE) (GLenum objectType, GLuint name, GLenum option);
    GLenum (*glObjectUnpurgeableAPPLE) (GLenum objectType, GLuint name, GLenum option);
    void (*glGetObjectParameterivAPPLE) (GLenum objectType, GLuint name, GLenum pname, GLint * params);
    void (*glBeginTransformFeedback) (GLenum primitiveMode);
    void (*glEndTransformFeedback) ();
    void (*glBindBufferRange) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (*glBindBufferBase) (GLenum target, GLuint index, GLuint buffer);
    void (*glTransformFeedbackVaryings) (GLuint program, GLsizei count, const GLchar *  * varyings, GLenum bufferMode);
    void (*glGetTransformFeedbackVarying) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
    void (*glDrawArraysInstanced) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
    void (*glDrawElementsInstanced) (GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount);
    void (*glDrawArraysInstancedARB) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
    void (*glDrawElementsInstancedARB) (GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount);
    void (*glProgramParameteriARB) (GLuint program, GLenum pname, GLint value);
    void (*glFramebufferTextureARB) (GLenum target, GLenum attachment, GLuint texture, GLint level);
    void (*glFramebufferTextureFaceARB) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
    void (*glBindTransformFeedback) (GLenum target, GLuint id);
    void (*glDeleteTransformFeedbacks) (GLsizei n, const GLuint * ids);
    void (*glGenTransformFeedbacks) (GLsizei n, GLuint * ids);
    GLboolean (*glIsTransformFeedback) (GLuint id);
    void (*glPauseTransformFeedback) ();
    void (*glResumeTransformFeedback) ();
    void (*glDrawTransformFeedback) (GLenum mode, GLuint id);
    void (*glDrawArraysInstancedEXT) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
    void (*glDrawElementsInstancedEXT) (GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount);
    void (*glBeginTransformFeedbackEXT) (GLenum primitiveMode);
    void (*glEndTransformFeedbackEXT) ();
    void (*glBindBufferRangeEXT) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    void (*glBindBufferOffsetEXT) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
    void (*glBindBufferBaseEXT) (GLenum target, GLuint index, GLuint buffer);
    void (*glTransformFeedbackVaryingsEXT) (GLuint program, GLsizei count, const GLchar *  * varyings, GLenum bufferMode);
    void (*glGetTransformFeedbackVaryingEXT) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
    void (*glEGLImageTargetTexture2DOES) (GLenum target, GLeglImageOES image);
    void (*glEGLImageTargetRenderbufferStorageOES) (GLenum target, GLeglImageOES image);
    void (*glColorMaski) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    void (*glGetBooleani_v) (GLenum target, GLuint index, GLboolean * data);
    void (*glGetIntegeri_v) (GLenum target, GLuint index, GLint * data);
    void (*glEnablei) (GLenum target, GLuint index);
    void (*glDisablei) (GLenum target, GLuint index);
    GLboolean (*glIsEnabledi) (GLenum target, GLuint index);
    void (*glClampColor) (GLenum target, GLenum clamp);
    void (*glBeginConditionalRender) (GLuint id, GLenum mode);
    void (*glEndConditionalRender) ();
    void (*glVertexAttribIPointer) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
    void (*glGetVertexAttribIiv) (GLuint index, GLenum pname, GLint * params);
    void (*glGetVertexAttribIuiv) (GLuint index, GLenum pname, GLuint * params);
    void (*glVertexAttribI1i) (GLuint index, GLint x);
    void (*glVertexAttribI2i) (GLuint index, GLint x, GLint y);
    void (*glVertexAttribI3i) (GLuint index, GLint x, GLint y, GLint z);
    void (*glVertexAttribI4i) (GLuint index, GLint x, GLint y, GLint z, GLint w);
    void (*glVertexAttribI1ui) (GLuint index, GLuint x);
    void (*glVertexAttribI2ui) (GLuint index, GLuint x, GLuint y);
    void (*glVertexAttribI3ui) (GLuint index, GLuint x, GLuint y, GLuint z);
    void (*glVertexAttribI4ui) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    void (*glVertexAttribI1iv) (GLuint index, const GLint * v);
    void (*glVertexAttribI2iv) (GLuint index, const GLint * v);
    void (*glVertexAttribI3iv) (GLuint index, const GLint * v);
    void (*glVertexAttribI4iv) (GLuint index, const GLint * v);
    void (*glVertexAttribI1uiv) (GLuint index, const GLuint * v);
    void (*glVertexAttribI2uiv) (GLuint index, const GLuint * v);
    void (*glVertexAttribI3uiv) (GLuint index, const GLuint * v);
    void (*glVertexAttribI4uiv) (GLuint index, const GLuint * v);
    void (*glVertexAttribI4bv) (GLuint index, const GLbyte * v);
    void (*glVertexAttribI4sv) (GLuint index, const GLshort * v);
    void (*glVertexAttribI4ubv) (GLuint index, const GLubyte * v);
    void (*glVertexAttribI4usv) (GLuint index, const GLushort * v);
    void (*glGetUniformuiv) (GLuint program, GLint location, GLuint * params);
    void (*glBindFragDataLocation) (GLuint program, GLuint color, const GLchar * name);
    GLint (*glGetFragDataLocation) (GLuint program, const GLchar * name);
    void (*glUniform1ui) (GLint location, GLuint v0);
    void (*glUniform2ui) (GLint location, GLuint v0, GLuint v1);
    void (*glUniform3ui) (GLint location, GLuint v0, GLuint v1, GLuint v2);
    void (*glUniform4ui) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    void (*glUniform1uiv) (GLint location, GLsizei count, const GLuint * value);
    void (*glUniform2uiv) (GLint location, GLsizei count, const GLuint * value);
    void (*glUniform3uiv) (GLint location, GLsizei count, const GLuint * value);
    void (*glUniform4uiv) (GLint location, GLsizei count, const GLuint * value);
    void (*glTexParameterIiv) (GLenum target, GLenum pname, const GLint * params);
    void (*glTexParameterIuiv) (GLenum target, GLenum pname, const GLuint * params);
    void (*glGetTexParameterIiv) (GLenum target, GLenum pname, GLint * params);
    void (*glGetTexParameterIuiv) (GLenum target, GLenum pname, GLuint * params);
    void (*glClearBufferiv) (GLenum buffer, GLint drawbuffer, const GLint * value);
    void (*glClearBufferuiv) (GLenum buffer, GLint drawbuffer, const GLuint * value);
    void (*glClearBufferfv) (GLenum buffer, GLint drawbuffer, const GLfloat * value);
    void (*glClearBufferfi) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    const GLubyte * (*glGetStringi) (GLenum name, GLuint index);
    void (*glTexBuffer) (GLenum target, GLenum internalformat, GLuint buffer);
    void (*glPrimitiveRestartIndex) (GLuint index);
    void (*glGetInteger64i_v) (GLenum target, GLuint index, GLint64 * data);
    void (*glGetBufferParameteri64v) (GLenum target, GLenum pname, GLint64 * params);
    void (*glFramebufferTexture) (GLenum target, GLenum attachment, GLuint texture, GLint level);
    void (*glVertexAttribDivisor) (GLuint index, GLuint divisor);
    void (*glPrimitiveRestartNV) ();
    void (*glPrimitiveRestartIndexNV) (GLuint index);
    void (*glVertexAttribI1iEXT) (GLuint index, GLint x);
    void (*glVertexAttribI2iEXT) (GLuint index, GLint x, GLint y);
    void (*glVertexAttribI3iEXT) (GLuint index, GLint x, GLint y, GLint z);
    void (*glVertexAttribI4iEXT) (GLuint index, GLint x, GLint y, GLint z, GLint w);
    void (*glVertexAttribI1uiEXT) (GLuint index, GLuint x);
    void (*glVertexAttribI2uiEXT) (GLuint index, GLuint x, GLuint y);
    void (*glVertexAttribI3uiEXT) (GLuint index, GLuint x, GLuint y, GLuint z);
    void (*glVertexAttribI4uiEXT) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    void (*glVertexAttribI1ivEXT) (GLuint index, const GLint * v);
    void (*glVertexAttribI2ivEXT) (GLuint index, const GLint * v);
    void (*glVertexAttribI3ivEXT) (GLuint index, const GLint * v);
    void (*glVertexAttribI4ivEXT) (GLuint index, const GLint * v);
    void (*glVertexAttribI1uivEXT) (GLuint index, const GLuint * v);
    void (*glVertexAttribI2uivEXT) (GLuint index, const GLuint * v);
    void (*glVertexAttribI3uivEXT) (GLuint index, const GLuint * v);
    void (*glVertexAttribI4uivEXT) (GLuint index, const GLuint * v);
    void (*glVertexAttribI4bvEXT) (GLuint index, const GLbyte * v);
    void (*glVertexAttribI4svEXT) (GLuint index, const GLshort * v);
    void (*glVertexAttribI4ubvEXT) (GLuint index, const GLubyte * v);
    void (*glVertexAttribI4usvEXT) (GLuint index, const GLushort * v);
    void (*glVertexAttribIPointerEXT) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
    void (*glGetVertexAttribIivEXT) (GLuint index, GLenum pname, GLint * params);
    void (*glGetVertexAttribIuivEXT) (GLuint index, GLenum pname, GLuint * params);
    void (*glGetUniformuivEXT) (GLuint program, GLint location, GLuint * params);
    void (*glBindFragDataLocationEXT) (GLuint program, GLuint color, const GLchar * name);
    GLint (*glGetFragDataLocationEXT) (GLuint program, const GLchar * name);
    void (*glUniform1uiEXT) (GLint location, GLuint v0);
    void (*glUniform2uiEXT) (GLint location, GLuint v0, GLuint v1);
    void (*glUniform3uiEXT) (GLint location, GLuint v0, GLuint v1, GLuint v2);
    void (*glUniform4uiEXT) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    void (*glUniform1uivEXT) (GLint location, GLsizei count, const GLuint * value);
    void (*glUniform2uivEXT) (GLint location, GLsizei count, const GLuint * value);
    void (*glUniform3uivEXT) (GLint location, GLsizei count, const GLuint * value);
    void (*glUniform4uivEXT) (GLint location, GLsizei count, const GLuint * value);
    void (*glTexParameterIivEXT) (GLenum target, GLenum pname, const GLint * params);
    void (*glTexParameterIuivEXT) (GLenum target, GLenum pname, const GLuint * params);
    void (*glGetTexParameterIivEXT) (GLenum target, GLenum pname, GLint * params);
    void (*glGetTexParameterIuivEXT) (GLenum target, GLenum pname, GLuint * params);
    void (*glClearColorIiEXT) (GLint red, GLint green, GLint blue, GLint alpha);
    void (*glClearColorIuiEXT) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
    void (*glUseShaderProgramEXT) (GLenum type, GLuint program);
    void (*glActiveProgramEXT) (GLuint program);
    GLuint (*glCreateShaderProgramEXT) (GLenum type, const GLchar * string);
    void (*glProgramEnvParameters4fvEXT) (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
    void (*glProgramLocalParameters4fvEXT) (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
    void (*glBlendEquationSeparateATI) (GLenum modeRGB, GLenum modeA);
    void (*glGetHistogramEXT) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values);
    void (*glGetHistogramParameterfvEXT) (GLenum target, GLenum pname, GLfloat * params);
    void (*glGetHistogramParameterivEXT) (GLenum target, GLenum pname, GLint * params);
    void (*glGetMinmaxEXT) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values);
    void (*glGetMinmaxParameterfvEXT) (GLenum target, GLenum pname, GLfloat * params);
    void (*glGetMinmaxParameterivEXT) (GLenum target, GLenum pname, GLint * params);
    void (*glHistogramEXT) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
    void (*glMinmaxEXT) (GLenum target, GLenum internalformat, GLboolean sink);
    void (*glResetHistogramEXT) (GLenum target);
    void (*glResetMinmaxEXT) (GLenum target);
    void (*glConvolutionFilter1DEXT) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image);
    void (*glConvolutionFilter2DEXT) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image);
    void (*glConvolutionParameterfEXT) (GLenum target, GLenum pname, GLfloat params);
    void (*glConvolutionParameterfvEXT) (GLenum target, GLenum pname, const GLfloat * params);
    void (*glConvolutionParameteriEXT) (GLenum target, GLenum pname, GLint params);
    void (*glConvolutionParameterivEXT) (GLenum target, GLenum pname, const GLint * params);
    void (*glCopyConvolutionFilter1DEXT) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    void (*glCopyConvolutionFilter2DEXT) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
    void (*glGetConvolutionFilterEXT) (GLenum target, GLenum format, GLenum type, GLvoid * image);
    void (*glGetConvolutionParameterfvEXT) (GLenum target, GLenum pname, GLfloat * params);
    void (*glGetConvolutionParameterivEXT) (GLenum target, GLenum pname, GLint * params);
    void (*glGetSeparableFilterEXT) (GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span);
    void (*glSeparableFilter2DEXT) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column);
    void (*glColorTableSGI) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table);
    void (*glColorTableParameterfvSGI) (GLenum target, GLenum pname, const GLfloat * params);
    void (*glColorTableParameterivSGI) (GLenum target, GLenum pname, const GLint * params);
    void (*glCopyColorTableSGI) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    void (*glGetColorTableSGI) (GLenum target, GLenum format, GLenum type, GLvoid * table);
    void (*glGetColorTableParameterfvSGI) (GLenum target, GLenum pname, GLfloat * params);
    void (*glGetColorTableParameterivSGI) (GLenum target, GLenum pname, GLint * params);
    void (*glPixelTexGenSGIX) (GLenum mode);
    void (*glPixelTexGenParameteriSGIS) (GLenum pname, GLint param);
    void (*glPixelTexGenParameterivSGIS) (GLenum pname, const GLint * params);
    void (*glPixelTexGenParameterfSGIS) (GLenum pname, GLfloat param);
    void (*glPixelTexGenParameterfvSGIS) (GLenum pname, const GLfloat * params);
    void (*glGetPixelTexGenParameterivSGIS) (GLenum pname, GLint * params);
    void (*glGetPixelTexGenParameterfvSGIS) (GLenum pname, GLfloat * params);
    void (*glSampleMaskSGIS) (GLclampf value, GLboolean invert);
    void (*glSamplePatternSGIS) (GLenum pattern);
    void (*glPointParameterfSGIS) (GLenum pname, GLfloat param);
    void (*glPointParameterfvSGIS) (GLenum pname, const GLfloat * params);
    void (*glColorSubTableEXT) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data);
    void (*glCopyColorSubTableEXT) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
    void (*glBlendFuncSeparateINGR) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    void (*glMultiModeDrawArraysIBM) (const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
    void (*glMultiModeDrawElementsIBM) (const GLenum * mode, const GLsizei * count, GLenum type, const GLvoid * const * indices, GLsizei primcount, GLint modestride);
    void (*glSampleMaskEXT) (GLclampf value, GLboolean invert);
    void (*glSamplePatternEXT) (GLenum pattern);
    void (*glDeleteFencesNV) (GLsizei n, const GLuint * fences);
    void (*glGenFencesNV) (GLsizei n, GLuint * fences);
    GLboolean (*glIsFenceNV) (GLuint fence);
    GLboolean (*glTestFenceNV) (GLuint fence);
    void (*glGetFenceivNV) (GLuint fence, GLenum pname, GLint * params);
    void (*glFinishFenceNV) (GLuint fence);
    void (*glSetFenceNV) (GLuint fence, GLenum condition);
    void (*glActiveStencilFaceEXT) (GLenum face);
    void (*glBindVertexArrayAPPLE) (GLuint array);
    void (*glDeleteVertexArraysAPPLE) (GLsizei n, const GLuint * arrays);
    void (*glGenVertexArraysAPPLE) (GLsizei n, GLuint * arrays);
    GLboolean (*glIsVertexArrayAPPLE) (GLuint array);
    void (*glStencilOpSeparateATI) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    void (*glStencilFuncSeparateATI) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
    void (*glDepthBoundsEXT) (GLclampd zmin, GLclampd zmax);
    void (*glBlendEquationSeparateEXT) (GLenum modeRGB, GLenum modeAlpha);
    void (*glBlitFramebufferEXT) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    void (*glGetQueryObjecti64vEXT) (GLuint id, GLenum pname, GLint64EXT * params);
    void (*glGetQueryObjectui64vEXT) (GLuint id, GLenum pname, GLuint64EXT * params);
    void (*glBufferParameteriAPPLE) (GLenum target, GLenum pname, GLint param);
    void (*glFlushMappedBufferRangeAPPLE) (GLenum target, GLintptr offset, GLsizeiptr size);
    void (*glTextureRangeAPPLE) (GLenum target, GLsizei length, const GLvoid * pointer);
    void (*glGetTexParameterPointervAPPLE) (GLenum target, GLenum pname, GLvoid *  * params);
    void (*glClampColorARB) (GLenum target, GLenum clamp);
    void (*glFramebufferTextureLayerARB) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    void (*glVertexAttribDivisorARB) (GLuint index, GLuint divisor);
    void (*glTexBufferARB) (GLenum target, GLenum internalformat, GLuint buffer);
    void (*glDrawElementsInstancedBaseVertex) (GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount, GLint basevertex);
    void (*glBlendEquationiARB) (GLuint buf, GLenum mode);
    void (*glBlendEquationSeparateiARB) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    void (*glBlendFunciARB) (GLuint buf, GLenum src, GLenum dst);
    void (*glBlendFuncSeparateiARB) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    void (*glGenSamplers) (GLsizei count, GLuint * samplers);
    void (*glDeleteSamplers) (GLsizei count, const GLuint * samplers);
    GLboolean (*glIsSampler) (GLuint sampler);
    void (*glBindSampler) (GLuint unit, GLuint sampler);
    void (*glSamplerParameteri) (GLuint sampler, GLenum pname, GLint param);
    void (*glSamplerParameteriv) (GLuint sampler, GLenum pname, const GLint * param);
    void (*glSamplerParameterf) (GLuint sampler, GLenum pname, GLfloat param);
    void (*glSamplerParameterfv) (GLuint sampler, GLenum pname, const GLfloat * param);
    void (*glSamplerParameterIiv) (GLuint sampler, GLenum pname, const GLint * param);
    void (*glSamplerParameterIuiv) (GLuint sampler, GLenum pname, const GLuint * param);
    void (*glGetSamplerParameteriv) (GLuint sampler, GLenum pname, GLint * params);
    void (*glGetSamplerParameterIiv) (GLuint sampler, GLenum pname, GLint * params);
    void (*glGetSamplerParameterfv) (GLuint sampler, GLenum pname, GLfloat * params);
    void (*glGetSamplerParameterIuiv) (GLuint sampler, GLenum pname, GLuint * params);
    void (*glReleaseShaderCompiler) ();
    void (*glShaderBinary) (GLsizei count, const GLuint * shaders, GLenum binaryformat, const GLvoid * binary, GLsizei length);
    void (*glGetShaderPrecisionFormat) (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
    void (*glDepthRangef) (GLclampf n, GLclampf f);
    void (*glClearDepthf) (GLclampf d);
    GLenum (*glGetGraphicsResetStatusARB) ();
    void (*glGetnMapdvARB) (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
    void (*glGetnMapfvARB) (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
    void (*glGetnMapivARB) (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
    void (*glGetnPixelMapfvARB) (GLenum map, GLsizei bufSize, GLfloat * values);
    void (*glGetnPixelMapuivARB) (GLenum map, GLsizei bufSize, GLuint * values);
    void (*glGetnPixelMapusvARB) (GLenum map, GLsizei bufSize, GLushort * values);
    void (*glGetnPolygonStippleARB) (GLsizei bufSize, GLubyte * pattern);
    void (*glGetnColorTableARB) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid * table);
    void (*glGetnConvolutionFilterARB) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid * image);
    void (*glGetnSeparableFilterARB) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid * row, GLsizei columnBufSize, GLvoid * column, GLvoid * span);
    void (*glGetnHistogramARB) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid * values);
    void (*glGetnMinmaxARB) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid * values);
    void (*glGetnTexImageARB) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid * img);
    void (*glReadnPixelsARB) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid * data);
    void (*glGetnCompressedTexImageARB) (GLenum target, GLint lod, GLsizei bufSize, GLvoid * img);
    void (*glGetnUniformfvARB) (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
    void (*glGetnUniformivARB) (GLuint program, GLint location, GLsizei bufSize, GLint * params);
    void (*glGetnUniformuivARB) (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
    void (*glGetnUniformdvARB) (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
    void (*glBlendFuncIndexedAMD) (GLuint buf, GLenum src, GLenum dst);
    void (*glBlendFuncSeparateIndexedAMD) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    void (*glBlendEquationIndexedAMD) (GLuint buf, GLenum mode);
    void (*glBlendEquationSeparateIndexedAMD) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    void (*glTextureBarrierNV) ();
};

#endif
