##begin config
version 19.0
options noincludes, nostubs, noautoinit
##end config
##begin cdef
#include <GL/gl.h>
##end cdef
##begin cdefprivate
#include <GL/gl.h>
##end cdefprivate
##begin functionlist
APTR AROSMesaCreateContextTags(long Tag1, ...)
APTR AROSMesaCreateContext(struct TagItem *tagList)
void AROSMesaDestroyContext(APTR amesa) (A0)
void AROSMesaMakeCurrent(APTR amesa) (A0)
void AROSMesaSwapBuffers(APTR amesa) (A0)
APTR AROSMesaGetCurrentContext() ()
APTR AROSMesaGetOpenGLStateTrackerApi() ()
void AROSMesaSetRast(APTR amesa, struct TagItem *tagList) (A0, A1)
void AROSMesaGetConfig(APTR amesa, GLenum pname, GLint* params) (A0, D0, A1)
APTR AROSMesaGetProcAddressInternal(const GLubyte * procname) (A0)
.skip 20
void glClearIndex(GLfloat c) (D0)
void glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) (D0, D1, D2, D3)
void glClear(GLbitfield mask) (D0)
void glIndexMask(GLuint mask) (D0)
void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) (D0, D1, D2, D3)
void glAlphaFunc(GLenum func, GLclampf ref) (D0, D1)
void glBlendFunc(GLenum sfactor, GLenum dfactor) (D0, D1)
void glLogicOp(GLenum opcode) (D0)
void glCullFace(GLenum mode) (D0)
void glFrontFace(GLenum mode) (D0)
void glPointSize(GLfloat size) (D0)
void glLineWidth(GLfloat width) (D0)
void glLineStipple(GLint factor, GLushort pattern) (D0, D1)
void glPolygonMode(GLenum face, GLenum mode) (D0, D1)
void glPolygonOffset(GLfloat factor, GLfloat units) (D0, D1)
void glPolygonStipple(const GLubyte * mask) (A0)
void glGetPolygonStipple(GLubyte * mask) (A0)
void glEdgeFlag(GLboolean flag) (D0)
void glEdgeFlagv(const GLboolean * flag) (A0)
void glScissor(GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3)
void glClipPlane(GLenum plane, const GLdouble * equation) (D0, A0)
void glGetClipPlane(GLenum plane, GLdouble * equation) (D0, A0)
void glDrawBuffer(GLenum mode) (D0)
void glReadBuffer(GLenum mode) (D0)
void glEnable(GLenum cap) (D0)
void glDisable(GLenum cap) (D0)
GLboolean glIsEnabled(GLenum cap) (D0)
void glEnableClientState(GLenum cap) (D0)
void glDisableClientState(GLenum cap) (D0)
void glGetBooleanv(GLenum pname, GLboolean * params) (D0, A0)
void glGetDoublev(GLenum pname, GLdouble * params) (D0, A0)
void glGetFloatv(GLenum pname, GLfloat * params) (D0, A0)
void glGetIntegerv(GLenum pname, GLint * params) (D0, A0)
void glPushAttrib(GLbitfield mask) (D0)
void glPopAttrib() ()
void glPushClientAttrib(GLbitfield mask) (D0)
void glPopClientAttrib() ()
GLint glRenderMode(GLenum mode) (D0)
GLenum glGetError() ()
const GLubyte * glGetString(GLenum name) (D0)
void glFinish() ()
void glFlush() ()
void glHint(GLenum target, GLenum mode) (D0, D1)
void glClearDepth(GLclampd depth) (D0)
void glDepthFunc(GLenum func) (D0)
void glDepthMask(GLboolean flag) (D0)
void glDepthRange(GLclampd near_val, GLclampd far_val) (D0, D1)
void glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) (D0, D1, D2, D3)
void glAccum(GLenum op, GLfloat value) (D0, D1)
void glMatrixMode(GLenum mode) (D0)
void glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val) (D0, D1, D2, D3, D4, D5)
void glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val) (D0, D1, D2, D3, D4, D5)
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3)
void glPushMatrix() ()
void glPopMatrix() ()
void glLoadIdentity() ()
void glLoadMatrixd(const GLdouble * m) (A0)
void glLoadMatrixf(const GLfloat * m) (A0)
void glMultMatrixd(const GLdouble * m) (A0)
void glMultMatrixf(const GLfloat * m) (A0)
void glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2, D3)
void glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2, D3)
void glScaled(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glScalef(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glTranslated(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glTranslatef(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
GLboolean glIsList(GLuint list) (D0)
void glDeleteLists(GLuint list, GLsizei range) (D0, D1)
GLuint glGenLists(GLsizei range) (D0)
void glNewList(GLuint list, GLenum mode) (D0, D1)
void glEndList() ()
void glCallList(GLuint list) (D0)
void glCallLists(GLsizei n, GLenum type, const GLvoid * lists) (D0, D1, A0)
void glListBase(GLuint base) (D0)
void glBegin(GLenum mode) (D0)
void glEnd() ()
void glVertex2d(GLdouble x, GLdouble y) (D0, D1)
void glVertex2f(GLfloat x, GLfloat y) (D0, D1)
void glVertex2i(GLint x, GLint y) (D0, D1)
void glVertex2s(GLshort x, GLshort y) (D0, D1)
void glVertex3d(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glVertex3f(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glVertex3i(GLint x, GLint y, GLint z) (D0, D1, D2)
void glVertex3s(GLshort x, GLshort y, GLshort z) (D0, D1, D2)
void glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3)
void glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3)
void glVertex4i(GLint x, GLint y, GLint z, GLint w) (D0, D1, D2, D3)
void glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w) (D0, D1, D2, D3)
void glVertex2dv(const GLdouble * v) (A0)
void glVertex2fv(const GLfloat * v) (A0)
void glVertex2iv(const GLint * v) (A0)
void glVertex2sv(const GLshort * v) (A0)
void glVertex3dv(const GLdouble * v) (A0)
void glVertex3fv(const GLfloat * v) (A0)
void glVertex3iv(const GLint * v) (A0)
void glVertex3sv(const GLshort * v) (A0)
void glVertex4dv(const GLdouble * v) (A0)
void glVertex4fv(const GLfloat * v) (A0)
void glVertex4iv(const GLint * v) (A0)
void glVertex4sv(const GLshort * v) (A0)
void glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz) (D0, D1, D2)
void glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz) (D0, D1, D2)
void glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz) (D0, D1, D2)
void glNormal3i(GLint nx, GLint ny, GLint nz) (D0, D1, D2)
void glNormal3s(GLshort nx, GLshort ny, GLshort nz) (D0, D1, D2)
void glNormal3bv(const GLbyte * v) (A0)
void glNormal3dv(const GLdouble * v) (A0)
void glNormal3fv(const GLfloat * v) (A0)
void glNormal3iv(const GLint * v) (A0)
void glNormal3sv(const GLshort * v) (A0)
void glIndexd(GLdouble c) (D0)
void glIndexf(GLfloat c) (D0)
void glIndexi(GLint c) (D0)
void glIndexs(GLshort c) (D0)
void glIndexub(GLubyte c) (D0)
void glIndexdv(const GLdouble * c) (A0)
void glIndexfv(const GLfloat * c) (A0)
void glIndexiv(const GLint * c) (A0)
void glIndexsv(const GLshort * c) (A0)
void glIndexubv(const GLubyte * c) (A0)
void glColor3b(GLbyte red, GLbyte green, GLbyte blue) (D0, D1, D2)
void glColor3d(GLdouble red, GLdouble green, GLdouble blue) (D0, D1, D2)
void glColor3f(GLfloat red, GLfloat green, GLfloat blue) (D0, D1, D2)
void glColor3i(GLint red, GLint green, GLint blue) (D0, D1, D2)
void glColor3s(GLshort red, GLshort green, GLshort blue) (D0, D1, D2)
void glColor3ub(GLubyte red, GLubyte green, GLubyte blue) (D0, D1, D2)
void glColor3ui(GLuint red, GLuint green, GLuint blue) (D0, D1, D2)
void glColor3us(GLushort red, GLushort green, GLushort blue) (D0, D1, D2)
void glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha) (D0, D1, D2, D3)
void glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha) (D0, D1, D2, D3)
void glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) (D0, D1, D2, D3)
void glColor4i(GLint red, GLint green, GLint blue, GLint alpha) (D0, D1, D2, D3)
void glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha) (D0, D1, D2, D3)
void glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha) (D0, D1, D2, D3)
void glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha) (D0, D1, D2, D3)
void glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha) (D0, D1, D2, D3)
void glColor3bv(const GLbyte * v) (A0)
void glColor3dv(const GLdouble * v) (A0)
void glColor3fv(const GLfloat * v) (A0)
void glColor3iv(const GLint * v) (A0)
void glColor3sv(const GLshort * v) (A0)
void glColor3ubv(const GLubyte * v) (A0)
void glColor3uiv(const GLuint * v) (A0)
void glColor3usv(const GLushort * v) (A0)
void glColor4bv(const GLbyte * v) (A0)
void glColor4dv(const GLdouble * v) (A0)
void glColor4fv(const GLfloat * v) (A0)
void glColor4iv(const GLint * v) (A0)
void glColor4sv(const GLshort * v) (A0)
void glColor4ubv(const GLubyte * v) (A0)
void glColor4uiv(const GLuint * v) (A0)
void glColor4usv(const GLushort * v) (A0)
void glTexCoord1d(GLdouble s) (D0)
void glTexCoord1f(GLfloat s) (D0)
void glTexCoord1i(GLint s) (D0)
void glTexCoord1s(GLshort s) (D0)
void glTexCoord2d(GLdouble s, GLdouble t) (D0, D1)
void glTexCoord2f(GLfloat s, GLfloat t) (D0, D1)
void glTexCoord2i(GLint s, GLint t) (D0, D1)
void glTexCoord2s(GLshort s, GLshort t) (D0, D1)
void glTexCoord3d(GLdouble s, GLdouble t, GLdouble r) (D0, D1, D2)
void glTexCoord3f(GLfloat s, GLfloat t, GLfloat r) (D0, D1, D2)
void glTexCoord3i(GLint s, GLint t, GLint r) (D0, D1, D2)
void glTexCoord3s(GLshort s, GLshort t, GLshort r) (D0, D1, D2)
void glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q) (D0, D1, D2, D3)
void glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q) (D0, D1, D2, D3)
void glTexCoord4i(GLint s, GLint t, GLint r, GLint q) (D0, D1, D2, D3)
void glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q) (D0, D1, D2, D3)
void glTexCoord1dv(const GLdouble * v) (A0)
void glTexCoord1fv(const GLfloat * v) (A0)
void glTexCoord1iv(const GLint * v) (A0)
void glTexCoord1sv(const GLshort * v) (A0)
void glTexCoord2dv(const GLdouble * v) (A0)
void glTexCoord2fv(const GLfloat * v) (A0)
void glTexCoord2iv(const GLint * v) (A0)
void glTexCoord2sv(const GLshort * v) (A0)
void glTexCoord3dv(const GLdouble * v) (A0)
void glTexCoord3fv(const GLfloat * v) (A0)
void glTexCoord3iv(const GLint * v) (A0)
void glTexCoord3sv(const GLshort * v) (A0)
void glTexCoord4dv(const GLdouble * v) (A0)
void glTexCoord4fv(const GLfloat * v) (A0)
void glTexCoord4iv(const GLint * v) (A0)
void glTexCoord4sv(const GLshort * v) (A0)
void glRasterPos2d(GLdouble x, GLdouble y) (D0, D1)
void glRasterPos2f(GLfloat x, GLfloat y) (D0, D1)
void glRasterPos2i(GLint x, GLint y) (D0, D1)
void glRasterPos2s(GLshort x, GLshort y) (D0, D1)
void glRasterPos3d(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glRasterPos3f(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glRasterPos3i(GLint x, GLint y, GLint z) (D0, D1, D2)
void glRasterPos3s(GLshort x, GLshort y, GLshort z) (D0, D1, D2)
void glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3)
void glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3)
void glRasterPos4i(GLint x, GLint y, GLint z, GLint w) (D0, D1, D2, D3)
void glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w) (D0, D1, D2, D3)
void glRasterPos2dv(const GLdouble * v) (A0)
void glRasterPos2fv(const GLfloat * v) (A0)
void glRasterPos2iv(const GLint * v) (A0)
void glRasterPos2sv(const GLshort * v) (A0)
void glRasterPos3dv(const GLdouble * v) (A0)
void glRasterPos3fv(const GLfloat * v) (A0)
void glRasterPos3iv(const GLint * v) (A0)
void glRasterPos3sv(const GLshort * v) (A0)
void glRasterPos4dv(const GLdouble * v) (A0)
void glRasterPos4fv(const GLfloat * v) (A0)
void glRasterPos4iv(const GLint * v) (A0)
void glRasterPos4sv(const GLshort * v) (A0)
void glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2) (D0, D1, D2, D3)
void glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2) (D0, D1, D2, D3)
void glRecti(GLint x1, GLint y1, GLint x2, GLint y2) (D0, D1, D2, D3)
void glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2) (D0, D1, D2, D3)
void glRectdv(const GLdouble * v1, const GLdouble * v2) (A0, A1)
void glRectfv(const GLfloat * v1, const GLfloat * v2) (A0, A1)
void glRectiv(const GLint * v1, const GLint * v2) (A0, A1)
void glRectsv(const GLshort * v1, const GLshort * v2) (A0, A1)
void glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, D2, A0)
void glNormalPointer(GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, A0)
void glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, D2, A0)
void glIndexPointer(GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, A0)
void glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, D2, A0)
void glEdgeFlagPointer(GLsizei stride, const GLvoid * ptr) (D0, A0)
void glGetPointerv(GLenum pname, GLvoid * * params) (D0, A0)
void glArrayElement(GLint i) (D0)
void glDrawArrays(GLenum mode, GLint first, GLsizei count) (D0, D1, D2)
void glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices) (D0, D1, D2, A0)
void glInterleavedArrays(GLenum format, GLsizei stride, const GLvoid * pointer) (D0, D1, A0)
void glShadeModel(GLenum mode) (D0)
void glLightf(GLenum light, GLenum pname, GLfloat param) (D0, D1, D2)
void glLighti(GLenum light, GLenum pname, GLint param) (D0, D1, D2)
void glLightfv(GLenum light, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glLightiv(GLenum light, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetLightfv(GLenum light, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetLightiv(GLenum light, GLenum pname, GLint * params) (D0, D1, A0)
void glLightModelf(GLenum pname, GLfloat param) (D0, D1)
void glLightModeli(GLenum pname, GLint param) (D0, D1)
void glLightModelfv(GLenum pname, const GLfloat * params) (D0, A0)
void glLightModeliv(GLenum pname, const GLint * params) (D0, A0)
void glMaterialf(GLenum face, GLenum pname, GLfloat param) (D0, D1, D2)
void glMateriali(GLenum face, GLenum pname, GLint param) (D0, D1, D2)
void glMaterialfv(GLenum face, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glMaterialiv(GLenum face, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetMaterialfv(GLenum face, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetMaterialiv(GLenum face, GLenum pname, GLint * params) (D0, D1, A0)
void glColorMaterial(GLenum face, GLenum mode) (D0, D1)
void glPixelZoom(GLfloat xfactor, GLfloat yfactor) (D0, D1)
void glPixelStoref(GLenum pname, GLfloat param) (D0, D1)
void glPixelStorei(GLenum pname, GLint param) (D0, D1)
void glPixelTransferf(GLenum pname, GLfloat param) (D0, D1)
void glPixelTransferi(GLenum pname, GLint param) (D0, D1)
void glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values) (D0, D1, A0)
void glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values) (D0, D1, A0)
void glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values) (D0, D1, A0)
void glGetPixelMapfv(GLenum map, GLfloat * values) (D0, A0)
void glGetPixelMapuiv(GLenum map, GLuint * values) (D0, A0)
void glGetPixelMapusv(GLenum map, GLushort * values) (D0, A0)
void glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap) (D0, D1, D2, D3, D4, D5, A0)
void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid * pixels) (D0, D1, D2, D3, D4, D5, A0)
void glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, A0)
void glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type) (D0, D1, D2, D3, D4)
void glStencilFunc(GLenum func, GLint ref, GLuint mask) (D0, D1, D2)
void glStencilMask(GLuint mask) (D0)
void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass) (D0, D1, D2)
void glClearStencil(GLint s) (D0)
void glTexGend(GLenum coord, GLenum pname, GLdouble param) (D0, D1, D2)
void glTexGenf(GLenum coord, GLenum pname, GLfloat param) (D0, D1, D2)
void glTexGeni(GLenum coord, GLenum pname, GLint param) (D0, D1, D2)
void glTexGendv(GLenum coord, GLenum pname, const GLdouble * params) (D0, D1, A0)
void glTexGenfv(GLenum coord, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glTexGeniv(GLenum coord, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetTexGendv(GLenum coord, GLenum pname, GLdouble * params) (D0, D1, A0)
void glGetTexGenfv(GLenum coord, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetTexGeniv(GLenum coord, GLenum pname, GLint * params) (D0, D1, A0)
void glTexEnvf(GLenum target, GLenum pname, GLfloat param) (D0, D1, D2)
void glTexEnvi(GLenum target, GLenum pname, GLint param) (D0, D1, D2)
void glTexEnvfv(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glTexEnviv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetTexEnvfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetTexEnviv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glTexParameterf(GLenum target, GLenum pname, GLfloat param) (D0, D1, D2)
void glTexParameteri(GLenum target, GLenum pname, GLint param) (D0, D1, D2)
void glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glTexParameteriv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params) (D0, D1, D2, A0)
void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params) (D0, D1, D2, A0)
void glTexImage1D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, A0)
void glTexImage2D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid * pixels) (D0, D1, D2, D3, A0)
void glGenTextures(GLsizei n, GLuint * textures) (D0, A0)
void glDeleteTextures(GLsizei n, const GLuint * textures) (D0, A0)
void glBindTexture(GLenum target, GLuint texture) (D0, D1)
void glPrioritizeTextures(GLsizei n, const GLuint * textures, const GLclampf * priorities) (D0, A0, A1)
GLboolean glAreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences) (D0, A0, A1)
GLboolean glIsTexture(GLuint texture) (D0)
void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, A0)
void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) (D0, D1, D2, D3, D4, D5, D6)
void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) (D0, D1, D2, D3, D4, D5, D6, D7)
void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4, D5)
void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5, D6, D7)
void glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points) (D0, D1, D2, D3, D4, A0)
void glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points) (D0, D1, D2, D3, D4, A0)
void glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glGetMapdv(GLenum target, GLenum query, GLdouble * v) (D0, D1, A0)
void glGetMapfv(GLenum target, GLenum query, GLfloat * v) (D0, D1, A0)
void glGetMapiv(GLenum target, GLenum query, GLint * v) (D0, D1, A0)
void glEvalCoord1d(GLdouble u) (D0)
void glEvalCoord1f(GLfloat u) (D0)
void glEvalCoord1dv(const GLdouble * u) (A0)
void glEvalCoord1fv(const GLfloat * u) (A0)
void glEvalCoord2d(GLdouble u, GLdouble v) (D0, D1)
void glEvalCoord2f(GLfloat u, GLfloat v) (D0, D1)
void glEvalCoord2dv(const GLdouble * u) (A0)
void glEvalCoord2fv(const GLfloat * u) (A0)
void glMapGrid1d(GLint un, GLdouble u1, GLdouble u2) (D0, D1, D2)
void glMapGrid1f(GLint un, GLfloat u1, GLfloat u2) (D0, D1, D2)
void glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2) (D0, D1, D2, D3, D4, D5)
void glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2) (D0, D1, D2, D3, D4, D5)
void glEvalPoint1(GLint i) (D0)
void glEvalPoint2(GLint i, GLint j) (D0, D1)
void glEvalMesh1(GLenum mode, GLint i1, GLint i2) (D0, D1, D2)
void glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2) (D0, D1, D2, D3, D4)
void glFogf(GLenum pname, GLfloat param) (D0, D1)
void glFogi(GLenum pname, GLint param) (D0, D1)
void glFogfv(GLenum pname, const GLfloat * params) (D0, A0)
void glFogiv(GLenum pname, const GLint * params) (D0, A0)
void glFeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer) (D0, D1, A0)
void glPassThrough(GLfloat token) (D0)
void glSelectBuffer(GLsizei size, GLuint * buffer) (D0, A0)
void glInitNames() ()
void glLoadName(GLuint name) (D0)
void glPushName(GLuint name) (D0)
void glPopName() ()
void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices) (D0, D1, D2, D3, D4, A0)
void glTexImage3D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2)
void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table) (D0, D1, D2, D3, D4, A0)
void glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data) (D0, D1, D2, D3, D4, A0)
void glColorTableParameteriv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glGetColorTable(GLenum target, GLenum format, GLenum type, GLvoid * table) (D0, D1, D2, A0)
void glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetColorTableParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glBlendEquation(GLenum mode) (D0)
void glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) (D0, D1, D2, D3)
void glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink) (D0, D1, D2, D3)
void glResetHistogram(GLenum target) (D0)
void glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values) (D0, D1, D2, D3, A0)
void glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetHistogramParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glMinmax(GLenum target, GLenum internalformat, GLboolean sink) (D0, D1, D2)
void glResetMinmax(GLenum target) (D0)
void glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid * values) (D0, D1, D2, D3, A0)
void glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image) (D0, D1, D2, D3, D4, A0)
void glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image) (D0, D1, D2, D3, D4, D5, A0)
void glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params) (D0, D1, D2)
void glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glConvolutionParameteri(GLenum target, GLenum pname, GLint params) (D0, D1, D2)
void glConvolutionParameteriv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5)
void glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, GLvoid * image) (D0, D1, D2, A0)
void glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column) (D0, D1, D2, D3, D4, D5, A0, A1)
void glGetSeparableFilter(GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span) (D0, D1, D2, A0, A1, A2)
void glActiveTexture(GLenum texture) (D0)
void glClientActiveTexture(GLenum texture) (D0)
void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, A0)
void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, A0)
void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, A0)
void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2)
void glGetCompressedTexImage(GLenum target, GLint lod, GLvoid * img) (D0, D1, A0)
void glMultiTexCoord1d(GLenum target, GLdouble s) (D0, D1)
void glMultiTexCoord1dv(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord1f(GLenum target, GLfloat s) (D0, D1)
void glMultiTexCoord1fv(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord1i(GLenum target, GLint s) (D0, D1)
void glMultiTexCoord1iv(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord1s(GLenum target, GLshort s) (D0, D1)
void glMultiTexCoord1sv(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t) (D0, D1, D2)
void glMultiTexCoord2dv(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t) (D0, D1, D2)
void glMultiTexCoord2fv(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord2i(GLenum target, GLint s, GLint t) (D0, D1, D2)
void glMultiTexCoord2iv(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord2s(GLenum target, GLshort s, GLshort t) (D0, D1, D2)
void glMultiTexCoord2sv(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r) (D0, D1, D2, D3)
void glMultiTexCoord3dv(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r) (D0, D1, D2, D3)
void glMultiTexCoord3fv(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r) (D0, D1, D2, D3)
void glMultiTexCoord3iv(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r) (D0, D1, D2, D3)
void glMultiTexCoord3sv(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4dv(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4fv(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4iv(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4sv(GLenum target, const GLshort * v) (D0, A0)
void glLoadTransposeMatrixd(const GLdouble * m) (A0)
void glLoadTransposeMatrixf(const GLfloat * m) (A0)
void glMultTransposeMatrixd(const GLdouble * m) (A0)
void glMultTransposeMatrixf(const GLfloat * m) (A0)
void glSampleCoverage(GLclampf value, GLboolean invert) (D0, D1)
void glActiveTextureARB(GLenum texture) (D0)
void glClientActiveTextureARB(GLenum texture) (D0)
void glMultiTexCoord1dARB(GLenum target, GLdouble s) (D0, D1)
void glMultiTexCoord1dvARB(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord1fARB(GLenum target, GLfloat s) (D0, D1)
void glMultiTexCoord1fvARB(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord1iARB(GLenum target, GLint s) (D0, D1)
void glMultiTexCoord1ivARB(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord1sARB(GLenum target, GLshort s) (D0, D1)
void glMultiTexCoord1svARB(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t) (D0, D1, D2)
void glMultiTexCoord2dvARB(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t) (D0, D1, D2)
void glMultiTexCoord2fvARB(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord2iARB(GLenum target, GLint s, GLint t) (D0, D1, D2)
void glMultiTexCoord2ivARB(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t) (D0, D1, D2)
void glMultiTexCoord2svARB(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r) (D0, D1, D2, D3)
void glMultiTexCoord3dvARB(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r) (D0, D1, D2, D3)
void glMultiTexCoord3fvARB(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r) (D0, D1, D2, D3)
void glMultiTexCoord3ivARB(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r) (D0, D1, D2, D3)
void glMultiTexCoord3svARB(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4dvARB(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4fvARB(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4ivARB(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4svARB(GLenum target, const GLshort * v) (D0, A0)
void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) (D0, D1, D2, D3)
void glFogCoordf(GLfloat coord) (D0)
void glFogCoordfv(const GLfloat * coord) (A0)
void glFogCoordd(GLdouble coord) (D0)
void glFogCoorddv(const GLdouble * coord) (A0)
void glFogCoordPointer(GLenum type, GLsizei stride, const GLvoid * pointer) (D0, D1, A0)
void glMultiDrawArrays(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount) (D0, A0, A1, D1)
void glMultiDrawElements(GLenum mode, const GLsizei * count, GLenum type, const GLvoid *  * indices, GLsizei primcount) (D0, A0, D1, A1, D2)
void glPointParameterf(GLenum pname, GLfloat param) (D0, D1)
void glPointParameterfv(GLenum pname, const GLfloat * params) (D0, A0)
void glPointParameteri(GLenum pname, GLint param) (D0, D1)
void glPointParameteriv(GLenum pname, const GLint * params) (D0, A0)
void glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue) (D0, D1, D2)
void glSecondaryColor3bv(const GLbyte * v) (A0)
void glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue) (D0, D1, D2)
void glSecondaryColor3dv(const GLdouble * v) (A0)
void glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue) (D0, D1, D2)
void glSecondaryColor3fv(const GLfloat * v) (A0)
void glSecondaryColor3i(GLint red, GLint green, GLint blue) (D0, D1, D2)
void glSecondaryColor3iv(const GLint * v) (A0)
void glSecondaryColor3s(GLshort red, GLshort green, GLshort blue) (D0, D1, D2)
void glSecondaryColor3sv(const GLshort * v) (A0)
void glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue) (D0, D1, D2)
void glSecondaryColor3ubv(const GLubyte * v) (A0)
void glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue) (D0, D1, D2)
void glSecondaryColor3uiv(const GLuint * v) (A0)
void glSecondaryColor3us(GLushort red, GLushort green, GLushort blue) (D0, D1, D2)
void glSecondaryColor3usv(const GLushort * v) (A0)
void glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer) (D0, D1, D2, A0)
void glWindowPos2d(GLdouble x, GLdouble y) (D0, D1)
void glWindowPos2dv(const GLdouble * v) (A0)
void glWindowPos2f(GLfloat x, GLfloat y) (D0, D1)
void glWindowPos2fv(const GLfloat * v) (A0)
void glWindowPos2i(GLint x, GLint y) (D0, D1)
void glWindowPos2iv(const GLint * v) (A0)
void glWindowPos2s(GLshort x, GLshort y) (D0, D1)
void glWindowPos2sv(const GLshort * v) (A0)
void glWindowPos3d(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glWindowPos3dv(const GLdouble * v) (A0)
void glWindowPos3f(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glWindowPos3fv(const GLfloat * v) (A0)
void glWindowPos3i(GLint x, GLint y, GLint z) (D0, D1, D2)
void glWindowPos3iv(const GLint * v) (A0)
void glWindowPos3s(GLshort x, GLshort y, GLshort z) (D0, D1, D2)
void glWindowPos3sv(const GLshort * v) (A0)
void glGenQueries(GLsizei n, GLuint * ids) (D0, A0)
void glDeleteQueries(GLsizei n, const GLuint * ids) (D0, A0)
GLboolean glIsQuery(GLuint id) (D0)
void glBeginQuery(GLenum target, GLuint id) (D0, D1)
void glEndQuery(GLenum target) (D0)
void glGetQueryiv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetQueryObjectiv(GLuint id, GLenum pname, GLint * params) (D0, D1, A0)
void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params) (D0, D1, A0)
void glBindBuffer(GLenum target, GLuint buffer) (D0, D1)
void glDeleteBuffers(GLsizei n, const GLuint * buffers) (D0, A0)
void glGenBuffers(GLsizei n, GLuint * buffers) (D0, A0)
GLboolean glIsBuffer(GLuint buffer) (D0)
void glBufferData(GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage) (D0, D1, A0, D2)
void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid * data) (D0, D1, D2, A0)
void glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid * data) (D0, D1, D2, A0)
GLvoid* glMapBuffer(GLenum target, GLenum access) (D0, D1)
GLboolean glUnmapBuffer(GLenum target) (D0)
void glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetBufferPointerv(GLenum target, GLenum pname, GLvoid *  * params) (D0, D1, A0)
void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha) (D0, D1)
void glDrawBuffers(GLsizei n, const GLenum * bufs) (D0, A0)
void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) (D0, D1, D2, D3)
void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask) (D0, D1, D2, D3)
void glStencilMaskSeparate(GLenum face, GLuint mask) (D0, D1)
void glAttachShader(GLuint program, GLuint shader) (D0, D1)
void glBindAttribLocation(GLuint program, GLuint index, const GLchar * name) (D0, D1, A0)
void glCompileShader(GLuint shader) (D0)
GLuint glCreateProgram() ()
GLuint glCreateShader(GLenum type) (D0)
void glDeleteProgram(GLuint program) (D0)
void glDeleteShader(GLuint shader) (D0)
void glDetachShader(GLuint program, GLuint shader) (D0, D1)
void glDisableVertexAttribArray(GLuint index) (D0)
void glEnableVertexAttribArray(GLuint index) (D0)
void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name) (D0, D1, D2, A0, A1, A2, A3)
void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name) (D0, D1, D2, A0, A1, A2, A3)
void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * obj) (D0, D1, A0, A1)
GLint glGetAttribLocation(GLuint program, const GLchar * name) (D0, A0)
void glGetProgramiv(GLuint program, GLenum pname, GLint * params) (D0, D1, A0)
void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog) (D0, D1, A0, A1)
void glGetShaderiv(GLuint shader, GLenum pname, GLint * params) (D0, D1, A0)
void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog) (D0, D1, A0, A1)
void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source) (D0, D1, A0, A1)
GLint glGetUniformLocation(GLuint program, const GLchar * name) (D0, A0)
void glGetUniformfv(GLuint program, GLint location, GLfloat * params) (D0, D1, A0)
void glGetUniformiv(GLuint program, GLint location, GLint * params) (D0, D1, A0)
void glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble * params) (D0, D1, A0)
void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params) (D0, D1, A0)
void glGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid *  * pointer) (D0, D1, A0)
GLboolean glIsProgram(GLuint program) (D0)
GLboolean glIsShader(GLuint shader) (D0)
void glLinkProgram(GLuint program) (D0)
void glShaderSource(GLuint shader, GLsizei count, const GLchar *  * string, const GLint * length) (D0, D1, A0, A1)
void glUseProgram(GLuint program) (D0)
void glUniform1f(GLint location, GLfloat v0) (D0, D1)
void glUniform2f(GLint location, GLfloat v0, GLfloat v1) (D0, D1, D2)
void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) (D0, D1, D2, D3)
void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) (D0, D1, D2, D3, D4)
void glUniform1i(GLint location, GLint v0) (D0, D1)
void glUniform2i(GLint location, GLint v0, GLint v1) (D0, D1, D2)
void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2) (D0, D1, D2, D3)
void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) (D0, D1, D2, D3, D4)
void glUniform1fv(GLint location, GLsizei count, const GLfloat * value) (D0, D1, A0)
void glUniform2fv(GLint location, GLsizei count, const GLfloat * value) (D0, D1, A0)
void glUniform3fv(GLint location, GLsizei count, const GLfloat * value) (D0, D1, A0)
void glUniform4fv(GLint location, GLsizei count, const GLfloat * value) (D0, D1, A0)
void glUniform1iv(GLint location, GLsizei count, const GLint * value) (D0, D1, A0)
void glUniform2iv(GLint location, GLsizei count, const GLint * value) (D0, D1, A0)
void glUniform3iv(GLint location, GLsizei count, const GLint * value) (D0, D1, A0)
void glUniform4iv(GLint location, GLsizei count, const GLint * value) (D0, D1, A0)
void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glValidateProgram(GLuint program) (D0)
void glVertexAttrib1d(GLuint index, GLdouble x) (D0, D1)
void glVertexAttrib1dv(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib1f(GLuint index, GLfloat x) (D0, D1)
void glVertexAttrib1fv(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib1s(GLuint index, GLshort x) (D0, D1)
void glVertexAttrib1sv(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y) (D0, D1, D2)
void glVertexAttrib2dv(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y) (D0, D1, D2)
void glVertexAttrib2fv(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib2s(GLuint index, GLshort x, GLshort y) (D0, D1, D2)
void glVertexAttrib2sv(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2, D3)
void glVertexAttrib3dv(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2, D3)
void glVertexAttrib3fv(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z) (D0, D1, D2, D3)
void glVertexAttrib3sv(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib4Nbv(GLuint index, const GLbyte * v) (D0, A0)
void glVertexAttrib4Niv(GLuint index, const GLint * v) (D0, A0)
void glVertexAttrib4Nsv(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) (D0, D1, D2, D3, D4)
void glVertexAttrib4Nubv(GLuint index, const GLubyte * v) (D0, A0)
void glVertexAttrib4Nuiv(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttrib4Nusv(GLuint index, const GLushort * v) (D0, A0)
void glVertexAttrib4bv(GLuint index, const GLbyte * v) (D0, A0)
void glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3, D4)
void glVertexAttrib4dv(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3, D4)
void glVertexAttrib4fv(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib4iv(GLuint index, const GLint * v) (D0, A0)
void glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) (D0, D1, D2, D3, D4)
void glVertexAttrib4sv(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib4ubv(GLuint index, const GLubyte * v) (D0, A0)
void glVertexAttrib4uiv(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttrib4usv(GLuint index, const GLushort * v) (D0, A0)
void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer) (D0, D1, D2, D3, D4, A0)
void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glLoadTransposeMatrixfARB(const GLfloat * m) (A0)
void glLoadTransposeMatrixdARB(const GLdouble * m) (A0)
void glMultTransposeMatrixfARB(const GLfloat * m) (A0)
void glMultTransposeMatrixdARB(const GLdouble * m) (A0)
void glSampleCoverageARB(GLclampf value, GLboolean invert) (D0, D1)
void glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, A0)
void glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, A0)
void glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2)
void glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, A0)
void glGetCompressedTexImageARB(GLenum target, GLint level, GLvoid * img) (D0, D1, A0)
void glPointParameterfARB(GLenum pname, GLfloat param) (D0, D1)
void glPointParameterfvARB(GLenum pname, const GLfloat * params) (D0, A0)
void glWindowPos2dARB(GLdouble x, GLdouble y) (D0, D1)
void glWindowPos2dvARB(const GLdouble * v) (A0)
void glWindowPos2fARB(GLfloat x, GLfloat y) (D0, D1)
void glWindowPos2fvARB(const GLfloat * v) (A0)
void glWindowPos2iARB(GLint x, GLint y) (D0, D1)
void glWindowPos2ivARB(const GLint * v) (A0)
void glWindowPos2sARB(GLshort x, GLshort y) (D0, D1)
void glWindowPos2svARB(const GLshort * v) (A0)
void glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glWindowPos3dvARB(const GLdouble * v) (A0)
void glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glWindowPos3fvARB(const GLfloat * v) (A0)
void glWindowPos3iARB(GLint x, GLint y, GLint z) (D0, D1, D2)
void glWindowPos3ivARB(const GLint * v) (A0)
void glWindowPos3sARB(GLshort x, GLshort y, GLshort z) (D0, D1, D2)
void glWindowPos3svARB(const GLshort * v) (A0)
void glVertexAttrib1dARB(GLuint index, GLdouble x) (D0, D1)
void glVertexAttrib1dvARB(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib1fARB(GLuint index, GLfloat x) (D0, D1)
void glVertexAttrib1fvARB(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib1sARB(GLuint index, GLshort x) (D0, D1)
void glVertexAttrib1svARB(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y) (D0, D1, D2)
void glVertexAttrib2dvARB(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y) (D0, D1, D2)
void glVertexAttrib2fvARB(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y) (D0, D1, D2)
void glVertexAttrib2svARB(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2, D3)
void glVertexAttrib3dvARB(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2, D3)
void glVertexAttrib3fvARB(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z) (D0, D1, D2, D3)
void glVertexAttrib3svARB(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib4NbvARB(GLuint index, const GLbyte * v) (D0, A0)
void glVertexAttrib4NivARB(GLuint index, const GLint * v) (D0, A0)
void glVertexAttrib4NsvARB(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) (D0, D1, D2, D3, D4)
void glVertexAttrib4NubvARB(GLuint index, const GLubyte * v) (D0, A0)
void glVertexAttrib4NuivARB(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttrib4NusvARB(GLuint index, const GLushort * v) (D0, A0)
void glVertexAttrib4bvARB(GLuint index, const GLbyte * v) (D0, A0)
void glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3, D4)
void glVertexAttrib4dvARB(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3, D4)
void glVertexAttrib4fvARB(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib4ivARB(GLuint index, const GLint * v) (D0, A0)
void glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) (D0, D1, D2, D3, D4)
void glVertexAttrib4svARB(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib4ubvARB(GLuint index, const GLubyte * v) (D0, A0)
void glVertexAttrib4uivARB(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttrib4usvARB(GLuint index, const GLushort * v) (D0, A0)
void glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer) (D0, D1, D2, D3, D4, A0)
void glEnableVertexAttribArrayARB(GLuint index) (D0)
void glDisableVertexAttribArrayARB(GLuint index) (D0)
void glProgramStringARB(GLenum target, GLenum format, GLsizei len, const GLvoid * string) (D0, D1, D2, A0)
void glBindProgramARB(GLenum target, GLuint program) (D0, D1)
void glDeleteProgramsARB(GLsizei n, const GLuint * programs) (D0, A0)
void glGenProgramsARB(GLsizei n, GLuint * programs) (D0, A0)
void glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3, D4, D5)
void glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble * params) (D0, D1, A0)
void glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3, D4, D5)
void glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat * params) (D0, D1, A0)
void glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3, D4, D5)
void glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble * params) (D0, D1, A0)
void glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3, D4, D5)
void glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat * params) (D0, D1, A0)
void glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble * params) (D0, D1, A0)
void glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat * params) (D0, D1, A0)
void glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble * params) (D0, D1, A0)
void glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat * params) (D0, D1, A0)
void glGetProgramivARB(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetProgramStringARB(GLenum target, GLenum pname, GLvoid * string) (D0, D1, A0)
void glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble * params) (D0, D1, A0)
void glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetVertexAttribivARB(GLuint index, GLenum pname, GLint * params) (D0, D1, A0)
void glGetVertexAttribPointervARB(GLuint index, GLenum pname, GLvoid *  * pointer) (D0, D1, A0)
GLboolean glIsProgramARB(GLuint program) (D0)
void glBindBufferARB(GLenum target, GLuint buffer) (D0, D1)
void glDeleteBuffersARB(GLsizei n, const GLuint * buffers) (D0, A0)
void glGenBuffersARB(GLsizei n, GLuint * buffers) (D0, A0)
GLboolean glIsBufferARB(GLuint buffer) (D0)
void glBufferDataARB(GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage) (D0, D1, A0, D2)
void glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data) (D0, D1, D2, A0)
void glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid * data) (D0, D1, D2, A0)
GLvoid* glMapBufferARB(GLenum target, GLenum access) (D0, D1)
GLboolean glUnmapBufferARB(GLenum target) (D0)
void glGetBufferParameterivARB(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetBufferPointervARB(GLenum target, GLenum pname, GLvoid *  * params) (D0, D1, A0)
void glGenQueriesARB(GLsizei n, GLuint * ids) (D0, A0)
void glDeleteQueriesARB(GLsizei n, const GLuint * ids) (D0, A0)
GLboolean glIsQueryARB(GLuint id) (D0)
void glBeginQueryARB(GLenum target, GLuint id) (D0, D1)
void glEndQueryARB(GLenum target) (D0)
void glGetQueryivARB(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetQueryObjectivARB(GLuint id, GLenum pname, GLint * params) (D0, D1, A0)
void glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint * params) (D0, D1, A0)
void glDeleteObjectARB(GLhandleARB obj) (D0)
GLhandleARB glGetHandleARB(GLenum pname) (D0)
void glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj) (D0, D1)
GLhandleARB glCreateShaderObjectARB(GLenum shaderType) (D0)
void glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB *  * string, const GLint * length) (D0, D1, A0, A1)
void glCompileShaderARB(GLhandleARB shaderObj) (D0)
GLhandleARB glCreateProgramObjectARB() ()
void glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj) (D0, D1)
void glLinkProgramARB(GLhandleARB programObj) (D0)
void glUseProgramObjectARB(GLhandleARB programObj) (D0)
void glValidateProgramARB(GLhandleARB programObj) (D0)
void glUniform1fARB(GLint location, GLfloat v0) (D0, D1)
void glUniform2fARB(GLint location, GLfloat v0, GLfloat v1) (D0, D1, D2)
void glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) (D0, D1, D2, D3)
void glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) (D0, D1, D2, D3, D4)
void glUniform1iARB(GLint location, GLint v0) (D0, D1)
void glUniform2iARB(GLint location, GLint v0, GLint v1) (D0, D1, D2)
void glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2) (D0, D1, D2, D3)
void glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) (D0, D1, D2, D3, D4)
void glUniform1fvARB(GLint location, GLsizei count, const GLfloat * value) (D0, D1, A0)
void glUniform2fvARB(GLint location, GLsizei count, const GLfloat * value) (D0, D1, A0)
void glUniform3fvARB(GLint location, GLsizei count, const GLfloat * value) (D0, D1, A0)
void glUniform4fvARB(GLint location, GLsizei count, const GLfloat * value) (D0, D1, A0)
void glUniform1ivARB(GLint location, GLsizei count, const GLint * value) (D0, D1, A0)
void glUniform2ivARB(GLint location, GLsizei count, const GLint * value) (D0, D1, A0)
void glUniform3ivARB(GLint location, GLsizei count, const GLint * value) (D0, D1, A0)
void glUniform4ivARB(GLint location, GLsizei count, const GLint * value) (D0, D1, A0)
void glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) (D0, D1, D2, A0)
void glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint * params) (D0, D1, A0)
void glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog) (D0, D1, A0, A1)
void glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj) (D0, D1, A0, A1)
GLint glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB * name) (D0, A0)
void glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name) (D0, D1, D2, A0, A1, A2, A3)
void glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat * params) (D0, D1, A0)
void glGetUniformivARB(GLhandleARB programObj, GLint location, GLint * params) (D0, D1, A0)
void glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source) (D0, D1, A0, A1)
void glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB * name) (D0, D1, A0)
void glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name) (D0, D1, D2, A0, A1, A2, A3)
GLint glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB * name) (D0, A0)
void glDrawBuffersARB(GLsizei n, const GLenum * bufs) (D0, A0)
GLboolean glIsRenderbuffer(GLuint renderbuffer) (D0)
void glBindRenderbuffer(GLenum target, GLuint renderbuffer) (D0, D1)
void glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers) (D0, A0)
void glGenRenderbuffers(GLsizei n, GLuint * renderbuffers) (D0, A0)
void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) (D0, D1, D2, D3)
void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
GLboolean glIsFramebuffer(GLuint framebuffer) (D0)
void glBindFramebuffer(GLenum target, GLuint framebuffer) (D0, D1)
void glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers) (D0, A0)
void glGenFramebuffers(GLsizei n, GLuint * framebuffers) (D0, A0)
GLenum glCheckFramebufferStatus(GLenum target) (D0)
void glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) (D0, D1, D2, D3, D4)
void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) (D0, D1, D2, D3, D4)
void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) (D0, D1, D2, D3, D4, D5)
void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) (D0, D1, D2, D3)
void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params) (D0, D1, D2, A0)
void glGenerateMipmap(GLenum target) (D0)
void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4)
void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) (D0, D1, D2, D3, D4)
void glBlendColorEXT(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) (D0, D1, D2, D3)
void glPolygonOffsetEXT(GLfloat factor, GLfloat bias) (D0, D1)
void glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2)
void glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, A0)
void glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) (D0, D1, D2, D3, D4, D5, D6)
void glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) (D0, D1, D2, D3, D4, D5, D6, D7)
void glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4, D5)
void glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5, D6, D7)
void glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
GLboolean glAreTexturesResidentEXT(GLsizei n, const GLuint * textures, GLboolean * residences) (D0, A0, A1)
void glBindTextureEXT(GLenum target, GLuint texture) (D0, D1)
void glDeleteTexturesEXT(GLsizei n, const GLuint * textures) (D0, A0)
void glGenTexturesEXT(GLsizei n, GLuint * textures) (D0, A0)
GLboolean glIsTextureEXT(GLuint texture) (D0)
void glPrioritizeTexturesEXT(GLsizei n, const GLuint * textures, const GLclampf * priorities) (D0, A0, A1)
void glArrayElementEXT(GLint i) (D0)
void glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer) (D0, D1, D2, D3, A0)
void glDrawArraysEXT(GLenum mode, GLint first, GLsizei count) (D0, D1, D2)
void glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean * pointer) (D0, D1, A0)
void glGetPointervEXT(GLenum pname, GLvoid *  * params) (D0, A0)
void glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer) (D0, D1, D2, A0)
void glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer) (D0, D1, D2, A0)
void glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer) (D0, D1, D2, D3, A0)
void glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer) (D0, D1, D2, D3, A0)
void glBlendEquationEXT(GLenum mode) (D0)
void glPointParameterfEXT(GLenum pname, GLfloat param) (D0, D1)
void glPointParameterfvEXT(GLenum pname, const GLfloat * params) (D0, A0)
void glColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid * table) (D0, D1, D2, D3, D4, A0)
void glGetColorTableEXT(GLenum target, GLenum format, GLenum type, GLvoid * data) (D0, D1, D2, A0)
void glGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glLockArraysEXT(GLint first, GLsizei count) (D0, D1)
void glUnlockArraysEXT() ()
void glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices) (D0, D1, D2, D3, D4, A0)
void glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue) (D0, D1, D2)
void glSecondaryColor3bvEXT(const GLbyte * v) (A0)
void glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue) (D0, D1, D2)
void glSecondaryColor3dvEXT(const GLdouble * v) (A0)
void glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue) (D0, D1, D2)
void glSecondaryColor3fvEXT(const GLfloat * v) (A0)
void glSecondaryColor3iEXT(GLint red, GLint green, GLint blue) (D0, D1, D2)
void glSecondaryColor3ivEXT(const GLint * v) (A0)
void glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue) (D0, D1, D2)
void glSecondaryColor3svEXT(const GLshort * v) (A0)
void glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue) (D0, D1, D2)
void glSecondaryColor3ubvEXT(const GLubyte * v) (A0)
void glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue) (D0, D1, D2)
void glSecondaryColor3uivEXT(const GLuint * v) (A0)
void glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue) (D0, D1, D2)
void glSecondaryColor3usvEXT(const GLushort * v) (A0)
void glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer) (D0, D1, D2, A0)
void glMultiDrawArraysEXT(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount) (D0, A0, A1, D1)
void glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const GLvoid *  * indices, GLsizei primcount) (D0, A0, D1, A1, D2)
void glFogCoordfEXT(GLfloat coord) (D0)
void glFogCoordfvEXT(const GLfloat * coord) (A0)
void glFogCoorddEXT(GLdouble coord) (D0)
void glFogCoorddvEXT(const GLdouble * coord) (A0)
void glFogCoordPointerEXT(GLenum type, GLsizei stride, const GLvoid * pointer) (D0, D1, A0)
void glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) (D0, D1, D2, D3)
void glFlushVertexArrayRangeNV() ()
void glVertexArrayRangeNV(GLsizei length, const GLvoid * pointer) (D0, A0)
void glCombinerParameterfvNV(GLenum pname, const GLfloat * params) (D0, A0)
void glCombinerParameterfNV(GLenum pname, GLfloat param) (D0, D1)
void glCombinerParameterivNV(GLenum pname, const GLint * params) (D0, A0)
void glCombinerParameteriNV(GLenum pname, GLint param) (D0, D1)
void glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage) (D0, D1, D2, D3, D4, D5)
void glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum) (D0, D1, D2, D3, D4, D5, D6, A0, A1, A2)
void glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage) (D0, D1, D2, D3)
void glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params) (D0, D1, D2, D3, A0)
void glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params) (D0, D1, D2, D3, A0)
void glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat * params) (D0, D1, D2, A0)
void glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint * params) (D0, D1, D2, A0)
void glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint * params) (D0, D1, A0)
void glResizeBuffersMESA() ()
void glWindowPos2dMESA(GLdouble x, GLdouble y) (D0, D1)
void glWindowPos2dvMESA(const GLdouble * v) (A0)
void glWindowPos2fMESA(GLfloat x, GLfloat y) (D0, D1)
void glWindowPos2fvMESA(const GLfloat * v) (A0)
void glWindowPos2iMESA(GLint x, GLint y) (D0, D1)
void glWindowPos2ivMESA(const GLint * v) (A0)
void glWindowPos2sMESA(GLshort x, GLshort y) (D0, D1)
void glWindowPos2svMESA(const GLshort * v) (A0)
void glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glWindowPos3dvMESA(const GLdouble * v) (A0)
void glWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glWindowPos3fvMESA(const GLfloat * v) (A0)
void glWindowPos3iMESA(GLint x, GLint y, GLint z) (D0, D1, D2)
void glWindowPos3ivMESA(const GLint * v) (A0)
void glWindowPos3sMESA(GLshort x, GLshort y, GLshort z) (D0, D1, D2)
void glWindowPos3svMESA(const GLshort * v) (A0)
void glWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3)
void glWindowPos4dvMESA(const GLdouble * v) (A0)
void glWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3)
void glWindowPos4fvMESA(const GLfloat * v) (A0)
void glWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w) (D0, D1, D2, D3)
void glWindowPos4ivMESA(const GLint * v) (A0)
void glWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w) (D0, D1, D2, D3)
void glWindowPos4svMESA(const GLshort * v) (A0)
GLboolean glAreProgramsResidentNV(GLsizei n, const GLuint * programs, GLboolean * residences) (D0, A0, A1)
void glBindProgramNV(GLenum target, GLuint id) (D0, D1)
void glDeleteProgramsNV(GLsizei n, const GLuint * programs) (D0, A0)
void glExecuteProgramNV(GLenum target, GLuint id, const GLfloat * params) (D0, D1, A0)
void glGenProgramsNV(GLsizei n, GLuint * programs) (D0, A0)
void glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble * params) (D0, D1, D2, A0)
void glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params) (D0, D1, D2, A0)
void glGetProgramivNV(GLuint id, GLenum pname, GLint * params) (D0, D1, A0)
void glGetProgramStringNV(GLuint id, GLenum pname, GLubyte * program) (D0, D1, A0)
void glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint * params) (D0, D1, D2, A0)
void glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble * params) (D0, D1, A0)
void glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetVertexAttribivNV(GLuint index, GLenum pname, GLint * params) (D0, D1, A0)
void glGetVertexAttribPointervNV(GLuint index, GLenum pname, GLvoid *  * pointer) (D0, D1, A0)
GLboolean glIsProgramNV(GLuint id) (D0)
void glLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte * program) (D0, D1, D2, A0)
void glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3, D4, D5)
void glProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble * v) (D0, D1, A0)
void glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3, D4, D5)
void glProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat * v) (D0, D1, A0)
void glProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, const GLdouble * v) (D0, D1, D2, A0)
void glProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, const GLfloat * v) (D0, D1, D2, A0)
void glRequestResidentProgramsNV(GLsizei n, const GLuint * programs) (D0, A0)
void glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform) (D0, D1, D2, D3)
void glVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid * pointer) (D0, D1, D2, D3, A0)
void glVertexAttrib1dNV(GLuint index, GLdouble x) (D0, D1)
void glVertexAttrib1dvNV(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib1fNV(GLuint index, GLfloat x) (D0, D1)
void glVertexAttrib1fvNV(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib1sNV(GLuint index, GLshort x) (D0, D1)
void glVertexAttrib1svNV(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y) (D0, D1, D2)
void glVertexAttrib2dvNV(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y) (D0, D1, D2)
void glVertexAttrib2fvNV(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y) (D0, D1, D2)
void glVertexAttrib2svNV(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2, D3)
void glVertexAttrib3dvNV(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2, D3)
void glVertexAttrib3fvNV(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z) (D0, D1, D2, D3)
void glVertexAttrib3svNV(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3, D4)
void glVertexAttrib4dvNV(GLuint index, const GLdouble * v) (D0, A0)
void glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3, D4)
void glVertexAttrib4fvNV(GLuint index, const GLfloat * v) (D0, A0)
void glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) (D0, D1, D2, D3, D4)
void glVertexAttrib4svNV(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) (D0, D1, D2, D3, D4)
void glVertexAttrib4ubvNV(GLuint index, const GLubyte * v) (D0, A0)
void glVertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble * v) (D0, D1, A0)
void glVertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat * v) (D0, D1, A0)
void glVertexAttribs1svNV(GLuint index, GLsizei count, const GLshort * v) (D0, D1, A0)
void glVertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble * v) (D0, D1, A0)
void glVertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat * v) (D0, D1, A0)
void glVertexAttribs2svNV(GLuint index, GLsizei count, const GLshort * v) (D0, D1, A0)
void glVertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble * v) (D0, D1, A0)
void glVertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat * v) (D0, D1, A0)
void glVertexAttribs3svNV(GLuint index, GLsizei count, const GLshort * v) (D0, D1, A0)
void glVertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble * v) (D0, D1, A0)
void glVertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat * v) (D0, D1, A0)
void glVertexAttribs4svNV(GLuint index, GLsizei count, const GLshort * v) (D0, D1, A0)
void glVertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte * v) (D0, D1, A0)
void glTexBumpParameterivATI(GLenum pname, const GLint * param) (D0, A0)
void glTexBumpParameterfvATI(GLenum pname, const GLfloat * param) (D0, A0)
void glGetTexBumpParameterivATI(GLenum pname, GLint * param) (D0, A0)
void glGetTexBumpParameterfvATI(GLenum pname, GLfloat * param) (D0, A0)
GLuint glGenFragmentShadersATI(GLuint range) (D0)
void glBindFragmentShaderATI(GLuint id) (D0)
void glDeleteFragmentShaderATI(GLuint id) (D0)
void glBeginFragmentShaderATI() ()
void glEndFragmentShaderATI() ()
void glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle) (D0, D1, D2)
void glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle) (D0, D1, D2)
void glColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod) (D0, D1, D2, D3, D4, D5, D6)
void glColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2, A3, A4)
void glAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod) (D0, D1, D2, D3, D4, D5)
void glAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2, A3)
void glSetFragmentShaderConstantATI(GLuint dst, const GLfloat * value) (D0, A0)
void glPointParameteriNV(GLenum pname, GLint param) (D0, D1)
void glPointParameterivNV(GLenum pname, const GLint * params) (D0, A0)
void glDrawBuffersATI(GLsizei n, const GLenum * bufs) (D0, A0)
void glProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, A0, D2, D3, D4, D5)
void glProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, A0, D2, D3, D4, D5)
void glProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v) (D0, D1, A0, A1)
void glProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v) (D0, D1, A0, A1)
void glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params) (D0, D1, A0, A1)
void glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params) (D0, D1, A0, A1)
GLboolean glIsRenderbufferEXT(GLuint renderbuffer) (D0)
void glBindRenderbufferEXT(GLenum target, GLuint renderbuffer) (D0, D1)
void glDeleteRenderbuffersEXT(GLsizei n, const GLuint * renderbuffers) (D0, A0)
void glGenRenderbuffersEXT(GLsizei n, GLuint * renderbuffers) (D0, A0)
void glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) (D0, D1, D2, D3)
void glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
GLboolean glIsFramebufferEXT(GLuint framebuffer) (D0)
void glBindFramebufferEXT(GLenum target, GLuint framebuffer) (D0, D1)
void glDeleteFramebuffersEXT(GLsizei n, const GLuint * framebuffers) (D0, A0)
void glGenFramebuffersEXT(GLsizei n, GLuint * framebuffers) (D0, A0)
GLenum glCheckFramebufferStatusEXT(GLenum target) (D0)
void glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) (D0, D1, D2, D3, D4)
void glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) (D0, D1, D2, D3, D4)
void glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) (D0, D1, D2, D3, D4, D5)
void glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) (D0, D1, D2, D3)
void glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint * params) (D0, D1, D2, A0)
void glGenerateMipmapEXT(GLenum target) (D0)
void glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) (D0, D1, D2, D3, D4)
GLvoid* glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) (D0, D1, D2, D3)
void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length) (D0, D1, D2)
void glBindVertexArray(GLuint array) (D0)
void glDeleteVertexArrays(GLsizei n, const GLuint * arrays) (D0, A0)
void glGenVertexArrays(GLsizei n, GLuint * arrays) (D0, A0)
GLboolean glIsVertexArray(GLuint array) (D0)
void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) (D0, D1, D2, D3, D4)
GLsync glFenceSync(GLenum condition, GLbitfield flags) (D0, D1)
GLboolean glIsSync(GLsync sync) (D0)
void glDeleteSync(GLsync sync) (D0)
GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout) (D0, D1, D2)
void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout) (D0, D1, D2)
void glGetInteger64v(GLenum pname, GLint64 * params) (D0, A0)
void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values) (D0, D1, D2, A0, A1)
void glProvokingVertexEXT(GLenum mode) (D0)
void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLint basevertex) (D0, D1, D2, A0, D3)
void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices, GLint basevertex) (D0, D1, D2, D3, D4, A0, D5)
void glMultiDrawElementsBaseVertex(GLenum mode, const GLsizei * count, GLenum type, const GLvoid *  * indices, GLsizei primcount, const GLint * basevertex) (D0, A0, D1, A1, D2, A2)
void glProvokingVertex(GLenum mode) (D0)
void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4)
void glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) (D0, D1, D2, D3, D4)
void glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean * data) (D0, D1, A0)
void glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint * data) (D0, D1, A0)
void glEnableIndexedEXT(GLenum target, GLuint index) (D0, D1)
void glDisableIndexedEXT(GLenum target, GLuint index) (D0, D1)
GLboolean glIsEnabledIndexedEXT(GLenum target, GLuint index) (D0, D1)
void glBeginConditionalRenderNV(GLuint id, GLenum mode) (D0, D1)
void glEndConditionalRenderNV() ()
GLenum glObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option) (D0, D1, D2)
GLenum glObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option) (D0, D1, D2)
void glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint * params) (D0, D1, D2, A0)
void glBeginTransformFeedback(GLenum primitiveMode) (D0)
void glEndTransformFeedback() ()
void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) (D0, D1, D2, D3, D4)
void glBindBufferBase(GLenum target, GLuint index, GLuint buffer) (D0, D1, D2)
void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *  * varyings, GLenum bufferMode) (D0, D1, A0, D2)
void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name) (D0, D1, D2, A0, A1, A2, A3)
void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei primcount) (D0, D1, D2, D3)
void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount) (D0, D1, D2, A0, D3)
void glDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount) (D0, D1, D2, D3)
void glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount) (D0, D1, D2, A0, D3)
void glProgramParameteriARB(GLuint program, GLenum pname, GLint value) (D0, D1, D2)
void glFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level) (D0, D1, D2, D3)
void glFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face) (D0, D1, D2, D3, D4)
void glBindTransformFeedback(GLenum target, GLuint id) (D0, D1)
void glDeleteTransformFeedbacks(GLsizei n, const GLuint * ids) (D0, A0)
void glGenTransformFeedbacks(GLsizei n, GLuint * ids) (D0, A0)
GLboolean glIsTransformFeedback(GLuint id) (D0)
void glPauseTransformFeedback() ()
void glResumeTransformFeedback() ()
void glDrawTransformFeedback(GLenum mode, GLuint id) (D0, D1)
void glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount) (D0, D1, D2, D3)
void glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount) (D0, D1, D2, A0, D3)
void glBeginTransformFeedbackEXT(GLenum primitiveMode) (D0)
void glEndTransformFeedbackEXT() ()
void glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) (D0, D1, D2, D3, D4)
void glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset) (D0, D1, D2, D3)
void glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer) (D0, D1, D2)
void glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar *  * varyings, GLenum bufferMode) (D0, D1, A0, D2)
void glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name) (D0, D1, D2, A0, A1, A2, A3)
void glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image) (D0, D1)
void glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image) (D0, D1)
void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) (D0, D1, D2, D3, D4)
void glGetBooleani_v(GLenum target, GLuint index, GLboolean * data) (D0, D1, A0)
void glGetIntegeri_v(GLenum target, GLuint index, GLint * data) (D0, D1, A0)
void glEnablei(GLenum target, GLuint index) (D0, D1)
void glDisablei(GLenum target, GLuint index) (D0, D1)
GLboolean glIsEnabledi(GLenum target, GLuint index) (D0, D1)
void glClampColor(GLenum target, GLenum clamp) (D0, D1)
void glBeginConditionalRender(GLuint id, GLenum mode) (D0, D1)
void glEndConditionalRender() ()
void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer) (D0, D1, D2, D3, A0)
void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint * params) (D0, D1, A0)
void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params) (D0, D1, A0)
void glVertexAttribI1i(GLuint index, GLint x) (D0, D1)
void glVertexAttribI2i(GLuint index, GLint x, GLint y) (D0, D1, D2)
void glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z) (D0, D1, D2, D3)
void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w) (D0, D1, D2, D3, D4)
void glVertexAttribI1ui(GLuint index, GLuint x) (D0, D1)
void glVertexAttribI2ui(GLuint index, GLuint x, GLuint y) (D0, D1, D2)
void glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z) (D0, D1, D2, D3)
void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) (D0, D1, D2, D3, D4)
void glVertexAttribI1iv(GLuint index, const GLint * v) (D0, A0)
void glVertexAttribI2iv(GLuint index, const GLint * v) (D0, A0)
void glVertexAttribI3iv(GLuint index, const GLint * v) (D0, A0)
void glVertexAttribI4iv(GLuint index, const GLint * v) (D0, A0)
void glVertexAttribI1uiv(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttribI2uiv(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttribI3uiv(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttribI4uiv(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttribI4bv(GLuint index, const GLbyte * v) (D0, A0)
void glVertexAttribI4sv(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttribI4ubv(GLuint index, const GLubyte * v) (D0, A0)
void glVertexAttribI4usv(GLuint index, const GLushort * v) (D0, A0)
void glGetUniformuiv(GLuint program, GLint location, GLuint * params) (D0, D1, A0)
void glBindFragDataLocation(GLuint program, GLuint color, const GLchar * name) (D0, D1, A0)
GLint glGetFragDataLocation(GLuint program, const GLchar * name) (D0, A0)
void glUniform1ui(GLint location, GLuint v0) (D0, D1)
void glUniform2ui(GLint location, GLuint v0, GLuint v1) (D0, D1, D2)
void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2) (D0, D1, D2, D3)
void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) (D0, D1, D2, D3, D4)
void glUniform1uiv(GLint location, GLsizei count, const GLuint * value) (D0, D1, A0)
void glUniform2uiv(GLint location, GLsizei count, const GLuint * value) (D0, D1, A0)
void glUniform3uiv(GLint location, GLsizei count, const GLuint * value) (D0, D1, A0)
void glUniform4uiv(GLint location, GLsizei count, const GLuint * value) (D0, D1, A0)
void glTexParameterIiv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint * params) (D0, D1, A0)
void glGetTexParameterIiv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint * params) (D0, D1, A0)
void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value) (D0, D1, A0)
void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value) (D0, D1, A0)
void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value) (D0, D1, A0)
void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) (D0, D1, D2, D3)
const GLubyte * glGetStringi(GLenum name, GLuint index) (D0, D1)
void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer) (D0, D1, D2)
void glPrimitiveRestartIndex(GLuint index) (D0)
void glGetInteger64i_v(GLenum target, GLuint index, GLint64 * data) (D0, D1, A0)
void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params) (D0, D1, A0)
void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level) (D0, D1, D2, D3)
void glVertexAttribDivisor(GLuint index, GLuint divisor) (D0, D1)
void glPrimitiveRestartNV() ()
void glPrimitiveRestartIndexNV(GLuint index) (D0)
void glVertexAttribI1iEXT(GLuint index, GLint x) (D0, D1)
void glVertexAttribI2iEXT(GLuint index, GLint x, GLint y) (D0, D1, D2)
void glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z) (D0, D1, D2, D3)
void glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w) (D0, D1, D2, D3, D4)
void glVertexAttribI1uiEXT(GLuint index, GLuint x) (D0, D1)
void glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y) (D0, D1, D2)
void glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z) (D0, D1, D2, D3)
void glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) (D0, D1, D2, D3, D4)
void glVertexAttribI1ivEXT(GLuint index, const GLint * v) (D0, A0)
void glVertexAttribI2ivEXT(GLuint index, const GLint * v) (D0, A0)
void glVertexAttribI3ivEXT(GLuint index, const GLint * v) (D0, A0)
void glVertexAttribI4ivEXT(GLuint index, const GLint * v) (D0, A0)
void glVertexAttribI1uivEXT(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttribI2uivEXT(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttribI3uivEXT(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttribI4uivEXT(GLuint index, const GLuint * v) (D0, A0)
void glVertexAttribI4bvEXT(GLuint index, const GLbyte * v) (D0, A0)
void glVertexAttribI4svEXT(GLuint index, const GLshort * v) (D0, A0)
void glVertexAttribI4ubvEXT(GLuint index, const GLubyte * v) (D0, A0)
void glVertexAttribI4usvEXT(GLuint index, const GLushort * v) (D0, A0)
void glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer) (D0, D1, D2, D3, A0)
void glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint * params) (D0, D1, A0)
void glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint * params) (D0, D1, A0)
void glGetUniformuivEXT(GLuint program, GLint location, GLuint * params) (D0, D1, A0)
void glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar * name) (D0, D1, A0)
GLint glGetFragDataLocationEXT(GLuint program, const GLchar * name) (D0, A0)
void glUniform1uiEXT(GLint location, GLuint v0) (D0, D1)
void glUniform2uiEXT(GLint location, GLuint v0, GLuint v1) (D0, D1, D2)
void glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2) (D0, D1, D2, D3)
void glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) (D0, D1, D2, D3, D4)
void glUniform1uivEXT(GLint location, GLsizei count, const GLuint * value) (D0, D1, A0)
void glUniform2uivEXT(GLint location, GLsizei count, const GLuint * value) (D0, D1, A0)
void glUniform3uivEXT(GLint location, GLsizei count, const GLuint * value) (D0, D1, A0)
void glUniform4uivEXT(GLint location, GLsizei count, const GLuint * value) (D0, D1, A0)
void glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params) (D0, D1, A0)
void glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params) (D0, D1, A0)
void glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha) (D0, D1, D2, D3)
void glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha) (D0, D1, D2, D3)
void glUseShaderProgramEXT(GLenum type, GLuint program) (D0, D1)
void glActiveProgramEXT(GLuint program) (D0)
GLuint glCreateShaderProgramEXT(GLenum type, const GLchar * string) (D0, A0)
void glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat * params) (D0, D1, D2, A0)
void glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat * params) (D0, D1, D2, A0)
void glBlendEquationSeparateATI(GLenum modeRGB, GLenum modeA) (D0, D1)
void glGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values) (D0, D1, D2, D3, A0)
void glGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values) (D0, D1, D2, D3, A0)
void glGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink) (D0, D1, D2, D3)
void glMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink) (D0, D1, D2)
void glResetHistogramEXT(GLenum target) (D0)
void glResetMinmaxEXT(GLenum target) (D0)
void glConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image) (D0, D1, D2, D3, D4, A0)
void glConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image) (D0, D1, D2, D3, D4, D5, A0)
void glConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params) (D0, D1, D2)
void glConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params) (D0, D1, D2)
void glConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5)
void glGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, GLvoid * image) (D0, D1, D2, A0)
void glGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span) (D0, D1, D2, A0, A1, A2)
void glSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column) (D0, D1, D2, D3, D4, D5, A0, A1)
void glColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table) (D0, D1, D2, D3, D4, A0)
void glColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glColorTableParameterivSGI(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glGetColorTableSGI(GLenum target, GLenum format, GLenum type, GLvoid * table) (D0, D1, D2, A0)
void glGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glPixelTexGenSGIX(GLenum mode) (D0)
void glPixelTexGenParameteriSGIS(GLenum pname, GLint param) (D0, D1)
void glPixelTexGenParameterivSGIS(GLenum pname, const GLint * params) (D0, A0)
void glPixelTexGenParameterfSGIS(GLenum pname, GLfloat param) (D0, D1)
void glPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat * params) (D0, A0)
void glGetPixelTexGenParameterivSGIS(GLenum pname, GLint * params) (D0, A0)
void glGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat * params) (D0, A0)
void glSampleMaskSGIS(GLclampf value, GLboolean invert) (D0, D1)
void glSamplePatternSGIS(GLenum pattern) (D0)
void glPointParameterfSGIS(GLenum pname, GLfloat param) (D0, D1)
void glPointParameterfvSGIS(GLenum pname, const GLfloat * params) (D0, A0)
void glColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data) (D0, D1, D2, D3, D4, A0)
void glCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) (D0, D1, D2, D3)
void glMultiModeDrawArraysIBM(const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride) (A0, A1, A2, D0, D1)
void glMultiModeDrawElementsIBM(const GLenum * mode, const GLsizei * count, GLenum type, const GLvoid * const * indices, GLsizei primcount, GLint modestride) (A0, A1, D0, A2, D1, D2)
void glSampleMaskEXT(GLclampf value, GLboolean invert) (D0, D1)
void glSamplePatternEXT(GLenum pattern) (D0)
void glDeleteFencesNV(GLsizei n, const GLuint * fences) (D0, A0)
void glGenFencesNV(GLsizei n, GLuint * fences) (D0, A0)
GLboolean glIsFenceNV(GLuint fence) (D0)
GLboolean glTestFenceNV(GLuint fence) (D0)
void glGetFenceivNV(GLuint fence, GLenum pname, GLint * params) (D0, D1, A0)
void glFinishFenceNV(GLuint fence) (D0)
void glSetFenceNV(GLuint fence, GLenum condition) (D0, D1)
void glActiveStencilFaceEXT(GLenum face) (D0)
void glBindVertexArrayAPPLE(GLuint array) (D0)
void glDeleteVertexArraysAPPLE(GLsizei n, const GLuint * arrays) (D0, A0)
void glGenVertexArraysAPPLE(GLsizei n, GLuint * arrays) (D0, A0)
GLboolean glIsVertexArrayAPPLE(GLuint array) (D0)
void glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) (D0, D1, D2, D3)
void glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask) (D0, D1, D2, D3)
void glDepthBoundsEXT(GLclampd zmin, GLclampd zmax) (D0, D1)
void glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha) (D0, D1)
void glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64EXT * params) (D0, D1, A0)
void glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64EXT * params) (D0, D1, A0)
void glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param) (D0, D1, D2)
void glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size) (D0, D1, D2)
void glTextureRangeAPPLE(GLenum target, GLsizei length, const GLvoid * pointer) (D0, D1, A0)
void glGetTexParameterPointervAPPLE(GLenum target, GLenum pname, GLvoid *  * params) (D0, D1, A0)
void glClampColorARB(GLenum target, GLenum clamp) (D0, D1)
void glFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) (D0, D1, D2, D3, D4)
void glVertexAttribDivisorARB(GLuint index, GLuint divisor) (D0, D1)
void glTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer) (D0, D1, D2)
void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount, GLint basevertex) (D0, D1, D2, A0, D3, D4)
void glBlendEquationiARB(GLuint buf, GLenum mode) (D0, D1)
void glBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha) (D0, D1, D2)
void glBlendFunciARB(GLuint buf, GLenum src, GLenum dst) (D0, D1, D2)
void glBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) (D0, D1, D2, D3, D4)
void glGenSamplers(GLsizei count, GLuint * samplers) (D0, A0)
void glDeleteSamplers(GLsizei count, const GLuint * samplers) (D0, A0)
GLboolean glIsSampler(GLuint sampler) (D0)
void glBindSampler(GLuint unit, GLuint sampler) (D0, D1)
void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param) (D0, D1, D2)
void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param) (D0, D1, A0)
void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param) (D0, D1, D2)
void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param) (D0, D1, A0)
void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint * param) (D0, D1, A0)
void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint * param) (D0, D1, A0)
void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params) (D0, D1, A0)
void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * params) (D0, D1, A0)
void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint * params) (D0, D1, A0)
void glReleaseShaderCompiler() ()
void glShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryformat, const GLvoid * binary, GLsizei length) (D0, A0, D1, A1, D2)
void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision) (D0, D1, A0, A1)
void glDepthRangef(GLclampf n, GLclampf f) (D0, D1)
void glClearDepthf(GLclampf d) (D0)
GLenum glGetGraphicsResetStatusARB() ()
void glGetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble * v) (D0, D1, D2, A0)
void glGetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat * v) (D0, D1, D2, A0)
void glGetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint * v) (D0, D1, D2, A0)
void glGetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat * values) (D0, D1, A0)
void glGetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint * values) (D0, D1, A0)
void glGetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort * values) (D0, D1, A0)
void glGetnPolygonStippleARB(GLsizei bufSize, GLubyte * pattern) (D0, A0)
void glGetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid * table) (D0, D1, D2, D3, A0)
void glGetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid * image) (D0, D1, D2, D3, A0)
void glGetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid * row, GLsizei columnBufSize, GLvoid * column, GLvoid * span) (D0, D1, D2, D3, A0, D4, A1, A2)
void glGetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid * values) (D0, D1, D2, D3, D4, A0)
void glGetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid * values) (D0, D1, D2, D3, D4, A0)
void glGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid * img) (D0, D1, D2, D3, D4, A0)
void glReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, A0)
void glGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, GLvoid * img) (D0, D1, D2, A0)
void glGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat * params) (D0, D1, D2, A0)
void glGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint * params) (D0, D1, D2, A0)
void glGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint * params) (D0, D1, D2, A0)
void glGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble * params) (D0, D1, D2, A0)
void glBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst) (D0, D1, D2)
void glBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) (D0, D1, D2, D3, D4)
void glBlendEquationIndexedAMD(GLuint buf, GLenum mode) (D0, D1)
void glBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha) (D0, D1, D2)
void glTextureBarrierNV() ()
##end functionlist
