##begin config
version 12.0
libbasetype struct MesaBase
options peropenerbase
##end config
##begin cdef
#if defined(USE_MGL_NAMESPACE)
#undef  USE_MGL_NAMESPACE
#endif
#if defined(GL_MESA_trace)
#undef  GL_MESA_trace
#endif
#include <GL/arosmesa.h>
##end cdef
##begin cdefprivate
#include "arosmesa_intern.h"
##end cdefprivate
##begin functionlist
AROSMesaContext AROSMesaCreateContextTags(long Tag1, ...)
AROSMesaContext AROSMesaCreateContext(struct TagItem *tagList)
void AROSMesaDestroyContext(AROSMesaContext amesa) (A0)
void AROSMesaMakeCurrent(AROSMesaContext amesa) (A0)
void AROSMesaSwapBuffers(AROSMesaContext amesa) (A0)
AROSMesaContext AROSMesaGetCurrentContext() ()
.skip 24
void glClearIndex(GLfloat c) (D0)
void glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) (D0, D1, D2, D3)
void glClear(GLbitfield mask) (D0)
void glIndexMask(GLuint mask) (D0)
void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) (D0, D1, D2, D3)
void glAlphaFunc(GLenum func, GLclampf ref) (D0, D1)
void glBlendFunc(GLenum sfactor, GLenum dfactor) (D0, D1)
void glLogicOp(GLenum opcode) (D0)
void glCullFace(GLenum mode) (D0)
void glFrontFace(GLenum mode) (D0)
void glPointSize(GLfloat size) (D0)
void glLineWidth(GLfloat width) (D0)
void glLineStipple(GLint factor, GLushort pattern) (D0, D1)
void glPolygonMode(GLenum face, GLenum mode) (D0, D1)
void glPolygonOffset(GLfloat factor, GLfloat units) (D0, D1)
void glPolygonStipple(const GLubyte * mask) (A0)
void glGetPolygonStipple(GLubyte * mask) (A0)
void glEdgeFlag(GLboolean flag) (D0)
void glEdgeFlagv(const GLboolean * flag) (A0)
void glScissor(GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3)
void glClipPlane(GLenum plane, const GLdouble * equation) (D0, A0)
void glGetClipPlane(GLenum plane, GLdouble * equation) (D0, A0)
void glDrawBuffer(GLenum mode) (D0)
void glReadBuffer(GLenum mode) (D0)
void glEnable(GLenum cap) (D0)
void glDisable(GLenum cap) (D0)
GLboolean glIsEnabled(GLenum cap) (D0)
void glEnableClientState(GLenum cap) (D0)
void glDisableClientState(GLenum cap) (D0)
void glGetBooleanv(GLenum pname, GLboolean * params) (D0, A0)
void glGetDoublev(GLenum pname, GLdouble * params) (D0, A0)
void glGetFloatv(GLenum pname, GLfloat * params) (D0, A0)
void glGetIntegerv(GLenum pname, GLint * params) (D0, A0)
void glPushAttrib(GLbitfield mask) (D0)
void glPopAttrib() ()
void glPushClientAttrib(GLbitfield mask) (D0)
void glPopClientAttrib() ()
GLint glRenderMode(GLenum mode) (D0)
GLenum glGetError() ()
const GLubyte * glGetString(GLenum name) (D0)
void glFinish() ()
void glFlush() ()
void glHint(GLenum target, GLenum mode) (D0, D1)
void glClearDepth(GLclampd depth) (D0)
void glDepthFunc(GLenum func) (D0)
void glDepthMask(GLboolean flag) (D0)
void glDepthRange(GLclampd near_val, GLclampd far_val) (D0, D1)
void glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) (D0, D1, D2, D3)
void glAccum(GLenum op, GLfloat value) (D0, D1)
void glMatrixMode(GLenum mode) (D0)
void glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val) (D0, D1, D2, D3, D4, D5)
void glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val) (D0, D1, D2, D3, D4, D5)
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3)
void glPushMatrix() ()
void glPopMatrix() ()
void glLoadIdentity() ()
void glLoadMatrixd(const GLdouble * m) (A0)
void glLoadMatrixf(const GLfloat * m) (A0)
void glMultMatrixd(const GLdouble * m) (A0)
void glMultMatrixf(const GLfloat * m) (A0)
void glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2, D3)
void glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2, D3)
void glScaled(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glScalef(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glTranslated(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glTranslatef(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
GLboolean glIsList(GLuint list) (D0)
void glDeleteLists(GLuint list, GLsizei range) (D0, D1)
GLuint glGenLists(GLsizei range) (D0)
void glNewList(GLuint list, GLenum mode) (D0, D1)
void glEndList() ()
void glCallList(GLuint list) (D0)
void glCallLists(GLsizei n, GLenum type, const GLvoid * lists) (D0, D1, A0)
void glListBase(GLuint base) (D0)
void glBegin(GLenum mode) (D0)
void glEnd() ()
void glVertex2d(GLdouble x, GLdouble y) (D0, D1)
void glVertex2f(GLfloat x, GLfloat y) (D0, D1)
void glVertex2i(GLint x, GLint y) (D0, D1)
void glVertex2s(GLshort x, GLshort y) (D0, D1)
void glVertex3d(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glVertex3f(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glVertex3i(GLint x, GLint y, GLint z) (D0, D1, D2)
void glVertex3s(GLshort x, GLshort y, GLshort z) (D0, D1, D2)
void glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3)
void glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3)
void glVertex4i(GLint x, GLint y, GLint z, GLint w) (D0, D1, D2, D3)
void glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w) (D0, D1, D2, D3)
void glVertex2dv(const GLdouble * v) (A0)
void glVertex2fv(const GLfloat * v) (A0)
void glVertex2iv(const GLint * v) (A0)
void glVertex2sv(const GLshort * v) (A0)
void glVertex3dv(const GLdouble * v) (A0)
void glVertex3fv(const GLfloat * v) (A0)
void glVertex3iv(const GLint * v) (A0)
void glVertex3sv(const GLshort * v) (A0)
void glVertex4dv(const GLdouble * v) (A0)
void glVertex4fv(const GLfloat * v) (A0)
void glVertex4iv(const GLint * v) (A0)
void glVertex4sv(const GLshort * v) (A0)
void glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz) (D0, D1, D2)
void glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz) (D0, D1, D2)
void glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz) (D0, D1, D2)
void glNormal3i(GLint nx, GLint ny, GLint nz) (D0, D1, D2)
void glNormal3s(GLshort nx, GLshort ny, GLshort nz) (D0, D1, D2)
void glNormal3bv(const GLbyte * v) (A0)
void glNormal3dv(const GLdouble * v) (A0)
void glNormal3fv(const GLfloat * v) (A0)
void glNormal3iv(const GLint * v) (A0)
void glNormal3sv(const GLshort * v) (A0)
void glIndexd(GLdouble c) (D0)
void glIndexf(GLfloat c) (D0)
void glIndexi(GLint c) (D0)
void glIndexs(GLshort c) (D0)
void glIndexub(GLubyte c) (D0)
void glIndexdv(const GLdouble * c) (A0)
void glIndexfv(const GLfloat * c) (A0)
void glIndexiv(const GLint * c) (A0)
void glIndexsv(const GLshort * c) (A0)
void glIndexubv(const GLubyte * c) (A0)
void glColor3b(GLbyte red, GLbyte green, GLbyte blue) (D0, D1, D2)
void glColor3d(GLdouble red, GLdouble green, GLdouble blue) (D0, D1, D2)
void glColor3f(GLfloat red, GLfloat green, GLfloat blue) (D0, D1, D2)
void glColor3i(GLint red, GLint green, GLint blue) (D0, D1, D2)
void glColor3s(GLshort red, GLshort green, GLshort blue) (D0, D1, D2)
void glColor3ub(GLubyte red, GLubyte green, GLubyte blue) (D0, D1, D2)
void glColor3ui(GLuint red, GLuint green, GLuint blue) (D0, D1, D2)
void glColor3us(GLushort red, GLushort green, GLushort blue) (D0, D1, D2)
void glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha) (D0, D1, D2, D3)
void glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha) (D0, D1, D2, D3)
void glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) (D0, D1, D2, D3)
void glColor4i(GLint red, GLint green, GLint blue, GLint alpha) (D0, D1, D2, D3)
void glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha) (D0, D1, D2, D3)
void glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha) (D0, D1, D2, D3)
void glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha) (D0, D1, D2, D3)
void glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha) (D0, D1, D2, D3)
void glColor3bv(const GLbyte * v) (A0)
void glColor3dv(const GLdouble * v) (A0)
void glColor3fv(const GLfloat * v) (A0)
void glColor3iv(const GLint * v) (A0)
void glColor3sv(const GLshort * v) (A0)
void glColor3ubv(const GLubyte * v) (A0)
void glColor3uiv(const GLuint * v) (A0)
void glColor3usv(const GLushort * v) (A0)
void glColor4bv(const GLbyte * v) (A0)
void glColor4dv(const GLdouble * v) (A0)
void glColor4fv(const GLfloat * v) (A0)
void glColor4iv(const GLint * v) (A0)
void glColor4sv(const GLshort * v) (A0)
void glColor4ubv(const GLubyte * v) (A0)
void glColor4uiv(const GLuint * v) (A0)
void glColor4usv(const GLushort * v) (A0)
void glTexCoord1d(GLdouble s) (D0)
void glTexCoord1f(GLfloat s) (D0)
void glTexCoord1i(GLint s) (D0)
void glTexCoord1s(GLshort s) (D0)
void glTexCoord2d(GLdouble s, GLdouble t) (D0, D1)
void glTexCoord2f(GLfloat s, GLfloat t) (D0, D1)
void glTexCoord2i(GLint s, GLint t) (D0, D1)
void glTexCoord2s(GLshort s, GLshort t) (D0, D1)
void glTexCoord3d(GLdouble s, GLdouble t, GLdouble r) (D0, D1, D2)
void glTexCoord3f(GLfloat s, GLfloat t, GLfloat r) (D0, D1, D2)
void glTexCoord3i(GLint s, GLint t, GLint r) (D0, D1, D2)
void glTexCoord3s(GLshort s, GLshort t, GLshort r) (D0, D1, D2)
void glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q) (D0, D1, D2, D3)
void glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q) (D0, D1, D2, D3)
void glTexCoord4i(GLint s, GLint t, GLint r, GLint q) (D0, D1, D2, D3)
void glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q) (D0, D1, D2, D3)
void glTexCoord1dv(const GLdouble * v) (A0)
void glTexCoord1fv(const GLfloat * v) (A0)
void glTexCoord1iv(const GLint * v) (A0)
void glTexCoord1sv(const GLshort * v) (A0)
void glTexCoord2dv(const GLdouble * v) (A0)
void glTexCoord2fv(const GLfloat * v) (A0)
void glTexCoord2iv(const GLint * v) (A0)
void glTexCoord2sv(const GLshort * v) (A0)
void glTexCoord3dv(const GLdouble * v) (A0)
void glTexCoord3fv(const GLfloat * v) (A0)
void glTexCoord3iv(const GLint * v) (A0)
void glTexCoord3sv(const GLshort * v) (A0)
void glTexCoord4dv(const GLdouble * v) (A0)
void glTexCoord4fv(const GLfloat * v) (A0)
void glTexCoord4iv(const GLint * v) (A0)
void glTexCoord4sv(const GLshort * v) (A0)
void glRasterPos2d(GLdouble x, GLdouble y) (D0, D1)
void glRasterPos2f(GLfloat x, GLfloat y) (D0, D1)
void glRasterPos2i(GLint x, GLint y) (D0, D1)
void glRasterPos2s(GLshort x, GLshort y) (D0, D1)
void glRasterPos3d(GLdouble x, GLdouble y, GLdouble z) (D0, D1, D2)
void glRasterPos3f(GLfloat x, GLfloat y, GLfloat z) (D0, D1, D2)
void glRasterPos3i(GLint x, GLint y, GLint z) (D0, D1, D2)
void glRasterPos3s(GLshort x, GLshort y, GLshort z) (D0, D1, D2)
void glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w) (D0, D1, D2, D3)
void glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w) (D0, D1, D2, D3)
void glRasterPos4i(GLint x, GLint y, GLint z, GLint w) (D0, D1, D2, D3)
void glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w) (D0, D1, D2, D3)
void glRasterPos2dv(const GLdouble * v) (A0)
void glRasterPos2fv(const GLfloat * v) (A0)
void glRasterPos2iv(const GLint * v) (A0)
void glRasterPos2sv(const GLshort * v) (A0)
void glRasterPos3dv(const GLdouble * v) (A0)
void glRasterPos3fv(const GLfloat * v) (A0)
void glRasterPos3iv(const GLint * v) (A0)
void glRasterPos3sv(const GLshort * v) (A0)
void glRasterPos4dv(const GLdouble * v) (A0)
void glRasterPos4fv(const GLfloat * v) (A0)
void glRasterPos4iv(const GLint * v) (A0)
void glRasterPos4sv(const GLshort * v) (A0)
void glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2) (D0, D1, D2, D3)
void glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2) (D0, D1, D2, D3)
void glRecti(GLint x1, GLint y1, GLint x2, GLint y2) (D0, D1, D2, D3)
void glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2) (D0, D1, D2, D3)
void glRectdv(const GLdouble * v1, const GLdouble * v2) (A0, A1)
void glRectfv(const GLfloat * v1, const GLfloat * v2) (A0, A1)
void glRectiv(const GLint * v1, const GLint * v2) (A0, A1)
void glRectsv(const GLshort * v1, const GLshort * v2) (A0, A1)
void glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, D2, A0)
void glNormalPointer(GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, A0)
void glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, D2, A0)
void glIndexPointer(GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, A0)
void glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * ptr) (D0, D1, D2, A0)
void glEdgeFlagPointer(GLsizei stride, const GLvoid * ptr) (D0, A0)
void glGetPointerv(GLenum pname, GLvoid * * params) (D0, A0)
void glArrayElement(GLint i) (D0)
void glDrawArrays(GLenum mode, GLint first, GLsizei count) (D0, D1, D2)
void glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices) (D0, D1, D2, A0)
void glInterleavedArrays(GLenum format, GLsizei stride, const GLvoid * pointer) (D0, D1, A0)
void glShadeModel(GLenum mode) (D0)
void glLightf(GLenum light, GLenum pname, GLfloat param) (D0, D1, D2)
void glLighti(GLenum light, GLenum pname, GLint param) (D0, D1, D2)
void glLightfv(GLenum light, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glLightiv(GLenum light, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetLightfv(GLenum light, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetLightiv(GLenum light, GLenum pname, GLint * params) (D0, D1, A0)
void glLightModelf(GLenum pname, GLfloat param) (D0, D1)
void glLightModeli(GLenum pname, GLint param) (D0, D1)
void glLightModelfv(GLenum pname, const GLfloat * params) (D0, A0)
void glLightModeliv(GLenum pname, const GLint * params) (D0, A0)
void glMaterialf(GLenum face, GLenum pname, GLfloat param) (D0, D1, D2)
void glMateriali(GLenum face, GLenum pname, GLint param) (D0, D1, D2)
void glMaterialfv(GLenum face, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glMaterialiv(GLenum face, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetMaterialfv(GLenum face, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetMaterialiv(GLenum face, GLenum pname, GLint * params) (D0, D1, A0)
void glColorMaterial(GLenum face, GLenum mode) (D0, D1)
void glPixelZoom(GLfloat xfactor, GLfloat yfactor) (D0, D1)
void glPixelStoref(GLenum pname, GLfloat param) (D0, D1)
void glPixelStorei(GLenum pname, GLint param) (D0, D1)
void glPixelTransferf(GLenum pname, GLfloat param) (D0, D1)
void glPixelTransferi(GLenum pname, GLint param) (D0, D1)
void glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values) (D0, D1, A0)
void glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values) (D0, D1, A0)
void glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values) (D0, D1, A0)
void glGetPixelMapfv(GLenum map, GLfloat * values) (D0, A0)
void glGetPixelMapuiv(GLenum map, GLuint * values) (D0, A0)
void glGetPixelMapusv(GLenum map, GLushort * values) (D0, A0)
void glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap) (D0, D1, D2, D3, D4, D5, A0)
void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid * pixels) (D0, D1, D2, D3, D4, D5, A0)
void glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, A0)
void glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type) (D0, D1, D2, D3, D4)
void glStencilFunc(GLenum func, GLint ref, GLuint mask) (D0, D1, D2)
void glStencilMask(GLuint mask) (D0)
void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass) (D0, D1, D2)
void glClearStencil(GLint s) (D0)
void glTexGend(GLenum coord, GLenum pname, GLdouble param) (D0, D1, D2)
void glTexGenf(GLenum coord, GLenum pname, GLfloat param) (D0, D1, D2)
void glTexGeni(GLenum coord, GLenum pname, GLint param) (D0, D1, D2)
void glTexGendv(GLenum coord, GLenum pname, const GLdouble * params) (D0, D1, A0)
void glTexGenfv(GLenum coord, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glTexGeniv(GLenum coord, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetTexGendv(GLenum coord, GLenum pname, GLdouble * params) (D0, D1, A0)
void glGetTexGenfv(GLenum coord, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetTexGeniv(GLenum coord, GLenum pname, GLint * params) (D0, D1, A0)
void glTexEnvf(GLenum target, GLenum pname, GLfloat param) (D0, D1, D2)
void glTexEnvi(GLenum target, GLenum pname, GLint param) (D0, D1, D2)
void glTexEnvfv(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glTexEnviv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetTexEnvfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetTexEnviv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glTexParameterf(GLenum target, GLenum pname, GLfloat param) (D0, D1, D2)
void glTexParameteri(GLenum target, GLenum pname, GLint param) (D0, D1, D2)
void glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glTexParameteriv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params) (D0, D1, D2, A0)
void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params) (D0, D1, D2, A0)
void glTexImage1D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, A0)
void glTexImage2D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid * pixels) (D0, D1, D2, D3, A0)
void glGenTextures(GLsizei n, GLuint * textures) (D0, A0)
void glDeleteTextures(GLsizei n, const GLuint * textures) (D0, A0)
void glBindTexture(GLenum target, GLuint texture) (D0, D1)
void glPrioritizeTextures(GLsizei n, const GLuint * textures, const GLclampf * priorities) (D0, A0, A1)
GLboolean glAreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences) (D0, A0, A1)
GLboolean glIsTexture(GLuint texture) (D0)
void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, A0)
void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) (D0, D1, D2, D3, D4, D5, D6)
void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) (D0, D1, D2, D3, D4, D5, D6, D7)
void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4, D5)
void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5, D6, D7)
void glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points) (D0, D1, D2, D3, D4, A0)
void glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points) (D0, D1, D2, D3, D4, A0)
void glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glGetMapdv(GLenum target, GLenum query, GLdouble * v) (D0, D1, A0)
void glGetMapfv(GLenum target, GLenum query, GLfloat * v) (D0, D1, A0)
void glGetMapiv(GLenum target, GLenum query, GLint * v) (D0, D1, A0)
void glEvalCoord1d(GLdouble u) (D0)
void glEvalCoord1f(GLfloat u) (D0)
void glEvalCoord1dv(const GLdouble * u) (A0)
void glEvalCoord1fv(const GLfloat * u) (A0)
void glEvalCoord2d(GLdouble u, GLdouble v) (D0, D1)
void glEvalCoord2f(GLfloat u, GLfloat v) (D0, D1)
void glEvalCoord2dv(const GLdouble * u) (A0)
void glEvalCoord2fv(const GLfloat * u) (A0)
void glMapGrid1d(GLint un, GLdouble u1, GLdouble u2) (D0, D1, D2)
void glMapGrid1f(GLint un, GLfloat u1, GLfloat u2) (D0, D1, D2)
void glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2) (D0, D1, D2, D3, D4, D5)
void glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2) (D0, D1, D2, D3, D4, D5)
void glEvalPoint1(GLint i) (D0)
void glEvalPoint2(GLint i, GLint j) (D0, D1)
void glEvalMesh1(GLenum mode, GLint i1, GLint i2) (D0, D1, D2)
void glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2) (D0, D1, D2, D3, D4)
void glFogf(GLenum pname, GLfloat param) (D0, D1)
void glFogi(GLenum pname, GLint param) (D0, D1)
void glFogfv(GLenum pname, const GLfloat * params) (D0, A0)
void glFogiv(GLenum pname, const GLint * params) (D0, A0)
void glFeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer) (D0, D1, A0)
void glPassThrough(GLfloat token) (D0)
void glSelectBuffer(GLsizei size, GLuint * buffer) (D0, A0)
void glInitNames() ()
void glLoadName(GLuint name) (D0)
void glPushName(GLuint name) (D0)
void glPopName() ()
void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices) (D0, D1, D2, D3, D4, A0)
void glTexImage3D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2)
void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table) (D0, D1, D2, D3, D4, A0)
void glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data) (D0, D1, D2, D3, D4, A0)
void glColorTableParameteriv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glGetColorTable(GLenum target, GLenum format, GLenum type, GLvoid * table) (D0, D1, D2, A0)
void glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetColorTableParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glBlendEquation(GLenum mode) (D0)
void glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) (D0, D1, D2, D3)
void glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink) (D0, D1, D2, D3)
void glResetHistogram(GLenum target) (D0)
void glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values) (D0, D1, D2, D3, A0)
void glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetHistogramParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glMinmax(GLenum target, GLenum internalformat, GLboolean sink) (D0, D1, D2)
void glResetMinmax(GLenum target) (D0)
void glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid * values) (D0, D1, D2, D3, A0)
void glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image) (D0, D1, D2, D3, D4, A0)
void glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image) (D0, D1, D2, D3, D4, D5, A0)
void glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params) (D0, D1, D2)
void glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat * params) (D0, D1, A0)
void glConvolutionParameteri(GLenum target, GLenum pname, GLint params) (D0, D1, D2)
void glConvolutionParameteriv(GLenum target, GLenum pname, const GLint * params) (D0, D1, A0)
void glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) (D0, D1, D2, D3, D4)
void glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height) (D0, D1, D2, D3, D4, D5)
void glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, GLvoid * image) (D0, D1, D2, A0)
void glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat * params) (D0, D1, A0)
void glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint * params) (D0, D1, A0)
void glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column) (D0, D1, D2, D3, D4, D5, A0, A1)
void glGetSeparableFilter(GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span) (D0, D1, D2, A0, A1, A2)
void glActiveTexture(GLenum texture) (D0)
void glClientActiveTexture(GLenum texture) (D0)
void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, A0)
void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, A0)
void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, A0)
void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2)
void glGetCompressedTexImage(GLenum target, GLint lod, GLvoid * img) (D0, D1, A0)
void glMultiTexCoord1d(GLenum target, GLdouble s) (D0, D1)
void glMultiTexCoord1dv(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord1f(GLenum target, GLfloat s) (D0, D1)
void glMultiTexCoord1fv(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord1i(GLenum target, GLint s) (D0, D1)
void glMultiTexCoord1iv(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord1s(GLenum target, GLshort s) (D0, D1)
void glMultiTexCoord1sv(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t) (D0, D1, D2)
void glMultiTexCoord2dv(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t) (D0, D1, D2)
void glMultiTexCoord2fv(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord2i(GLenum target, GLint s, GLint t) (D0, D1, D2)
void glMultiTexCoord2iv(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord2s(GLenum target, GLshort s, GLshort t) (D0, D1, D2)
void glMultiTexCoord2sv(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r) (D0, D1, D2, D3)
void glMultiTexCoord3dv(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r) (D0, D1, D2, D3)
void glMultiTexCoord3fv(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r) (D0, D1, D2, D3)
void glMultiTexCoord3iv(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r) (D0, D1, D2, D3)
void glMultiTexCoord3sv(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4dv(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4fv(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4iv(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4sv(GLenum target, const GLshort * v) (D0, A0)
void glLoadTransposeMatrixd(const GLdouble * m) (A0)
void glLoadTransposeMatrixf(const GLfloat * m) (A0)
void glMultTransposeMatrixd(const GLdouble * m) (A0)
void glMultTransposeMatrixf(const GLfloat * m) (A0)
void glSampleCoverage(GLclampf value, GLboolean invert) (D0, D1)
void glActiveTextureARB(GLenum texture) (D0)
void glClientActiveTextureARB(GLenum texture) (D0)
void glMultiTexCoord1dARB(GLenum target, GLdouble s) (D0, D1)
void glMultiTexCoord1dvARB(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord1fARB(GLenum target, GLfloat s) (D0, D1)
void glMultiTexCoord1fvARB(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord1iARB(GLenum target, GLint s) (D0, D1)
void glMultiTexCoord1ivARB(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord1sARB(GLenum target, GLshort s) (D0, D1)
void glMultiTexCoord1svARB(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t) (D0, D1, D2)
void glMultiTexCoord2dvARB(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t) (D0, D1, D2)
void glMultiTexCoord2fvARB(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord2iARB(GLenum target, GLint s, GLint t) (D0, D1, D2)
void glMultiTexCoord2ivARB(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t) (D0, D1, D2)
void glMultiTexCoord2svARB(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r) (D0, D1, D2, D3)
void glMultiTexCoord3dvARB(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r) (D0, D1, D2, D3)
void glMultiTexCoord3fvARB(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r) (D0, D1, D2, D3)
void glMultiTexCoord3ivARB(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r) (D0, D1, D2, D3)
void glMultiTexCoord3svARB(GLenum target, const GLshort * v) (D0, A0)
void glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4dvARB(GLenum target, const GLdouble * v) (D0, A0)
void glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4fvARB(GLenum target, const GLfloat * v) (D0, A0)
void glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4ivARB(GLenum target, const GLint * v) (D0, A0)
void glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q) (D0, D1, D2, D3, D4)
void glMultiTexCoord4svARB(GLenum target, const GLshort * v) (D0, A0)
void glBlendFuncSeparate(GLenum a, GLenum b, GLenum c, GLenum d) (D0, D1, D2, D3)
void glFogCoordf(GLfloat a) (D0)
void glFogCoordfv(const GLfloat * a) (A0)
void glFogCoordd(GLdouble a) (D0)
void glFogCoorddv(const GLdouble * a) (A0)
void glFogCoordPointer(GLenum a, GLsizei b, const GLvoid * c) (D0, D1, A0)
void glMultiDrawArrays(GLenum a, GLint * b, GLsizei * c, GLsizei d) (D0, A0, A1, D1)
void glMultiDrawElements(GLenum a, const GLsizei * b, GLenum c, const GLvoid *  * d, GLsizei e) (D0, A0, D1, A1, D2)
void glPointParameterf(GLenum a, GLfloat b) (D0, D1)
void glPointParameterfv(GLenum a, const GLfloat * b) (D0, A0)
void glPointParameteri(GLenum a, GLint b) (D0, D1)
void glPointParameteriv(GLenum a, const GLint * b) (D0, A0)
void glSecondaryColor3b(GLbyte a, GLbyte b, GLbyte c) (D0, D1, D2)
void glSecondaryColor3bv(const GLbyte * a) (A0)
void glSecondaryColor3d(GLdouble a, GLdouble b, GLdouble c) (D0, D1, D2)
void glSecondaryColor3dv(const GLdouble * a) (A0)
void glSecondaryColor3f(GLfloat a, GLfloat b, GLfloat c) (D0, D1, D2)
void glSecondaryColor3fv(const GLfloat * a) (A0)
void glSecondaryColor3i(GLint a, GLint b, GLint c) (D0, D1, D2)
void glSecondaryColor3iv(const GLint * a) (A0)
void glSecondaryColor3s(GLshort a, GLshort b, GLshort c) (D0, D1, D2)
void glSecondaryColor3sv(const GLshort * a) (A0)
void glSecondaryColor3ub(GLubyte a, GLubyte b, GLubyte c) (D0, D1, D2)
void glSecondaryColor3ubv(const GLubyte * a) (A0)
void glSecondaryColor3ui(GLuint a, GLuint b, GLuint c) (D0, D1, D2)
void glSecondaryColor3uiv(const GLuint * a) (A0)
void glSecondaryColor3us(GLushort a, GLushort b, GLushort c) (D0, D1, D2)
void glSecondaryColor3usv(const GLushort * a) (A0)
void glSecondaryColorPointer(GLint a, GLenum b, GLsizei c, const GLvoid * d) (D0, D1, D2, A0)
void glWindowPos2d(GLdouble a, GLdouble b) (D0, D1)
void glWindowPos2dv(const GLdouble * a) (A0)
void glWindowPos2f(GLfloat a, GLfloat b) (D0, D1)
void glWindowPos2fv(const GLfloat * a) (A0)
void glWindowPos2i(GLint a, GLint b) (D0, D1)
void glWindowPos2iv(const GLint * a) (A0)
void glWindowPos2s(GLshort a, GLshort b) (D0, D1)
void glWindowPos2sv(const GLshort * a) (A0)
void glWindowPos3d(GLdouble a, GLdouble b, GLdouble c) (D0, D1, D2)
void glWindowPos3dv(const GLdouble * a) (A0)
void glWindowPos3f(GLfloat a, GLfloat b, GLfloat c) (D0, D1, D2)
void glWindowPos3fv(const GLfloat * a) (A0)
void glWindowPos3i(GLint a, GLint b, GLint c) (D0, D1, D2)
void glWindowPos3iv(const GLint * a) (A0)
void glWindowPos3s(GLshort a, GLshort b, GLshort c) (D0, D1, D2)
void glWindowPos3sv(const GLshort * a) (A0)
void glGenQueries(GLsizei a, GLuint * b) (D0, A0)
void glDeleteQueries(GLsizei a, const GLuint * b) (D0, A0)
GLboolean glIsQuery(GLuint a) (D0)
void glBeginQuery(GLenum a, GLuint b) (D0, D1)
void glEndQuery(GLenum a) (D0)
void glGetQueryiv(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
void glGetQueryObjectiv(GLuint a, GLenum b, GLint * c) (D0, D1, A0)
void glGetQueryObjectuiv(GLuint a, GLenum b, GLuint * c) (D0, D1, A0)
void glBindBuffer(GLenum a, GLuint b) (D0, D1)
void glDeleteBuffers(GLsizei a, const GLuint * b) (D0, A0)
void glGenBuffers(GLsizei a, GLuint * b) (D0, A0)
GLboolean glIsBuffer(GLuint a) (D0)
void glBufferData(GLenum a, GLsizeiptr b, const GLvoid * c, GLenum d) (D0, D1, A0, D2)
void glBufferSubData(GLenum a, GLintptr b, GLsizeiptr c, const GLvoid * d) (D0, D1, D2, A0)
void glGetBufferSubData(GLenum a, GLintptr b, GLsizeiptr c, GLvoid * d) (D0, D1, D2, A0)
GLvoid* glMapBuffer(GLenum a, GLenum b) (D0, D1)
GLboolean glUnmapBuffer(GLenum a) (D0)
void glGetBufferParameteriv(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
void glGetBufferPointerv(GLenum a, GLenum b, GLvoid *  * c) (D0, D1, A0)
void glBlendEquationSeparate(GLenum a, GLenum b) (D0, D1)
void glDrawBuffers(GLsizei a, const GLenum * b) (D0, A0)
void glStencilOpSeparate(GLenum a, GLenum b, GLenum c, GLenum d) (D0, D1, D2, D3)
void glStencilFuncSeparate(GLenum a, GLenum b, GLint c, GLuint d) (D0, D1, D2, D3)
void glStencilMaskSeparate(GLenum a, GLuint b) (D0, D1)
void glAttachShader(GLuint a, GLuint b) (D0, D1)
void glBindAttribLocation(GLuint a, GLuint b, const GLchar * c) (D0, D1, A0)
void glCompileShader(GLuint a) (D0)
GLuint glCreateProgram() ()
GLuint glCreateShader(GLenum a) (D0)
void glDeleteProgram(GLuint a) (D0)
void glDeleteShader(GLuint a) (D0)
void glDetachShader(GLuint a, GLuint b) (D0, D1)
void glDisableVertexAttribArray(GLuint a) (D0)
void glEnableVertexAttribArray(GLuint a) (D0)
void glGetActiveAttrib(GLuint a, GLuint b, GLsizei c, GLsizei * d, GLint * e, GLenum * f, GLchar * g) (D0, D1, D2, A0, A1, A2, A3)
void glGetActiveUniform(GLuint a, GLuint b, GLsizei c, GLsizei * d, GLint * e, GLenum * f, GLchar * g) (D0, D1, D2, A0, A1, A2, A3)
void glGetAttachedShaders(GLuint a, GLsizei b, GLsizei * c, GLuint * d) (D0, D1, A0, A1)
GLint glGetAttribLocation(GLuint a, const GLchar * b) (D0, A0)
void glGetProgramiv(GLuint a, GLenum b, GLint * c) (D0, D1, A0)
void glGetProgramInfoLog(GLuint a, GLsizei b, GLsizei * c, GLchar * d) (D0, D1, A0, A1)
void glGetShaderiv(GLuint a, GLenum b, GLint * c) (D0, D1, A0)
void glGetShaderInfoLog(GLuint a, GLsizei b, GLsizei * c, GLchar * d) (D0, D1, A0, A1)
void glGetShaderSource(GLuint a, GLsizei b, GLsizei * c, GLchar * d) (D0, D1, A0, A1)
GLint glGetUniformLocation(GLuint a, const GLchar * b) (D0, A0)
void glGetUniformfv(GLuint a, GLint b, GLfloat * c) (D0, D1, A0)
void glGetUniformiv(GLuint a, GLint b, GLint * c) (D0, D1, A0)
void glGetVertexAttribdv(GLuint a, GLenum b, GLdouble * c) (D0, D1, A0)
void glGetVertexAttribfv(GLuint a, GLenum b, GLfloat * c) (D0, D1, A0)
void glGetVertexAttribiv(GLuint a, GLenum b, GLint * c) (D0, D1, A0)
void glGetVertexAttribPointerv(GLuint a, GLenum b, GLvoid *  * c) (D0, D1, A0)
GLboolean glIsProgram(GLuint a) (D0)
GLboolean glIsShader(GLuint a) (D0)
void glLinkProgram(GLuint a) (D0)
void glShaderSource(GLuint a, GLsizei b, const GLchar *  * c, const GLint * d) (D0, D1, A0, A1)
void glUseProgram(GLuint a) (D0)
void glUniform1f(GLint a, GLfloat b) (D0, D1)
void glUniform2f(GLint a, GLfloat b, GLfloat c) (D0, D1, D2)
void glUniform3f(GLint a, GLfloat b, GLfloat c, GLfloat d) (D0, D1, D2, D3)
void glUniform4f(GLint a, GLfloat b, GLfloat c, GLfloat d, GLfloat e) (D0, D1, D2, D3, D4)
void glUniform1i(GLint a, GLint b) (D0, D1)
void glUniform2i(GLint a, GLint b, GLint c) (D0, D1, D2)
void glUniform3i(GLint a, GLint b, GLint c, GLint d) (D0, D1, D2, D3)
void glUniform4i(GLint a, GLint b, GLint c, GLint d, GLint e) (D0, D1, D2, D3, D4)
void glUniform1fv(GLint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glUniform2fv(GLint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glUniform3fv(GLint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glUniform4fv(GLint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glUniform1iv(GLint a, GLsizei b, const GLint * c) (D0, D1, A0)
void glUniform2iv(GLint a, GLsizei b, const GLint * c) (D0, D1, A0)
void glUniform3iv(GLint a, GLsizei b, const GLint * c) (D0, D1, A0)
void glUniform4iv(GLint a, GLsizei b, const GLint * c) (D0, D1, A0)
void glUniformMatrix2fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix3fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix4fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glValidateProgram(GLuint a) (D0)
void glVertexAttrib1d(GLuint a, GLdouble b) (D0, D1)
void glVertexAttrib1dv(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib1f(GLuint a, GLfloat b) (D0, D1)
void glVertexAttrib1fv(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib1s(GLuint a, GLshort b) (D0, D1)
void glVertexAttrib1sv(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib2d(GLuint a, GLdouble b, GLdouble c) (D0, D1, D2)
void glVertexAttrib2dv(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib2f(GLuint a, GLfloat b, GLfloat c) (D0, D1, D2)
void glVertexAttrib2fv(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib2s(GLuint a, GLshort b, GLshort c) (D0, D1, D2)
void glVertexAttrib2sv(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib3d(GLuint a, GLdouble b, GLdouble c, GLdouble d) (D0, D1, D2, D3)
void glVertexAttrib3dv(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib3f(GLuint a, GLfloat b, GLfloat c, GLfloat d) (D0, D1, D2, D3)
void glVertexAttrib3fv(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib3s(GLuint a, GLshort b, GLshort c, GLshort d) (D0, D1, D2, D3)
void glVertexAttrib3sv(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib4Nbv(GLuint a, const GLbyte * b) (D0, A0)
void glVertexAttrib4Niv(GLuint a, const GLint * b) (D0, A0)
void glVertexAttrib4Nsv(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib4Nub(GLuint a, GLubyte b, GLubyte c, GLubyte d, GLubyte e) (D0, D1, D2, D3, D4)
void glVertexAttrib4Nubv(GLuint a, const GLubyte * b) (D0, A0)
void glVertexAttrib4Nuiv(GLuint a, const GLuint * b) (D0, A0)
void glVertexAttrib4Nusv(GLuint a, const GLushort * b) (D0, A0)
void glVertexAttrib4bv(GLuint a, const GLbyte * b) (D0, A0)
void glVertexAttrib4d(GLuint a, GLdouble b, GLdouble c, GLdouble d, GLdouble e) (D0, D1, D2, D3, D4)
void glVertexAttrib4dv(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib4f(GLuint a, GLfloat b, GLfloat c, GLfloat d, GLfloat e) (D0, D1, D2, D3, D4)
void glVertexAttrib4fv(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib4iv(GLuint a, const GLint * b) (D0, A0)
void glVertexAttrib4s(GLuint a, GLshort b, GLshort c, GLshort d, GLshort e) (D0, D1, D2, D3, D4)
void glVertexAttrib4sv(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib4ubv(GLuint a, const GLubyte * b) (D0, A0)
void glVertexAttrib4uiv(GLuint a, const GLuint * b) (D0, A0)
void glVertexAttrib4usv(GLuint a, const GLushort * b) (D0, A0)
void glVertexAttribPointer(GLuint a, GLint b, GLenum c, GLboolean d, GLsizei e, const GLvoid * f) (D0, D1, D2, D3, D4, A0)
void glUniformMatrix2x3fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix3x2fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix2x4fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix4x2fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix3x4fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix4x3fv(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glLoadTransposeMatrixfARB(const GLfloat * a) (A0)
void glLoadTransposeMatrixdARB(const GLdouble * a) (A0)
void glMultTransposeMatrixfARB(const GLfloat * a) (A0)
void glMultTransposeMatrixdARB(const GLdouble * a) (A0)
void glSampleCoverageARB(GLclampf a, GLboolean b) (D0, D1)
void glCompressedTexImage3DARB(GLenum a, GLint b, GLenum c, GLsizei d, GLsizei e, GLsizei f, GLint g, GLsizei h, const GLvoid * i) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCompressedTexImage2DARB(GLenum a, GLint b, GLenum c, GLsizei d, GLsizei e, GLint f, GLsizei g, const GLvoid * h) (D0, D1, D2, D3, D4, D5, D6, A0)
void glCompressedTexImage1DARB(GLenum a, GLint b, GLenum c, GLsizei d, GLint e, GLsizei f, const GLvoid * g) (D0, D1, D2, D3, D4, D5, A0)
void glCompressedTexSubImage3DARB(GLenum a, GLint b, GLint c, GLint d, GLint e, GLsizei f, GLsizei g, GLsizei h, GLenum i, GLsizei j, const GLvoid * k) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2)
void glCompressedTexSubImage2DARB(GLenum a, GLint b, GLint c, GLint d, GLsizei e, GLsizei f, GLenum g, GLsizei h, const GLvoid * i) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCompressedTexSubImage1DARB(GLenum a, GLint b, GLint c, GLsizei d, GLenum e, GLsizei f, const GLvoid * g) (D0, D1, D2, D3, D4, D5, A0)
void glGetCompressedTexImageARB(GLenum a, GLint b, GLvoid * c) (D0, D1, A0)
void glPointParameterfARB(GLenum a, GLfloat b) (D0, D1)
void glPointParameterfvARB(GLenum a, const GLfloat * b) (D0, A0)
void glWindowPos2dARB(GLdouble a, GLdouble b) (D0, D1)
void glWindowPos2dvARB(const GLdouble * a) (A0)
void glWindowPos2fARB(GLfloat a, GLfloat b) (D0, D1)
void glWindowPos2fvARB(const GLfloat * a) (A0)
void glWindowPos2iARB(GLint a, GLint b) (D0, D1)
void glWindowPos2ivARB(const GLint * a) (A0)
void glWindowPos2sARB(GLshort a, GLshort b) (D0, D1)
void glWindowPos2svARB(const GLshort * a) (A0)
void glWindowPos3dARB(GLdouble a, GLdouble b, GLdouble c) (D0, D1, D2)
void glWindowPos3dvARB(const GLdouble * a) (A0)
void glWindowPos3fARB(GLfloat a, GLfloat b, GLfloat c) (D0, D1, D2)
void glWindowPos3fvARB(const GLfloat * a) (A0)
void glWindowPos3iARB(GLint a, GLint b, GLint c) (D0, D1, D2)
void glWindowPos3ivARB(const GLint * a) (A0)
void glWindowPos3sARB(GLshort a, GLshort b, GLshort c) (D0, D1, D2)
void glWindowPos3svARB(const GLshort * a) (A0)
void glVertexAttrib1dARB(GLuint a, GLdouble b) (D0, D1)
void glVertexAttrib1dvARB(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib1fARB(GLuint a, GLfloat b) (D0, D1)
void glVertexAttrib1fvARB(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib1sARB(GLuint a, GLshort b) (D0, D1)
void glVertexAttrib1svARB(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib2dARB(GLuint a, GLdouble b, GLdouble c) (D0, D1, D2)
void glVertexAttrib2dvARB(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib2fARB(GLuint a, GLfloat b, GLfloat c) (D0, D1, D2)
void glVertexAttrib2fvARB(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib2sARB(GLuint a, GLshort b, GLshort c) (D0, D1, D2)
void glVertexAttrib2svARB(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib3dARB(GLuint a, GLdouble b, GLdouble c, GLdouble d) (D0, D1, D2, D3)
void glVertexAttrib3dvARB(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib3fARB(GLuint a, GLfloat b, GLfloat c, GLfloat d) (D0, D1, D2, D3)
void glVertexAttrib3fvARB(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib3sARB(GLuint a, GLshort b, GLshort c, GLshort d) (D0, D1, D2, D3)
void glVertexAttrib3svARB(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib4NbvARB(GLuint a, const GLbyte * b) (D0, A0)
void glVertexAttrib4NivARB(GLuint a, const GLint * b) (D0, A0)
void glVertexAttrib4NsvARB(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib4NubARB(GLuint a, GLubyte b, GLubyte c, GLubyte d, GLubyte e) (D0, D1, D2, D3, D4)
void glVertexAttrib4NubvARB(GLuint a, const GLubyte * b) (D0, A0)
void glVertexAttrib4NuivARB(GLuint a, const GLuint * b) (D0, A0)
void glVertexAttrib4NusvARB(GLuint a, const GLushort * b) (D0, A0)
void glVertexAttrib4bvARB(GLuint a, const GLbyte * b) (D0, A0)
void glVertexAttrib4dARB(GLuint a, GLdouble b, GLdouble c, GLdouble d, GLdouble e) (D0, D1, D2, D3, D4)
void glVertexAttrib4dvARB(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib4fARB(GLuint a, GLfloat b, GLfloat c, GLfloat d, GLfloat e) (D0, D1, D2, D3, D4)
void glVertexAttrib4fvARB(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib4ivARB(GLuint a, const GLint * b) (D0, A0)
void glVertexAttrib4sARB(GLuint a, GLshort b, GLshort c, GLshort d, GLshort e) (D0, D1, D2, D3, D4)
void glVertexAttrib4svARB(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib4ubvARB(GLuint a, const GLubyte * b) (D0, A0)
void glVertexAttrib4uivARB(GLuint a, const GLuint * b) (D0, A0)
void glVertexAttrib4usvARB(GLuint a, const GLushort * b) (D0, A0)
void glVertexAttribPointerARB(GLuint a, GLint b, GLenum c, GLboolean d, GLsizei e, const GLvoid * f) (D0, D1, D2, D3, D4, A0)
void glEnableVertexAttribArrayARB(GLuint a) (D0)
void glDisableVertexAttribArrayARB(GLuint a) (D0)
void glProgramStringARB(GLenum a, GLenum b, GLsizei c, const GLvoid * d) (D0, D1, D2, A0)
void glBindProgramARB(GLenum a, GLuint b) (D0, D1)
void glDeleteProgramsARB(GLsizei a, const GLuint * b) (D0, A0)
void glGenProgramsARB(GLsizei a, GLuint * b) (D0, A0)
void glProgramEnvParameter4dARB(GLenum a, GLuint b, GLdouble c, GLdouble d, GLdouble e, GLdouble f) (D0, D1, D2, D3, D4, D5)
void glProgramEnvParameter4dvARB(GLenum a, GLuint b, const GLdouble * c) (D0, D1, A0)
void glProgramEnvParameter4fARB(GLenum a, GLuint b, GLfloat c, GLfloat d, GLfloat e, GLfloat f) (D0, D1, D2, D3, D4, D5)
void glProgramEnvParameter4fvARB(GLenum a, GLuint b, const GLfloat * c) (D0, D1, A0)
void glProgramLocalParameter4dARB(GLenum a, GLuint b, GLdouble c, GLdouble d, GLdouble e, GLdouble f) (D0, D1, D2, D3, D4, D5)
void glProgramLocalParameter4dvARB(GLenum a, GLuint b, const GLdouble * c) (D0, D1, A0)
void glProgramLocalParameter4fARB(GLenum a, GLuint b, GLfloat c, GLfloat d, GLfloat e, GLfloat f) (D0, D1, D2, D3, D4, D5)
void glProgramLocalParameter4fvARB(GLenum a, GLuint b, const GLfloat * c) (D0, D1, A0)
void glGetProgramEnvParameterdvARB(GLenum a, GLuint b, GLdouble * c) (D0, D1, A0)
void glGetProgramEnvParameterfvARB(GLenum a, GLuint b, GLfloat * c) (D0, D1, A0)
void glGetProgramLocalParameterdvARB(GLenum a, GLuint b, GLdouble * c) (D0, D1, A0)
void glGetProgramLocalParameterfvARB(GLenum a, GLuint b, GLfloat * c) (D0, D1, A0)
void glGetProgramivARB(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
void glGetProgramStringARB(GLenum a, GLenum b, GLvoid * c) (D0, D1, A0)
void glGetVertexAttribdvARB(GLuint a, GLenum b, GLdouble * c) (D0, D1, A0)
void glGetVertexAttribfvARB(GLuint a, GLenum b, GLfloat * c) (D0, D1, A0)
void glGetVertexAttribivARB(GLuint a, GLenum b, GLint * c) (D0, D1, A0)
void glGetVertexAttribPointervARB(GLuint a, GLenum b, GLvoid *  * c) (D0, D1, A0)
GLboolean glIsProgramARB(GLuint a) (D0)
void glBindBufferARB(GLenum a, GLuint b) (D0, D1)
void glDeleteBuffersARB(GLsizei a, const GLuint * b) (D0, A0)
void glGenBuffersARB(GLsizei a, GLuint * b) (D0, A0)
GLboolean glIsBufferARB(GLuint a) (D0)
void glBufferDataARB(GLenum a, GLsizeiptrARB b, const GLvoid * c, GLenum d) (D0, D1, A0, D2)
void glBufferSubDataARB(GLenum a, GLintptrARB b, GLsizeiptrARB c, const GLvoid * d) (D0, D1, D2, A0)
void glGetBufferSubDataARB(GLenum a, GLintptrARB b, GLsizeiptrARB c, GLvoid * d) (D0, D1, D2, A0)
GLvoid* glMapBufferARB(GLenum a, GLenum b) (D0, D1)
GLboolean glUnmapBufferARB(GLenum a) (D0)
void glGetBufferParameterivARB(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
void glGetBufferPointervARB(GLenum a, GLenum b, GLvoid *  * c) (D0, D1, A0)
void glGenQueriesARB(GLsizei a, GLuint * b) (D0, A0)
void glDeleteQueriesARB(GLsizei a, const GLuint * b) (D0, A0)
GLboolean glIsQueryARB(GLuint a) (D0)
void glBeginQueryARB(GLenum a, GLuint b) (D0, D1)
void glEndQueryARB(GLenum a) (D0)
void glGetQueryivARB(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
void glGetQueryObjectivARB(GLuint a, GLenum b, GLint * c) (D0, D1, A0)
void glGetQueryObjectuivARB(GLuint a, GLenum b, GLuint * c) (D0, D1, A0)
void glDeleteObjectARB(GLhandleARB a) (D0)
GLhandleARB glGetHandleARB(GLenum a) (D0)
void glDetachObjectARB(GLhandleARB a, GLhandleARB b) (D0, D1)
GLhandleARB glCreateShaderObjectARB(GLenum a) (D0)
void glShaderSourceARB(GLhandleARB a, GLsizei b, const GLcharARB *  * c, const GLint * d) (D0, D1, A0, A1)
void glCompileShaderARB(GLhandleARB a) (D0)
GLhandleARB glCreateProgramObjectARB() ()
void glAttachObjectARB(GLhandleARB a, GLhandleARB b) (D0, D1)
void glLinkProgramARB(GLhandleARB a) (D0)
void glUseProgramObjectARB(GLhandleARB a) (D0)
void glValidateProgramARB(GLhandleARB a) (D0)
void glUniform1fARB(GLint a, GLfloat b) (D0, D1)
void glUniform2fARB(GLint a, GLfloat b, GLfloat c) (D0, D1, D2)
void glUniform3fARB(GLint a, GLfloat b, GLfloat c, GLfloat d) (D0, D1, D2, D3)
void glUniform4fARB(GLint a, GLfloat b, GLfloat c, GLfloat d, GLfloat e) (D0, D1, D2, D3, D4)
void glUniform1iARB(GLint a, GLint b) (D0, D1)
void glUniform2iARB(GLint a, GLint b, GLint c) (D0, D1, D2)
void glUniform3iARB(GLint a, GLint b, GLint c, GLint d) (D0, D1, D2, D3)
void glUniform4iARB(GLint a, GLint b, GLint c, GLint d, GLint e) (D0, D1, D2, D3, D4)
void glUniform1fvARB(GLint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glUniform2fvARB(GLint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glUniform3fvARB(GLint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glUniform4fvARB(GLint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glUniform1ivARB(GLint a, GLsizei b, const GLint * c) (D0, D1, A0)
void glUniform2ivARB(GLint a, GLsizei b, const GLint * c) (D0, D1, A0)
void glUniform3ivARB(GLint a, GLsizei b, const GLint * c) (D0, D1, A0)
void glUniform4ivARB(GLint a, GLsizei b, const GLint * c) (D0, D1, A0)
void glUniformMatrix2fvARB(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix3fvARB(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glUniformMatrix4fvARB(GLint a, GLsizei b, GLboolean c, const GLfloat * d) (D0, D1, D2, A0)
void glGetObjectParameterfvARB(GLhandleARB a, GLenum b, GLfloat * c) (D0, D1, A0)
void glGetObjectParameterivARB(GLhandleARB a, GLenum b, GLint * c) (D0, D1, A0)
void glGetInfoLogARB(GLhandleARB a, GLsizei b, GLsizei * c, GLcharARB * d) (D0, D1, A0, A1)
void glGetAttachedObjectsARB(GLhandleARB a, GLsizei b, GLsizei * c, GLhandleARB * d) (D0, D1, A0, A1)
GLint glGetUniformLocationARB(GLhandleARB a, const GLcharARB * b) (D0, A0)
void glGetActiveUniformARB(GLhandleARB a, GLuint b, GLsizei c, GLsizei * d, GLint * e, GLenum * f, GLcharARB * g) (D0, D1, D2, A0, A1, A2, A3)
void glGetUniformfvARB(GLhandleARB a, GLint b, GLfloat * c) (D0, D1, A0)
void glGetUniformivARB(GLhandleARB a, GLint b, GLint * c) (D0, D1, A0)
void glGetShaderSourceARB(GLhandleARB a, GLsizei b, GLsizei * c, GLcharARB * d) (D0, D1, A0, A1)
void glBindAttribLocationARB(GLhandleARB a, GLuint b, const GLcharARB * c) (D0, D1, A0)
void glGetActiveAttribARB(GLhandleARB a, GLuint b, GLsizei c, GLsizei * d, GLint * e, GLenum * f, GLcharARB * g) (D0, D1, D2, A0, A1, A2, A3)
GLint glGetAttribLocationARB(GLhandleARB a, const GLcharARB * b) (D0, A0)
void glDrawBuffersARB(GLsizei a, const GLenum * b) (D0, A0)
GLboolean glIsRenderbuffer(GLuint a) (D0)
void glBindRenderbuffer(GLenum a, GLuint b) (D0, D1)
void glDeleteRenderbuffers(GLsizei a, const GLuint * b) (D0, A0)
void glGenRenderbuffers(GLsizei a, GLuint * b) (D0, A0)
void glRenderbufferStorage(GLenum a, GLenum b, GLsizei c, GLsizei d) (D0, D1, D2, D3)
void glGetRenderbufferParameteriv(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
GLboolean glIsFramebuffer(GLuint a) (D0)
void glBindFramebuffer(GLenum a, GLuint b) (D0, D1)
void glDeleteFramebuffers(GLsizei a, const GLuint * b) (D0, A0)
void glGenFramebuffers(GLsizei a, GLuint * b) (D0, A0)
GLenum glCheckFramebufferStatus(GLenum a) (D0)
void glFramebufferTexture1D(GLenum a, GLenum b, GLenum c, GLuint d, GLint e) (D0, D1, D2, D3, D4)
void glFramebufferTexture2D(GLenum a, GLenum b, GLenum c, GLuint d, GLint e) (D0, D1, D2, D3, D4)
void glFramebufferTexture3D(GLenum a, GLenum b, GLenum c, GLuint d, GLint e, GLint f) (D0, D1, D2, D3, D4, D5)
void glFramebufferRenderbuffer(GLenum a, GLenum b, GLenum c, GLuint d) (D0, D1, D2, D3)
void glGetFramebufferAttachmentParameteriv(GLenum a, GLenum b, GLenum c, GLint * d) (D0, D1, D2, A0)
void glGenerateMipmap(GLenum a) (D0)
void glBlitFramebuffer(GLint a, GLint b, GLint c, GLint d, GLint e, GLint f, GLint g, GLint h, GLbitfield i, GLenum j) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glRenderbufferStorageMultisample(GLenum a, GLsizei b, GLenum c, GLsizei d, GLsizei e) (D0, D1, D2, D3, D4)
void glFramebufferTextureLayer(GLenum a, GLenum b, GLuint c, GLint d, GLint e) (D0, D1, D2, D3, D4)
void glBlendColorEXT(GLclampf a, GLclampf b, GLclampf c, GLclampf d) (D0, D1, D2, D3)
void glPolygonOffsetEXT(GLfloat a, GLfloat b) (D0, D1)
void glTexImage3DEXT(GLenum a, GLint b, GLenum c, GLsizei d, GLsizei e, GLsizei f, GLint g, GLenum h, GLenum i, const GLvoid * j) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glTexSubImage3DEXT(GLenum a, GLint b, GLint c, GLint d, GLint e, GLsizei f, GLsizei g, GLsizei h, GLenum i, GLenum j, const GLvoid * k) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2)
void glTexSubImage1DEXT(GLenum a, GLint b, GLint c, GLsizei d, GLenum e, GLenum f, const GLvoid * g) (D0, D1, D2, D3, D4, D5, A0)
void glTexSubImage2DEXT(GLenum a, GLint b, GLint c, GLint d, GLsizei e, GLsizei f, GLenum g, GLenum h, const GLvoid * i) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glCopyTexImage1DEXT(GLenum a, GLint b, GLenum c, GLint d, GLint e, GLsizei f, GLint g) (D0, D1, D2, D3, D4, D5, D6)
void glCopyTexImage2DEXT(GLenum a, GLint b, GLenum c, GLint d, GLint e, GLsizei f, GLsizei g, GLint h) (D0, D1, D2, D3, D4, D5, D6, D7)
void glCopyTexSubImage1DEXT(GLenum a, GLint b, GLint c, GLint d, GLint e, GLsizei f) (D0, D1, D2, D3, D4, D5)
void glCopyTexSubImage2DEXT(GLenum a, GLint b, GLint c, GLint d, GLint e, GLint f, GLsizei g, GLsizei h) (D0, D1, D2, D3, D4, D5, D6, D7)
void glCopyTexSubImage3DEXT(GLenum a, GLint b, GLint c, GLint d, GLint e, GLint f, GLint g, GLsizei h, GLsizei i) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
GLboolean glAreTexturesResidentEXT(GLsizei a, const GLuint * b, GLboolean * c) (D0, A0, A1)
void glBindTextureEXT(GLenum a, GLuint b) (D0, D1)
void glDeleteTexturesEXT(GLsizei a, const GLuint * b) (D0, A0)
void glGenTexturesEXT(GLsizei a, GLuint * b) (D0, A0)
GLboolean glIsTextureEXT(GLuint a) (D0)
void glPrioritizeTexturesEXT(GLsizei a, const GLuint * b, const GLclampf * c) (D0, A0, A1)
void glArrayElementEXT(GLint a) (D0)
void glColorPointerEXT(GLint a, GLenum b, GLsizei c, GLsizei d, const GLvoid * e) (D0, D1, D2, D3, A0)
void glDrawArraysEXT(GLenum a, GLint b, GLsizei c) (D0, D1, D2)
void glEdgeFlagPointerEXT(GLsizei a, GLsizei b, const GLboolean * c) (D0, D1, A0)
void glGetPointervEXT(GLenum a, GLvoid *  * b) (D0, A0)
void glIndexPointerEXT(GLenum a, GLsizei b, GLsizei c, const GLvoid * d) (D0, D1, D2, A0)
void glNormalPointerEXT(GLenum a, GLsizei b, GLsizei c, const GLvoid * d) (D0, D1, D2, A0)
void glTexCoordPointerEXT(GLint a, GLenum b, GLsizei c, GLsizei d, const GLvoid * e) (D0, D1, D2, D3, A0)
void glVertexPointerEXT(GLint a, GLenum b, GLsizei c, GLsizei d, const GLvoid * e) (D0, D1, D2, D3, A0)
void glBlendEquationEXT(GLenum a) (D0)
void glPointParameterfEXT(GLenum a, GLfloat b) (D0, D1)
void glPointParameterfvEXT(GLenum a, const GLfloat * b) (D0, A0)
void glColorTableEXT(GLenum a, GLenum b, GLsizei c, GLenum d, GLenum e, const GLvoid * f) (D0, D1, D2, D3, D4, A0)
void glGetColorTableEXT(GLenum a, GLenum b, GLenum c, GLvoid * d) (D0, D1, D2, A0)
void glGetColorTableParameterivEXT(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
void glGetColorTableParameterfvEXT(GLenum a, GLenum b, GLfloat * c) (D0, D1, A0)
void glLockArraysEXT(GLint a, GLsizei b) (D0, D1)
void glUnlockArraysEXT() ()
void glDrawRangeElementsEXT(GLenum a, GLuint b, GLuint c, GLsizei d, GLenum e, const GLvoid * f) (D0, D1, D2, D3, D4, A0)
void glSecondaryColor3bEXT(GLbyte a, GLbyte b, GLbyte c) (D0, D1, D2)
void glSecondaryColor3bvEXT(const GLbyte * a) (A0)
void glSecondaryColor3dEXT(GLdouble a, GLdouble b, GLdouble c) (D0, D1, D2)
void glSecondaryColor3dvEXT(const GLdouble * a) (A0)
void glSecondaryColor3fEXT(GLfloat a, GLfloat b, GLfloat c) (D0, D1, D2)
void glSecondaryColor3fvEXT(const GLfloat * a) (A0)
void glSecondaryColor3iEXT(GLint a, GLint b, GLint c) (D0, D1, D2)
void glSecondaryColor3ivEXT(const GLint * a) (A0)
void glSecondaryColor3sEXT(GLshort a, GLshort b, GLshort c) (D0, D1, D2)
void glSecondaryColor3svEXT(const GLshort * a) (A0)
void glSecondaryColor3ubEXT(GLubyte a, GLubyte b, GLubyte c) (D0, D1, D2)
void glSecondaryColor3ubvEXT(const GLubyte * a) (A0)
void glSecondaryColor3uiEXT(GLuint a, GLuint b, GLuint c) (D0, D1, D2)
void glSecondaryColor3uivEXT(const GLuint * a) (A0)
void glSecondaryColor3usEXT(GLushort a, GLushort b, GLushort c) (D0, D1, D2)
void glSecondaryColor3usvEXT(const GLushort * a) (A0)
void glSecondaryColorPointerEXT(GLint a, GLenum b, GLsizei c, const GLvoid * d) (D0, D1, D2, A0)
void glMultiDrawArraysEXT(GLenum a, GLint * b, GLsizei * c, GLsizei d) (D0, A0, A1, D1)
void glMultiDrawElementsEXT(GLenum a, const GLsizei * b, GLenum c, const GLvoid *  * d, GLsizei e) (D0, A0, D1, A1, D2)
void glFogCoordfEXT(GLfloat a) (D0)
void glFogCoordfvEXT(const GLfloat * a) (A0)
void glFogCoorddEXT(GLdouble a) (D0)
void glFogCoorddvEXT(const GLdouble * a) (A0)
void glFogCoordPointerEXT(GLenum a, GLsizei b, const GLvoid * c) (D0, D1, A0)
void glBlendFuncSeparateEXT(GLenum a, GLenum b, GLenum c, GLenum d) (D0, D1, D2, D3)
void glFlushVertexArrayRangeNV() ()
void glVertexArrayRangeNV(GLsizei a, const GLvoid * b) (D0, A0)
void glCombinerParameterfvNV(GLenum a, const GLfloat * b) (D0, A0)
void glCombinerParameterfNV(GLenum a, GLfloat b) (D0, D1)
void glCombinerParameterivNV(GLenum a, const GLint * b) (D0, A0)
void glCombinerParameteriNV(GLenum a, GLint b) (D0, D1)
void glCombinerInputNV(GLenum a, GLenum b, GLenum c, GLenum d, GLenum e, GLenum f) (D0, D1, D2, D3, D4, D5)
void glCombinerOutputNV(GLenum a, GLenum b, GLenum c, GLenum d, GLenum e, GLenum f, GLenum g, GLboolean h, GLboolean i, GLboolean j) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glFinalCombinerInputNV(GLenum a, GLenum b, GLenum c, GLenum d) (D0, D1, D2, D3)
void glGetCombinerInputParameterfvNV(GLenum a, GLenum b, GLenum c, GLenum d, GLfloat * e) (D0, D1, D2, D3, A0)
void glGetCombinerInputParameterivNV(GLenum a, GLenum b, GLenum c, GLenum d, GLint * e) (D0, D1, D2, D3, A0)
void glGetCombinerOutputParameterfvNV(GLenum a, GLenum b, GLenum c, GLfloat * d) (D0, D1, D2, A0)
void glGetCombinerOutputParameterivNV(GLenum a, GLenum b, GLenum c, GLint * d) (D0, D1, D2, A0)
void glGetFinalCombinerInputParameterfvNV(GLenum a, GLenum b, GLfloat * c) (D0, D1, A0)
void glGetFinalCombinerInputParameterivNV(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
void glResizeBuffersMESA() ()
void glWindowPos2dMESA(GLdouble a, GLdouble b) (D0, D1)
void glWindowPos2dvMESA(const GLdouble * a) (A0)
void glWindowPos2fMESA(GLfloat a, GLfloat b) (D0, D1)
void glWindowPos2fvMESA(const GLfloat * a) (A0)
void glWindowPos2iMESA(GLint a, GLint b) (D0, D1)
void glWindowPos2ivMESA(const GLint * a) (A0)
void glWindowPos2sMESA(GLshort a, GLshort b) (D0, D1)
void glWindowPos2svMESA(const GLshort * a) (A0)
void glWindowPos3dMESA(GLdouble a, GLdouble b, GLdouble c) (D0, D1, D2)
void glWindowPos3dvMESA(const GLdouble * a) (A0)
void glWindowPos3fMESA(GLfloat a, GLfloat b, GLfloat c) (D0, D1, D2)
void glWindowPos3fvMESA(const GLfloat * a) (A0)
void glWindowPos3iMESA(GLint a, GLint b, GLint c) (D0, D1, D2)
void glWindowPos3ivMESA(const GLint * a) (A0)
void glWindowPos3sMESA(GLshort a, GLshort b, GLshort c) (D0, D1, D2)
void glWindowPos3svMESA(const GLshort * a) (A0)
void glWindowPos4dMESA(GLdouble a, GLdouble b, GLdouble c, GLdouble d) (D0, D1, D2, D3)
void glWindowPos4dvMESA(const GLdouble * a) (A0)
void glWindowPos4fMESA(GLfloat a, GLfloat b, GLfloat c, GLfloat d) (D0, D1, D2, D3)
void glWindowPos4fvMESA(const GLfloat * a) (A0)
void glWindowPos4iMESA(GLint a, GLint b, GLint c, GLint d) (D0, D1, D2, D3)
void glWindowPos4ivMESA(const GLint * a) (A0)
void glWindowPos4sMESA(GLshort a, GLshort b, GLshort c, GLshort d) (D0, D1, D2, D3)
void glWindowPos4svMESA(const GLshort * a) (A0)
GLboolean glAreProgramsResidentNV(GLsizei a, const GLuint * b, GLboolean * c) (D0, A0, A1)
void glBindProgramNV(GLenum a, GLuint b) (D0, D1)
void glDeleteProgramsNV(GLsizei a, const GLuint * b) (D0, A0)
void glExecuteProgramNV(GLenum a, GLuint b, const GLfloat * c) (D0, D1, A0)
void glGenProgramsNV(GLsizei a, GLuint * b) (D0, A0)
void glGetProgramParameterdvNV(GLenum a, GLuint b, GLenum c, GLdouble * d) (D0, D1, D2, A0)
void glGetProgramParameterfvNV(GLenum a, GLuint b, GLenum c, GLfloat * d) (D0, D1, D2, A0)
void glGetProgramivNV(GLuint a, GLenum b, GLint * c) (D0, D1, A0)
void glGetProgramStringNV(GLuint a, GLenum b, GLubyte * c) (D0, D1, A0)
void glGetTrackMatrixivNV(GLenum a, GLuint b, GLenum c, GLint * d) (D0, D1, D2, A0)
void glGetVertexAttribdvNV(GLuint a, GLenum b, GLdouble * c) (D0, D1, A0)
void glGetVertexAttribfvNV(GLuint a, GLenum b, GLfloat * c) (D0, D1, A0)
void glGetVertexAttribivNV(GLuint a, GLenum b, GLint * c) (D0, D1, A0)
void glGetVertexAttribPointervNV(GLuint a, GLenum b, GLvoid *  * c) (D0, D1, A0)
GLboolean glIsProgramNV(GLuint a) (D0)
void glLoadProgramNV(GLenum a, GLuint b, GLsizei c, const GLubyte * d) (D0, D1, D2, A0)
void glProgramParameter4dNV(GLenum a, GLuint b, GLdouble c, GLdouble d, GLdouble e, GLdouble f) (D0, D1, D2, D3, D4, D5)
void glProgramParameter4dvNV(GLenum a, GLuint b, const GLdouble * c) (D0, D1, A0)
void glProgramParameter4fNV(GLenum a, GLuint b, GLfloat c, GLfloat d, GLfloat e, GLfloat f) (D0, D1, D2, D3, D4, D5)
void glProgramParameter4fvNV(GLenum a, GLuint b, const GLfloat * c) (D0, D1, A0)
void glProgramParameters4dvNV(GLenum a, GLuint b, GLuint c, const GLdouble * d) (D0, D1, D2, A0)
void glProgramParameters4fvNV(GLenum a, GLuint b, GLuint c, const GLfloat * d) (D0, D1, D2, A0)
void glRequestResidentProgramsNV(GLsizei a, const GLuint * b) (D0, A0)
void glTrackMatrixNV(GLenum a, GLuint b, GLenum c, GLenum d) (D0, D1, D2, D3)
void glVertexAttribPointerNV(GLuint a, GLint b, GLenum c, GLsizei d, const GLvoid * e) (D0, D1, D2, D3, A0)
void glVertexAttrib1dNV(GLuint a, GLdouble b) (D0, D1)
void glVertexAttrib1dvNV(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib1fNV(GLuint a, GLfloat b) (D0, D1)
void glVertexAttrib1fvNV(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib1sNV(GLuint a, GLshort b) (D0, D1)
void glVertexAttrib1svNV(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib2dNV(GLuint a, GLdouble b, GLdouble c) (D0, D1, D2)
void glVertexAttrib2dvNV(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib2fNV(GLuint a, GLfloat b, GLfloat c) (D0, D1, D2)
void glVertexAttrib2fvNV(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib2sNV(GLuint a, GLshort b, GLshort c) (D0, D1, D2)
void glVertexAttrib2svNV(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib3dNV(GLuint a, GLdouble b, GLdouble c, GLdouble d) (D0, D1, D2, D3)
void glVertexAttrib3dvNV(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib3fNV(GLuint a, GLfloat b, GLfloat c, GLfloat d) (D0, D1, D2, D3)
void glVertexAttrib3fvNV(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib3sNV(GLuint a, GLshort b, GLshort c, GLshort d) (D0, D1, D2, D3)
void glVertexAttrib3svNV(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib4dNV(GLuint a, GLdouble b, GLdouble c, GLdouble d, GLdouble e) (D0, D1, D2, D3, D4)
void glVertexAttrib4dvNV(GLuint a, const GLdouble * b) (D0, A0)
void glVertexAttrib4fNV(GLuint a, GLfloat b, GLfloat c, GLfloat d, GLfloat e) (D0, D1, D2, D3, D4)
void glVertexAttrib4fvNV(GLuint a, const GLfloat * b) (D0, A0)
void glVertexAttrib4sNV(GLuint a, GLshort b, GLshort c, GLshort d, GLshort e) (D0, D1, D2, D3, D4)
void glVertexAttrib4svNV(GLuint a, const GLshort * b) (D0, A0)
void glVertexAttrib4ubNV(GLuint a, GLubyte b, GLubyte c, GLubyte d, GLubyte e) (D0, D1, D2, D3, D4)
void glVertexAttrib4ubvNV(GLuint a, const GLubyte * b) (D0, A0)
void glVertexAttribs1dvNV(GLuint a, GLsizei b, const GLdouble * c) (D0, D1, A0)
void glVertexAttribs1fvNV(GLuint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glVertexAttribs1svNV(GLuint a, GLsizei b, const GLshort * c) (D0, D1, A0)
void glVertexAttribs2dvNV(GLuint a, GLsizei b, const GLdouble * c) (D0, D1, A0)
void glVertexAttribs2fvNV(GLuint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glVertexAttribs2svNV(GLuint a, GLsizei b, const GLshort * c) (D0, D1, A0)
void glVertexAttribs3dvNV(GLuint a, GLsizei b, const GLdouble * c) (D0, D1, A0)
void glVertexAttribs3fvNV(GLuint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glVertexAttribs3svNV(GLuint a, GLsizei b, const GLshort * c) (D0, D1, A0)
void glVertexAttribs4dvNV(GLuint a, GLsizei b, const GLdouble * c) (D0, D1, A0)
void glVertexAttribs4fvNV(GLuint a, GLsizei b, const GLfloat * c) (D0, D1, A0)
void glVertexAttribs4svNV(GLuint a, GLsizei b, const GLshort * c) (D0, D1, A0)
void glVertexAttribs4ubvNV(GLuint a, GLsizei b, const GLubyte * c) (D0, D1, A0)
void glTexBumpParameterivATI(GLenum a, const GLint * b) (D0, A0)
void glTexBumpParameterfvATI(GLenum a, const GLfloat * b) (D0, A0)
void glGetTexBumpParameterivATI(GLenum a, GLint * b) (D0, A0)
void glGetTexBumpParameterfvATI(GLenum a, GLfloat * b) (D0, A0)
GLuint glGenFragmentShadersATI(GLuint a) (D0)
void glBindFragmentShaderATI(GLuint a) (D0)
void glDeleteFragmentShaderATI(GLuint a) (D0)
void glBeginFragmentShaderATI() ()
void glEndFragmentShaderATI() ()
void glPassTexCoordATI(GLuint a, GLuint b, GLenum c) (D0, D1, D2)
void glSampleMapATI(GLuint a, GLuint b, GLenum c) (D0, D1, D2)
void glColorFragmentOp1ATI(GLenum a, GLuint b, GLuint c, GLuint d, GLuint e, GLuint f, GLuint g) (D0, D1, D2, D3, D4, D5, D6)
void glColorFragmentOp2ATI(GLenum a, GLuint b, GLuint c, GLuint d, GLuint e, GLuint f, GLuint g, GLuint h, GLuint i, GLuint j) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1)
void glColorFragmentOp3ATI(GLenum a, GLuint b, GLuint c, GLuint d, GLuint e, GLuint f, GLuint g, GLuint h, GLuint i, GLuint j, GLuint k, GLuint l, GLuint m) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2, A3, A4)
void glAlphaFragmentOp1ATI(GLenum a, GLuint b, GLuint c, GLuint d, GLuint e, GLuint f) (D0, D1, D2, D3, D4, D5)
void glAlphaFragmentOp2ATI(GLenum a, GLuint b, GLuint c, GLuint d, GLuint e, GLuint f, GLuint g, GLuint h, GLuint i) (D0, D1, D2, D3, D4, D5, D6, D7, A0)
void glAlphaFragmentOp3ATI(GLenum a, GLuint b, GLuint c, GLuint d, GLuint e, GLuint f, GLuint g, GLuint h, GLuint i, GLuint j, GLuint k, GLuint l) (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2, A3)
void glSetFragmentShaderConstantATI(GLuint a, const GLfloat * b) (D0, A0)
void glPointParameteriNV(GLenum a, GLint b) (D0, D1)
void glPointParameterivNV(GLenum a, const GLint * b) (D0, A0)
void glDrawBuffersATI(GLsizei a, const GLenum * b) (D0, A0)
void glProgramNamedParameter4fNV(GLuint a, GLsizei b, const GLubyte * c, GLfloat d, GLfloat e, GLfloat f, GLfloat g) (D0, D1, A0, D2, D3, D4, D5)
void glProgramNamedParameter4dNV(GLuint a, GLsizei b, const GLubyte * c, GLdouble d, GLdouble e, GLdouble f, GLdouble g) (D0, D1, A0, D2, D3, D4, D5)
void glProgramNamedParameter4fvNV(GLuint a, GLsizei b, const GLubyte * c, const GLfloat * d) (D0, D1, A0, A1)
void glProgramNamedParameter4dvNV(GLuint a, GLsizei b, const GLubyte * c, const GLdouble * d) (D0, D1, A0, A1)
void glGetProgramNamedParameterfvNV(GLuint a, GLsizei b, const GLubyte * c, GLfloat * d) (D0, D1, A0, A1)
void glGetProgramNamedParameterdvNV(GLuint a, GLsizei b, const GLubyte * c, GLdouble * d) (D0, D1, A0, A1)
GLboolean glIsRenderbufferEXT(GLuint a) (D0)
void glBindRenderbufferEXT(GLenum a, GLuint b) (D0, D1)
void glDeleteRenderbuffersEXT(GLsizei a, const GLuint * b) (D0, A0)
void glGenRenderbuffersEXT(GLsizei a, GLuint * b) (D0, A0)
void glRenderbufferStorageEXT(GLenum a, GLenum b, GLsizei c, GLsizei d) (D0, D1, D2, D3)
void glGetRenderbufferParameterivEXT(GLenum a, GLenum b, GLint * c) (D0, D1, A0)
GLboolean glIsFramebufferEXT(GLuint a) (D0)
void glBindFramebufferEXT(GLenum a, GLuint b) (D0, D1)
void glDeleteFramebuffersEXT(GLsizei a, const GLuint * b) (D0, A0)
void glGenFramebuffersEXT(GLsizei a, GLuint * b) (D0, A0)
GLenum glCheckFramebufferStatusEXT(GLenum a) (D0)
void glFramebufferTexture1DEXT(GLenum a, GLenum b, GLenum c, GLuint d, GLint e) (D0, D1, D2, D3, D4)
void glFramebufferTexture2DEXT(GLenum a, GLenum b, GLenum c, GLuint d, GLint e) (D0, D1, D2, D3, D4)
void glFramebufferTexture3DEXT(GLenum a, GLenum b, GLenum c, GLuint d, GLint e, GLint f) (D0, D1, D2, D3, D4, D5)
void glFramebufferRenderbufferEXT(GLenum a, GLenum b, GLenum c, GLuint d) (D0, D1, D2, D3)
void glGetFramebufferAttachmentParameterivEXT(GLenum a, GLenum b, GLenum c, GLint * d) (D0, D1, D2, A0)
void glGenerateMipmapEXT(GLenum a) (D0)
void glFramebufferTextureLayerEXT(GLenum a, GLenum b, GLuint c, GLint d, GLint e) (D0, D1, D2, D3, D4)
GLvoid* glMapBufferRange(GLenum a, GLintptr b, GLsizeiptr c, GLbitfield d) (D0, D1, D2, D3)
void glFlushMappedBufferRange(GLenum a, GLintptr b, GLsizeiptr c) (D0, D1, D2)
void glBindVertexArray(GLuint a) (D0)
void glDeleteVertexArrays(GLsizei a, const GLuint * b) (D0, A0)
void glGenVertexArrays(GLsizei a, GLuint * b) (D0, A0)
GLboolean glIsVertexArray(GLuint a) (D0)
void glCopyBufferSubData(GLenum a, GLenum b, GLintptr c, GLintptr d, GLsizeiptr e) (D0, D1, D2, D3, D4)
GLsync glFenceSync(GLenum a, GLbitfield b) (D0, D1)
GLboolean glIsSync(GLsync a) (D0)
void glDeleteSync(GLsync a) (D0)
GLenum glClientWaitSync(GLsync a, GLbitfield b, GLuint64 c) (D0, D1, D2)
void glWaitSync(GLsync a, GLbitfield b, GLuint64 c) (D0, D1, D2)
void glGetInteger64v(GLenum a, GLint64 * b) (D0, A0)
void glGetSynciv(GLsync a, GLenum b, GLsizei c, GLsizei * d, GLint * e) (D0, D1, D2, A0, A1)
void glProvokingVertexEXT(GLenum a) (D0)
void glDrawElementsBaseVertex(GLenum a, GLsizei b, GLenum c, const GLvoid * d, GLint e) (D0, D1, D2, A0, D3)
void glDrawRangeElementsBaseVertex(GLenum a, GLuint b, GLuint c, GLsizei d, GLenum e, const GLvoid * f, GLint g) (D0, D1, D2, D3, D4, A0, D5)
void glMultiDrawElementsBaseVertex(GLenum a, const GLsizei * b, GLenum c, const GLvoid *  * d, GLsizei e, const GLint * f) (D0, A0, D1, A1, D2, A2)
void glProvokingVertex(GLenum a) (D0)
void glRenderbufferStorageMultisampleEXT(GLenum a, GLsizei b, GLenum c, GLsizei d, GLsizei e) (D0, D1, D2, D3, D4)
void glColorMaskIndexedEXT(GLuint a, GLboolean b, GLboolean c, GLboolean d, GLboolean e) (D0, D1, D2, D3, D4)
void glGetBooleanIndexedvEXT(GLenum a, GLuint b, GLboolean * c) (D0, D1, A0)
void glGetIntegerIndexedvEXT(GLenum a, GLuint b, GLint * c) (D0, D1, A0)
void glEnableIndexedEXT(GLenum a, GLuint b) (D0, D1)
void glDisableIndexedEXT(GLenum a, GLuint b) (D0, D1)
GLboolean glIsEnabledIndexedEXT(GLenum a, GLuint b) (D0, D1)
void glBeginConditionalRenderNV(GLuint a, GLenum b) (D0, D1)
void glEndConditionalRenderNV() ()
GLenum glObjectPurgeableAPPLE(GLenum a, GLuint b, GLenum c) (D0, D1, D2)
GLenum glObjectUnpurgeableAPPLE(GLenum a, GLuint b, GLenum c) (D0, D1, D2)
void glGetObjectParameterivAPPLE(GLenum a, GLuint b, GLenum c, GLint * d) (D0, D1, D2, A0)
##end functionlist
