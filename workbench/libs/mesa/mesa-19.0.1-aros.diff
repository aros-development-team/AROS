diff -ruN mesa-19.0.1/include/EGL/eglplatform.h mesa-19.0.1.aros/include/EGL/eglplatform.h
--- mesa-19.0.1/include/EGL/eglplatform.h	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/include/EGL/eglplatform.h	2019-04-03 02:29:42.025219800 +0100
@@ -95,6 +95,14 @@
 typedef struct gbm_bo      *EGLNativePixmapType;
 typedef void               *EGLNativeWindowType;
 
+#elif defined(__AROS__)
+
+#include <intuition/intuition.h>
+
+typedef APTR            EGLNativeDisplayType;
+typedef struct Bitmap   *EGLNativePixmapType;
+typedef struct Window   *EGLNativeWindowType;
+
 #elif defined(__ANDROID__) || defined(ANDROID)
 
 struct ANativeWindow;
diff -ruN mesa-19.0.1/include/c11/threads_posix.h mesa-19.0.1.aros/include/c11/threads_posix.h
--- mesa-19.0.1/include/c11/threads_posix.h	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/include/c11/threads_posix.h	2019-04-03 02:30:29.619536500 +0100
@@ -50,6 +50,13 @@
 
 #include <pthread.h>
 
+#if defined(__AROS__)
+#undef VOLATILE
+#undef RESTRICT
+#undef STATIC
+#define pthread_sigmask(a,b,c)  (1)
+#endif
+
 /*---------------------------- macros ----------------------------*/
 #define ONCE_FLAG_INIT PTHREAD_ONCE_INIT
 #ifdef INIT_ONCE_STATIC_INIT
diff -ruN mesa-19.0.1/include/c99_math.h mesa-19.0.1.aros/include/c99_math.h
--- mesa-19.0.1/include/c99_math.h	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/include/c99_math.h	2019-04-03 02:31:40.233582000 +0100
@@ -180,6 +180,8 @@
       return FP_NAN;
    }
 }
+#elif defined(__AROS__)
+#define fpclassify(x) FP_NORMAL
 #else
 #error "Need to include or define an fpclassify function"
 #endif
diff -ruN mesa-19.0.1/src/egl/main/egldisplay.c mesa-19.0.1.aros/src/egl/main/egldisplay.c
--- mesa-19.0.1/src/egl/main/egldisplay.c	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/src/egl/main/egldisplay.c	2019-04-03 02:34:17.877051100 +0100
@@ -67,6 +67,7 @@
    { _EGL_PLATFORM_X11, "x11" },
    { _EGL_PLATFORM_WAYLAND, "wayland" },
    { _EGL_PLATFORM_DRM, "drm" },
+   { _EGL_PLATFORM_AROS, "aros" },
    { _EGL_PLATFORM_ANDROID, "android" },
    { _EGL_PLATFORM_HAIKU, "haiku" },
    { _EGL_PLATFORM_SURFACELESS, "surfaceless" },
diff -ruN mesa-19.0.1/src/egl/main/egldisplay.h mesa-19.0.1.aros/src/egl/main/egldisplay.h
--- mesa-19.0.1/src/egl/main/egldisplay.h	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/src/egl/main/egldisplay.h	2019-04-03 02:34:44.769303500 +0100
@@ -47,6 +47,7 @@
    _EGL_PLATFORM_X11,
    _EGL_PLATFORM_WAYLAND,
    _EGL_PLATFORM_DRM,
+   _EGL_PLATFORM_AROS,
    _EGL_PLATFORM_ANDROID,
    _EGL_PLATFORM_HAIKU,
    _EGL_PLATFORM_SURFACELESS,
diff -ruN mesa-19.0.1/src/gallium/auxiliary/driver_ddebug/dd_util.h mesa-19.0.1.aros/src/gallium/auxiliary/driver_ddebug/dd_util.h
--- mesa-19.0.1/src/gallium/auxiliary/driver_ddebug/dd_util.h	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/src/gallium/auxiliary/driver_ddebug/dd_util.h	2019-04-03 03:06:34.658627100 +0100
@@ -38,7 +38,7 @@
 #include "util/u_string.h"
 
 #include "pipe/p_config.h"
-#if defined(PIPE_OS_UNIX)
+#if defined(PIPE_OS_UNIX) || defined(PIPE_OS_AROS)
 #include <unistd.h>
 #include <sys/stat.h>
 #elif defined(PIPE_OS_WINDOWS)
diff -ruN mesa-19.0.1/src/gallium/include/pipe/p_config.h mesa-19.0.1.aros/src/gallium/include/pipe/p_config.h
--- mesa-19.0.1/src/gallium/include/pipe/p_config.h	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/src/gallium/include/pipe/p_config.h	2019-04-03 02:07:01.103290700 +0100
@@ -122,6 +122,10 @@
 #define PIPE_ARCH_AARCH64
 #endif
 
+#if defined(__mc68000__)
+#define PIPE_ARCH_M68K
+#endif
+
 /*
  * Endian detection.
  */
@@ -131,7 +135,7 @@
 
 #if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64) || defined(PIPE_ARCH_ARM) || defined(PIPE_ARCH_AARCH64)
 #define PIPE_ARCH_LITTLE_ENDIAN
-#elif defined(PIPE_ARCH_PPC) || defined(PIPE_ARCH_PPC_64) || defined(PIPE_ARCH_S390)
+#elif defined(PIPE_ARCH_M68K) || defined(PIPE_ARCH_PPC) || defined(PIPE_ARCH_PPC_64) || defined(PIPE_ARCH_S390)
 #define PIPE_ARCH_BIG_ENDIAN
 #endif
 
@@ -147,6 +151,10 @@
  * See subsystem below for a more fine-grained distinction.
  */
 
+#if defined(__AROS__)
+#define PIPE_OS_AROS
+#else /* !__AROS__ */
+
 #if defined(__linux__)
 #define PIPE_OS_LINUX
 #define PIPE_OS_UNIX
@@ -231,5 +235,6 @@
 #endif
 #endif /* PIPE_OS_WINDOWS */
 
+#endif /* ! __AROS__ */
 
 #endif /* P_CONFIG_H_ */
diff -ruN mesa-19.0.1/src/mesa/main/compiler.h mesa-19.0.1.aros/src/mesa/main/compiler.h
--- mesa-19.0.1/src/mesa/main/compiler.h	2019-03-27 17:04:24.000000000 +0000
+++ mesa-19.0.1.aros/src/mesa/main/compiler.h	2019-04-03 01:55:19.836278300 +0100
@@ -54,6 +54,8 @@
 #elif defined(__APPLE__)
 #include <CoreFoundation/CFByteOrder.h>
 #define CPU_TO_LE32( x )	CFSwapInt32HostToLittle( x )
+#elif defined(__AROS__)
+#define CPU_TO_LE32( x )    AROS_BE2LONG( x )
 #elif defined(__OpenBSD__)
 #include <sys/types.h>
 #define CPU_TO_LE32( x )	htole32( x )
diff -ruN mesa-19.0.1/src/util/os_misc.c mesa-19.0.1.aros/src/util/os_misc.c
--- mesa-19.0.1/src/util/os_misc.c	2019-03-27 17:04:24.000000000 +0000
+++ mesa-19.0.1.aros/src/util/os_misc.c	2019-04-03 02:43:34.251028000 +0100
@@ -55,6 +55,8 @@
 #  include <kernel/OS.h>
 #elif defined(PIPE_OS_WINDOWS)
 #  include <windows.h>
+#elif defined(PIPE_OS_AROS)
+# include <proto/exec.h>
 #else
 #error unexpected platform in os_sysinfo.c
 #endif
@@ -169,6 +171,9 @@
    ret = GlobalMemoryStatusEx(&status);
    *size = status.ullTotalPhys;
    return (ret == TRUE);
+#elif defined(PIPE_OS_AROS)
+   *size = (uint64_t)AvailMem(MEMF_TOTAL);
+   return true;
 #else
 #error unexpected platform in os_sysinfo.c
    return false;
diff -ruN mesa-19.0.1/src/util/os_misc.h mesa-19.0.1.aros/src/util/os_misc.h
--- mesa-19.0.1/src/util/os_misc.h	2019-03-27 17:04:24.000000000 +0000
+++ mesa-19.0.1.aros/src/util/os_misc.h	2019-04-03 03:32:22.500543200 +0100
@@ -38,7 +38,7 @@
 #include "pipe/p_compiler.h"
 
 
-#if defined(PIPE_OS_UNIX)
+#if defined(PIPE_OS_UNIX) || defined(PIPE_OS_AROS)
 #  include <signal.h> /* for kill() */
 #  include <unistd.h> /* getpid() */
 #endif
diff -ruN mesa-19.0.1/src/util/os_time.c mesa-19.0.1.aros/src/util/os_time.c
--- mesa-19.0.1/src/util/os_time.c	2019-03-27 17:04:24.000000000 +0000
+++ mesa-19.0.1.aros/src/util/os_time.c	2019-04-03 04:51:03.391474300 +0100
@@ -39,7 +39,7 @@
 
 #include "util/u_atomic.h"
 
-#if defined(PIPE_OS_UNIX)
+#if defined(PIPE_OS_UNIX) || defined(PIPE_OS_AROS)
 #  include <unistd.h> /* usleep */
 #  include <time.h> /* timeval */
 #  include <sys/time.h> /* timeval */
@@ -61,7 +61,7 @@
    clock_gettime(CLOCK_MONOTONIC, &tv);
    return tv.tv_nsec + tv.tv_sec*INT64_C(1000000000);
 
-#elif defined(PIPE_OS_UNIX)
+#elif defined(PIPE_OS_UNIX) || defined(PIPE_OS_AROS)
 
    struct timeval tv;
    gettimeofday(&tv, NULL);
@@ -101,7 +101,7 @@
    time.tv_nsec = (usecs % 1000000) * 1000;
    while (clock_nanosleep(CLOCK_MONOTONIC, 0, &time, &time) == EINTR);
 
-#elif defined(PIPE_OS_UNIX)
+#elif defined(PIPE_OS_UNIX) || defined(PIPE_OS_AROS)
    usleep(usecs);
 
 #elif defined(PIPE_SUBSYSTEM_WINDOWS_USER)
diff -ruN mesa-19.0.1/src/mapi/glapi/glapi.h mesa-19.0.1.aros/src/mapi/glapi/glapi.h
--- mesa-19.0.1/src/mapi/glapi/glapi.h	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/src/mapi/glapi/glapi.h	2019-03-27 17:04:23.000000000 +0000
@@ -100,6 +100,11 @@
 # define GET_DISPATCH() _glapi_tls_Dispatch
 # define GET_CURRENT_CONTEXT(C)  struct gl_context *C = (struct gl_context *) _glapi_tls_Context
 
+#elif defined(__AROS__)
+
+#define GET_DISPATCH() _glapi_get_dispatch()
+#define GET_CURRENT_CONTEXT(C)  struct gl_context *C = (struct gl_context *) _glapi_get_context()
+
 #else
 
 _GLAPI_EXPORT extern struct _glapi_table *_glapi_Dispatch;
diff -ruN mesa-19.0.1/src/mapi/u_current.c mesa-19.0.1.aros/src/mapi/u_current.c
--- mesa-19.0.1/src/mapi/u_current.c	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/src/mapi/u_current.c	2019-04-04 17:39:12.930607600 +0100
@@ -106,6 +106,12 @@
 __thread void *u_current_context
     __attribute__((tls_model("initial-exec")));
 
+#elif defined(__AROS__)
+#include "tls.h"
+
+DECLARE_STATIC_TLS(u_current_table);
+DECLARE_STATIC_TLS(u_current_context);
+
 #else
 
 struct _glapi_table *u_current_table =
@@ -123,14 +129,14 @@
 void
 u_current_destroy(void)
 {
-#if !defined(GLX_USE_TLS)
+#if !defined(GLX_USE_TLS) && !defined(__AROS__)
    tss_delete(u_current_table_tsd);
    tss_delete(u_current_context_tsd);
 #endif
 }
 
 
-#if !defined(GLX_USE_TLS)
+#if !defined(GLX_USE_TLS) && !defined(__AROS__)
 
 static void
 u_current_init_tsd(void)
@@ -232,6 +238,8 @@
 
 #if defined(GLX_USE_TLS)
    u_current_context = (void *) ptr;
+#elif defined(__AROS__)
+   InsertIntoTLS(u_current_context, (APTR)ptr);
 #else
    tss_set(u_current_context_tsd, (void *) ptr);
    u_current_context = (ThreadSafe) ? NULL : (void *) ptr;
@@ -248,6 +256,8 @@
 {
 #if defined(GLX_USE_TLS)
    return u_current_context;
+#elif defined(__AROS__)
+   return GetFromTLS(u_current_context);
 #else
    return ThreadSafe ? tss_get(u_current_context_tsd) : u_current_context;
 #endif
@@ -270,6 +280,8 @@
 
 #if defined(GLX_USE_TLS)
    u_current_table = (struct _glapi_table *) tbl;
+#elif defined(__AROS__)
+   InsertIntoTLS(u_current_table, (APTR)tbl);
 #else
    tss_set(u_current_table_tsd, (void *) tbl);
    u_current_table = (ThreadSafe) ? NULL : (void *) tbl;
@@ -284,6 +296,12 @@
 {
 #if defined(GLX_USE_TLS)
    return u_current_table;
+#elif defined(__AROS__)
+   struct _glapi_table *tbl;
+   tbl = (struct _glapi_table *)GetFromTLS(u_current_table);
+   if (tbl == NULL)
+       tbl = (struct _glapi_table *) table_noop_array;
+   return tbl;
 #else
    if (ThreadSafe)
       return (struct _glapi_table *) tss_get(u_current_table_tsd);
diff -ruN mesa-19.0.1/src/mapi/u_current.h mesa-19.0.1.aros/src/mapi/u_current.h
--- mesa-19.0.1/src/mapi/u_current.h	2019-03-27 17:04:23.000000000 +0000
+++ mesa-19.0.1.aros/src/mapi/u_current.h	2019-04-04 17:41:11.185741700 +0100
@@ -34,6 +34,7 @@
 
 extern __thread void *u_current_context
     __attribute__((tls_model("initial-exec")));
+#elif defined(__AROS__)
 
 #else /* GLX_USE_TLS */
 
@@ -67,6 +68,8 @@
 {
 #ifdef GLX_USE_TLS
    return u_current_table;
+#elif defined(__AROS__)
+    return u_current_get_table_internal();
 #else
    return (likely(u_current_table) ?
          u_current_table : u_current_get_table_internal());
@@ -78,6 +81,8 @@
 {
 #ifdef GLX_USE_TLS
    return u_current_context;
+#elif defined(__AROS__)
+    return u_current_get_context_internal();
 #else
    return likely(u_current_context) ? u_current_context : u_current_get_context_internal();
 #endif
