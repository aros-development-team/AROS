#   $Id$
include $(TOP)/config/make.cfg

USER_INCLUDES	:= -I. -I..

ifeq ($(TARGET_ARCH),morphos)
OS_INCLUDES 	:= -I$(AROSDIR)/Include -I/ade/morphos/emulinclude/includegcc -I/ade/morphos/emulinclude/includestd -I/ade/morphos/include
FORCE_DEPLIBS 	:=
FORCE_LIBS 		:= /ade/morphos/lib/libc.a /ade/morphos/lib/libsyscall.a /ade/morphos/lib/libamiga.a
USE_CPAK 		:= no
endif

MODNAME     := gadtools
MODTYPE	    := library

CLASSES	:=  buttonclass textclass sliderclass arrowclass scrollerclass \
	    stringclass listviewclass checkboxclass cycleclass mxclass \
	    paletteclass
		   
FILES	:=  basicfuncs gadgets menus $(CLASSES)
FUNCS	:=  createcontext \
	    creategadgeta \
	    createmenusa \
	    drawbevelboxa \
	    freegadgets \
	    freemenus \
	    freevisualinfo \
	    getvisualinfoa \
	    gt_beginrefresh \
	    gt_endrefresh \
	    gt_filterimsg \
	    gt_getgadgetattrsa \
	    gt_getimsg \
	    gt_postfilterimsg \
	    gt_refreshwindow \
	    gt_replyimsg \
	    gt_setgadgetattrsa \
	    layoutmenuitemsa \
	    layoutmenusa

USE_ROMLIB := yes
USE_AMIGALIB := yes

#MM- workbench-libs-gadtools : setup includes linklibs workbench-libs-gadtools-module
%make_module_setup mmake=workbench-libs-gadtools
%make_module_cpak
%make_module mmake=workbench-libs-gadtools
%make_lib_includes

# (bernie) this hack disables optimization on classes.c to fix a problem in the
# current Amiga version of gcc and egcs. Using inline asm macros to perform
# shared library calls sometimes leads the optimizer to a dead-end situation
# where one of the registers involved in the inline asm macro gets spilled on
# the frame.
#
# stegerg: classes.c file was split into one c file per class. sorry :(
#
#ifeq ($(ARCH),amiga)
#$(OBJDIR)/classes.o : classes.c
#	%compile_q opt="$(filter-out -O%,$(CFLAGS)) -O0"
#endif

%common
%include_deps
