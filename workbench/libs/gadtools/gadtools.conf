##begin config
basename GadTools
libbasetype struct GadToolsBase_intern
seglist_field gt_SegList
version 41.1
##end config

##begin cdef

#include <intuition/intuition.h>
#include <intuition/screens.h>
#include <utility/tagitem.h>
#include <libraries/gadtools.h>

__BEGIN_DECLS

APTR           GetVisualInfo(struct Screen *, Tag, ...);
struct Gadget *CreateGadget(ULONG, struct Gadget *, struct NewGadget *, Tag, ...);
void           DrawBevelBox(struct RastPort *, WORD, WORD, WORD, WORD, Tag, ...);
void           GT_SetGadgetAttrs(struct Gadget *, struct Window *, struct Requester *, Tag, ...);
LONG           GT_GetGadgetAttrs(struct Gadget *, struct Window *, struct Requester *, Tag, ...);
struct Menu *  CreateMenus(struct NewMenu *, Tag, ...);
BOOL           LayoutMenus(struct Menu *, APTR, Tag, ...);

__END_DECLS

##end cdef

##begin cdefprivate
#include "gadtools_intern.h"
##end cdefprivate

##begin functionlist
.version 36
struct Gadget *CreateGadgetA(ULONG kind, struct Gadget *previous, struct NewGadget *ng, struct TagItem *taglist) (D0, A0, A1, A2)
void FreeGadgets(struct Gadget *glist) (A0)
void GT_SetGadgetAttrsA(struct Gadget *gad, struct Window *win, struct Requester *req, struct TagItem *tagList) (A0, A1, A2, A3)
struct Menu *CreateMenusA(struct NewMenu *newmenu, struct TagItem *tagList) (A0, A1)
void FreeMenus(struct Menu *menu) (A0)
BOOL LayoutMenuItemsA(struct MenuItem *menuitem, APTR vi, struct TagItem *tagList) (A0, A1, A2)
BOOL LayoutMenusA(struct Menu *menu, APTR vi, struct TagItem *tagList) (A0, A1, A2)
struct IntuiMessage *GT_GetIMsg(struct MsgPort *intuiport) (A0)
void GT_ReplyIMsg(struct IntuiMessage *imsg) (A1)
void GT_RefreshWindow(struct Window *win, struct Requester *req) (A0, A1)
void GT_BeginRefresh(struct Window *win) (A0)
void GT_EndRefresh(struct Window *win, BOOL complete) (A0, D0)
struct IntuiMessage *GT_FilterIMsg(struct IntuiMessage *imsg) (A1)
struct IntuiMessage *GT_PostFilterIMsg(struct IntuiMessage *modimsg) (A1)
struct Gadget *CreateContext(struct Gadget **glistpointer) (A0)
void DrawBevelBoxA(struct RastPort *rport, WORD left, WORD top, WORD width, WORD height, struct TagItem *taglist) (A0, D0, D1, D2, D3, A1)
APTR GetVisualInfoA(struct Screen *screen, struct TagItem *tagList) (A0, A1)
void FreeVisualInfo(APTR vi) (A0)
.skip 6
.version 39
LONG GT_GetGadgetAttrsA(struct Gadget *gad, struct Window *win, struct Requester *req, struct TagItem *taglist) (A0, A1, A2, A3)
##end functionlist

##begin class
##begin config
basename GTButton
type gadget
superclass FRBUTTONCLASS
options private
classptr_field buttonclass
classdatatype struct ButtonData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
OM_GET
GM_RENDER
##end methodlist
##end class

##begin class
##begin config
basename GTText
type gadget
classptr_field textclass
options private
classdatatype struct TextData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
.alias OM_UPDATE
OM_GET
GM_RENDER
GM_GOACTIVE
##end methodlist
##end class

##begin class
##begin config
basename GTSlider
type gadget
superclass PROPGCLASS
options private
classptr_field sliderclass
classdatatype struct SliderData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
OM_GET
GM_GOACTIVE
GM_HANDLEINPUT
GM_RENDER
##end methodlist
##end class

##begin class
##begin config
basename GTScroller
type gadget
superclass PROPGCLASS
options private
classptr_field scrollerclass
classdatatype struct ScrollerData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
.alias OM_UPDATE
OM_GET
GM_RENDER
##end methodlist
##end class

##begin class
##begin config
basename GTArrow
type gadget
superclass FRBUTTONCLASS
options private
classptr_field arrowclass
classdatatype struct ArrowData
##end config

##begin methodlist
OM_NEW
OM_GET
OM_DISPOSE
##end methodlist
##end class

##begin class
##begin config
basename GTString
type gadget
superclass STRGCLASS
options private
classptr_field stringclass
classdatatype struct StringData
##end config

##begin methodlist
OM_NEW
.alias OM_SET
OM_GET
OM_DISPOSE
GM_RENDER
##end methodlist
##end class

##begin class
##begin config
basename GTListView
type gadget
options private
classptr_field listviewclass
classdatatype struct LVData
##end config

##begin methodlist
OM_NEW
OM_SET
.alias OM_UPDATE
OM_GET
OM_DISPOSE
GM_RENDER
GM_HANDLEINPUT
.alias GM_GOACTIVE
GM_GOINACTIVE
##end methodlist
##end class

##begin class
##begin config
basename GTCheckBox
type gadget
options private
classptr_field checkboxclass
classdatatype struct CheckBoxData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
.alias OM_UPDATE
OM_GET
GM_RENDER
GM_GOACTIVE
GM_HANDLEINPUT
GM_GOINACTIVE
##end methodlist
##end class

##begin class
##begin config
basename GTCycle
type gadget
options private
classptr_field cycleclass
classdatatype struct CycleData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
.alias OM_UPDATE
OM_GET
GM_RENDER
GM_HITTEST
GM_GOACTIVE
GM_HANDLEINPUT
GM_GOINACTIVE
##end methodlist
##end class

##begin class
##begin config
basename GTMX
type gadget
options private
classptr_field mxclass
classdatatype struct MXData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
.alias OM_UPDATE
OM_GET
GM_RENDER
GM_GOACTIVE
##end methodlist
##end class

##begin class
##begin config
basename GTPalette
type gadget
options private
classptr_field paletteclass
classdatatype struct PaletteData
##end config

##begin methodlist
OM_NEW
OM_DISPOSE
OM_SET
.alias OM_UPDATE
OM_GET
GM_LAYOUT
GM_RENDER
GM_HITTEST
GM_GOACTIVE
GM_HANDLEINPUT
##end methodlist
##end class
