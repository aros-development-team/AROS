;
; $VER: Install 1.3 (21.5.2012)
;
; $Id: Install 296 2014-04-04 22:15:13Z damato $
;
; History:
;
;   1.0   10.06.2010: initial release
;   1.1   11.06.2010: extended the final message that a reboot might be
;                     necessary to be able to use the just installed version.
;   1.2   06.10.2010: changed the default destination path for libs depending
;                     on the detected system
;   1.3   21.05.2012: fixed the wrong selection of the builtin language.
;----------------------------------------------------------------------------
; /// default language detection
(set #i 0)
(while (<> @language (select #i "deutsch" @language))
    (set #i (+ #i 1))
)
(if (= #i 1) ; LANGUAGE
    (set #language "english")
    (set #language @language)
)

;----------------------------------------------------------------------------
; /// ***** English
(if (= #language "english")
    (
        (set #acknowledgeOS (cat "Please acknowledge the automatic\n"
                                 "detection of your operating system:"))
        (set #done          (cat "\n"
                                 @app-name " has been successfully installed.\n"
                                 "\n"
                                 "A reboot might be necessary to\n"
                                 "finish this installation!"))
    )
)

; ///
; /// ***** Deutsch
(if (= #language "deutsch")
    (
        (set #acknowledgeOS (cat "Bitte bestätigen Sie die automatische\n"
                                 "Ermittlung Ihres Betriebssystems:"))
        (set #done          (cat "\n"
                                 @app-name " wurde erfolgreich installiert.\n"
                                 "\n"
                                 "Gegebenenfalls ist ein Neustart des Systems\n"
                                 "nötig, um die Installation abzuschließen!"))
    )
)
; ///

;----------------------------------------------------------------------------
; /// Checking environment
(set EXEC_ver (getversion "exec.library" (resident)))
(set NEWLIB_ver (getversion "newlib.library" (resident)))
(set AROS_ver (getversion "aros.library" (resident)))

; we use newlib.library to check whether we are running on AmigaOS 4.x
(if (>= NEWLIB_ver (* 4 65536))
    (set #detectedSystem 1)
    (
        ; we are not running on AmigaOS 4.x
        (if (>= AROS_ver (* 40 65536))
            (set #detectedSystem 3)
            (
                ; we are not running on AROS
                ; now check if we are running on MorphOS (exec.library V50+) or on AmigaOS 3.x
                (if (>= EXEC_ver (* 50 65536))
                    (set #detectedSystem 2)
                    (set #detectedSystem 0)
                )
            )
        )
    )
)

(set #detectedSystem
    (askchoice
        (prompt #acknowledgeOS)
        (help @askchoice-help)
        (choices "AmigaOS 3.x"
                 "AmigaOS 4.x"
                 "MorphOS 1.x/2.x/3.x"
                 "AROS i386"
                 "AROS PPC"
                 "AROS x86_64"
        )
        (default #detectedSystem)
    )
)
; finally convert the system number into a string for easier understanding
(set #detectedSystem
    (select #detectedSystem "os3" "os4" "mos" "aros-i386" "aros-ppc" "aros-x86_64")
)

; set up the source and destination path
(if (= #detectedSystem "os3")
    (set #LIB_source "Libs/AmigaOS3")
    (set #LIB_dest "LIBS:")
)
(if (= #detectedSystem "os4")
    (set #LIB_source "Libs/AmigaOS4")
    (set #LIB_dest "LIBS:")
)
(if (= #detectedSystem "mos")
    (set #LIB_source "Libs/MorphOS")
    (set #LIB_dest "SYS:Libs")
)
(if (= #detectedSystem "aros-i386")
    (set #LIB_source "Libs/AROS-i386")
    (set #LIB_dest "LIBS:")
)
(if (= #detectedSystem "aros-ppc")
    (set #LIB_source "Libs/AROS-ppc")
    (set #LIB_dest "LIBS:")
)
(if (= #detectedSystem "aros-x86_64")
    (set #LIB_source "Libs/AROS-x86_64")
    (set #LIB_dest "LIBS:")
)

; ///

; /// Here we go!
(complete 33)

; copy the .library files
(foreach #LIB_source "#?.library"
    (copylib
        (prompt @each-name)
        (source (tackon #LIB_source @each-name))
        (dest #LIB_dest)
        (confirm)
        (help @copylib-help)
    )
)

(complete 66)

; copy the charset files
(makedir (tackon #LIB_dest "Charsets"))
(foreach "Charsets" "#?.txt"
    (copyfiles
        (source (tackon "Charsets" @each-name))
        (dest (tackon #LIB_dest "Charsets"))
        (help @copyfiles-help)
    )
)

(complete 100)

(message #done)

; /// ********************
;----------------------------------------------------------------------------
(exit (QUIET))
