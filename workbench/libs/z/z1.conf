##begin config
basename Z1
version 1.1
date 15.9.2014
copyright Copyright (C) 1995-2012 Mark Adler, Jean-loup Gailly, 2012-2014 The AROS Development Team
options pertaskbase
rellib posixc
rellib stdc
forcebase PosixCBase
##end config

##begin cdef
#include <stdarg.h>
#include <zlib.h>
typedef unsigned (*blast_in)(void *how, unsigned char **buf);
typedef int (*blast_out)(void *how, unsigned char *buf, unsigned len);
##end cdef

##begin functionlist
const char *zlibVersion()
int deflateInit_(z_streamp strm, int level, const char *version, int stream_size)
int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
int deflate(z_streamp strm, int flush)
int deflateEnd(z_streamp strm)
int deflateSetDictionary(z_streamp strm, const Bytef *dictionary, uInt dictLength)
int deflateCopy(z_streamp dest, z_streamp source)
int deflateReset(z_streamp strm)
int deflateParams(z_streamp strm, int level, int strategy)
int inflateInit_(z_streamp strm, const char * version, int stream_size)
int inflateInit2_(z_streamp strm, int windowBits, const char * version, int stream_size)
int inflate(z_streamp strm, int flush)
int inflateEnd(z_streamp strm)
int inflateSetDictionary(z_streamp strm, const Bytef *dictionary, uInt dictLength)
int inflateSync(z_streamp strm)
int inflateReset(z_streamp strm)
int compress(Bytef * dest, uLongf * destLen, const Bytef *source, uLong sourceLen)
int compress2(Bytef * dest, uLongf * destLen, const Bytef *source, uLong sourceLen, int level)
int uncompress(Bytef * dest, uLongf * destLen, const Bytef *source, uLong sourceLen)
uLong adler32(uLong adler, const Bytef *buf, uInt len)
uLong crc32(uLong crc, const Bytef *buf, uInt len)
const char * zError(int err)
int inflateSyncPoint(z_streamp strm)
const z_crc_t *get_crc_table()
int inflateCopy(z_streamp dest, z_streamp source)
int inflateBackInit_(z_streamp strm, int windowBits, unsigned char * window, const char * version, int stream_size)
int inflateBack(z_streamp strm, in_func in, void * in_desc, out_func out, void * out_desc)
int inflateBackEnd(z_streamp strm)
uLong deflateBound(z_streamp strm, uLong sourceLen)
int deflatePrime(z_streamp strm, int bits, int value)
uLong compressBound(uLong sourceLen)
uLong zlibCompileFlags()
int blast(blast_in infun, void * inhow, blast_out outfun, void * outhow)
int inflateBack9(z_streamp strm, in_func in, void * in_desc, out_func out, void * out_desc)
int inflateBack9End(z_streamp strm)
int inflateBack9Init_(z_streamp strm, unsigned char * window, const char * version, int stream_size)
int deflateTune(z_streamp strm, int good_length, int max_lazy, int nice_length,	int max_chain)
int deflateSetHeader(z_streamp strm, gz_headerp head)
int inflatePrime(z_streamp strm, int bits, int value)
int inflateGetHeader(z_streamp strm, gz_headerp head)
uLong adler32_combine(uLong adler1, uLong adler2, z_off_t len2)
uLong crc32_combine(uLong crc1, uLong crc2, z_off_t len2)
int inflateReset2(z_streamp strm, int windowBits)
long inflateMark(z_streamp strm)
uLong adler32_combine64(uLong adler1, uLong adler2, z_off64_t len2)
uLong crc32_combine64(uLong crc2, uLong d0arg, z_off64_t len2)
int inflateUndermine(z_streamp strm, int subvert)
.skip 17
gzFile gzopen(const char *path, const char *mode)
int gzclose(gzFile file)
int gzclose_r(gzFile file)
int gzclose_w(gzFile file)
int gzbuffer(gzFile file, unsigned size)
void gzclearerr(gzFile file)
int gzdirect(gzFile file)
int gzeof(gzFile file)
const char * gzerror(gzFile file, int *errnum)
int gzflush(gzFile file, int flush)
int gzgetc_(gzFile file)
char * gzgets(gzFile file, char *buf, int len)
z_off_t gzoffset(gzFile file)
int gzputc(gzFile file, int c)
int gzputs(gzFile file, const char *str)
int gzread(gzFile file, voidp buf, unsigned len)
int gzrewind(gzFile file)
z_off_t gzseek(gzFile file, z_off_t offset, int whence)
int gzsetparams(gzFile file, int level, int strategy)
z_off_t gztell(gzFile file)
int gzungetc(int c, gzFile file)
int gzvprintf(gzFile file, const char *format, va_list args)
int gzwrite(gzFile file, voidpc buf, unsigned len)
gzFile gzdopen(int fd, const char *mode)
##end functionlist
