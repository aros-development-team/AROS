##begin config
libbase CxBase
libbasetype struct CommoditiesBase
version 50.2
##end config
##begin cdef
#include <exec/types.h>
#include <exec/nodes.h>
#include <devices/inputevent.h>
#include <devices/keymap.h>
#include <libraries/commodities.h>
##end cdef
##begin cdefprivate
#include "cxintern.h"
##end cdefprivate
##begin functionlist
.version 36
CxObj *CreateCxObj(ULONG type, IPTR arg1, IPTR arg2) (D0, A0, A1)
CxObj *CxBroker(struct NewBroker *nb, LONG *error) (A0, D0)
LONG ActivateCxObj(CxObj *co, LONG true) (A0, D0)
void DeleteCxObj(CxObj *co) (A0)
void DeleteCxObjAll(CxObj *co) (A0)
ULONG CxObjType(CxObj *co) (A0)
LONG CxObjError(CxObj *co) (A0)
void ClearCxObjError(CxObj *co) (A0)
LONG SetCxObjPri(CxObj *co, LONG pri) (A0, D0)
void AttachCxObj(CxObj *headObj, CxObj *co) (A0, A1)
void EnqueueCxObj(CxObj *headObj, CxObj *co) (A0, A1)
void InsertCxObj(CxObj *headObj, CxObj *co, CxObj *pred) (A0, A1, A2)
void RemoveCxObj(CxObj *co) (A0)

void SetTranslate(CxObj *translator, struct InputEvent *events) (A0, A1)
void SetFilter(CxObj *filter, STRPTR text) (A0, A1)
void SetFilterIX(CxObj *filter, IX *ix) (A0, A1)
LONG ParseIX(CONST_STRPTR desc, IX *ix) (A0, A1)
ULONG CxMsgType(CxMsg *cxm) (A0)
APTR CxMsgData(CxMsg *cxm) (A0)
LONG CxMsgID(CxMsg *cxm) (A0)
void DivertCxMsg(CxMsg *cxm, CxObj *headObj, CxObj *returnObj) (A0, A1, A2)
void RouteCxMsg(CxMsg *cxm, CxObj *co) (A0, A1)
void DisposeCxMsg(CxMsg *cxm) (A0)
BOOL InvertKeyMap(ULONG ansiCode, struct InputEvent *event, struct KeyMap *km) (D0, A0, A1)
void AddIEvents(struct InputEvent *events) (A0)
LONG CopyBrokerList(struct List *CopyofList) (A0)
void FreeBrokerList(struct List *brokerList) (A0)
ULONG BrokerCommand(STRPTR name, ULONG command) (A0, D0)
BOOL MatchIX(struct InputEvent *event, IX *ix) (A0, A1)
##end functionlist
