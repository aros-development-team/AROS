# $Id$
include $(TOP)/config/make.cfg

#MM- workbench-devs-diskimage : workbench-devs-diskimage-expat workbench-devs-diskimage-bz2 \
#MM  workbench-devs-diskimage-z workbench-devs-diskimage-prefs workbench-devs-diskimage-device \
#MM  workbench-devs-diskimage-gui workbench-devs-diskimage-mountdiskimage workbench-devs-diskimage-mounthdf \
#MM  workbench-devs-diskimage-plugins

#MM- workbench-devs-diskimage-clean : workbench-devs-diskimage-support-clean workbench-devs-diskimage-expat-clean \
#MM  workbench-devs-diskimage-bz2-clean workbench-devs-diskimage-z-clean workbench-devs-diskimage-prefs-clean \
#MM  workbench-devs-diskimage-device-clean workbench-devs-diskimage-gui-clean workbench-devs-diskimage-mountdiskimage-clean \
#MM  workbench-devs-diskimage-mounthdf-clean workbench-devs-diskimage-plugins-clean

BASE_CFLAGS := -DABIV1 -DMIN_OS_VERSION=39
BASE_INCLUDES := -I$(SRCDIR)/$(CURDIR)/include -I$(SRCDIR)/$(CURDIR)/include/aros
BASE_LDFLAGS := -L$(GENDIR)/$(CURDIR)

# ----------------------------------------------------------------------------------------

#MM workbench-devs-diskimage-support : includes

CFILES := support/aros/asprintf support/aros/asprintfpooled support/checkbptr \
	support/checklib support/copystringbstrtoc support/deletelibrary support/dos64 \
	support/envvar support/getcurrentdir support/hooks support/lists support/messages \
	support/mutexes support/paths support/ports support/semaphores support/strlcpy \
	support/swab2 support/tooltypes support/istext support/trimstr support/diskimagedevice \
	support/localeinfo support/translatefuncs support/reallocbuf support/setprocwindow

USER_CFLAGS := $(BASE_CFLAGS)
USER_INCLUDES := $(BASE_INCLUDES)

%build_linklib mmake=workbench-devs-diskimage-support libname=support \
  files=$(CFILES) libdir=$(GENDIR)/$(CURDIR)

# ----------------------------------------------------------------------------------------

#MM workbench-devs-diskimage-prefs : includes

CFILES := prefs/prefs prefs/readprefs prefs/writeprefs
USER_CFLAGS := $(BASE_CFLAGS)
USER_INCLUDES := $(BASE_INCLUDES)

%build_linklib mmake=workbench-devs-diskimage-prefs libname=prefs \
  files=$(CFILES) libdir=$(GENDIR)/$(CURDIR)

# ----------------------------------------------------------------------------------------

#MM workbench-devs-diskimage-device : includes linklibs workbench-devs-diskimage-support workbench-devs-diskimage-device-catalogs

CFILES := device/init device/io device/unit device/scsicmd \
	device/locale device/plugins device/tempfile device/progress device/password \
	device/main_vectors device/plugin_vectors plugins/generic plugins/adf plugins/d64 \
	plugins/iso

USER_CFLAGS := $(BASE_CFLAGS) -DDEVICE
USER_INCLUDES := $(BASE_INCLUDES) -I$(SRCDIR)/$(CURDIR)/device/include
USER_LDFLAGS := $(BASE_LDFLAGS)

%build_module_simple mmake=workbench-devs-diskimage-device modname=diskimage modtype=device \
    files=$(CFILES) uselibs="support prefs rom"

# ----------------------------------------------------------------------------------------

TARGETDIR := $(AROS_CATALOGS)

#MM
workbench-devs-diskimage-device-catalogs : \
    $(TARGETDIR)/deutsch/diskimagedevice.catalog

$(TARGETDIR)/deutsch/diskimagedevice.catalog: $(SRCDIR)/$(CURDIR)/device/catalogs/diskimagedevice_deutsch.ct
	@$(MKDIR) $(TARGETDIR)/deutsch
	@$(FLEXCAT) $(SRCDIR)/$(CURDIR)/device/catalogs/diskimagedevice.cd $< CATALOG $@

# ----------------------------------------------------------------------------------------

USER_CFLAGS := $(BASE_CFLAGS) -DCATCOMP_NUMBERS -D__NOLIBBASE__ -DUSE_FLAC -DUSE_MPG123 -DUSE_VORBIS -DUSE_WAVPACK
USER_INCLUDES := $(BASE_INCLUDES)
USER_LDFLAGS := $(BASE_LDFLAGS)
TARGETDIR := $(AROS_DEVS)/DiskImage

#MM workbench-devs-diskimage-plugins : \
#MM   workbench-devs-diskimage-ccd \
#MM   workbench-devs-diskimage-ciso \
#MM   workbench-devs-diskimage-cpc \
#MM   workbench-devs-diskimage-cue \
#MM   workbench-devs-diskimage-daa \
#MM   workbench-devs-diskimage-dax \
#MM   workbench-devs-diskimage-dmg \
#MM   workbench-devs-diskimage-dms \
#MM   workbench-devs-diskimage-gi \
#MM   workbench-devs-diskimage-mds \
#MM   workbench-devs-diskimage-nrg \
#MM   workbench-devs-diskimage-uif

# FID has GPL license, so we don't build it by default
# #MM   workbench-devs-diskimage-fdi 

#MM workbench-devs-diskimage-ccd : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-ciso : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-cpc : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-cue : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-daa : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-dax : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-dmg : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-dms : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-fdi : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-gi  : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-mds : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-nrg : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-uif : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-xad : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support
#MM workbench-devs-diskimage-xpk : includes linklibs workbench-devs-diskimage-device workbench-devs-diskimage-support


%build_prog mmake=workbench-devs-diskimage-ccd progname=CCD files="plugins/ccd" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-ciso progname=CISO files="plugins/ciso" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-cpc progname=CPC files="plugins/cpc" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

CFILES := plugins/cue/cue plugins/cue/flac plugins/cue/wavpack audio/aiff audio/flac \
	audio/mp3_mpg123 audio/vorbis audio/wave audio/wavpack plugins/cue/malloc \
	plugins/cue/fdio plugins/cue/string plugins/cue/stdio plugins/cue/select

%build_prog mmake=workbench-devs-diskimage-cue progname=CUE files=$(CFILES) \
    targetdir=$(TARGETDIR) uselibs="mpg123 FLAC wavpack vorbisfile vorbis ogg m support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-daa progname=DAA files="plugins/daa" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-dax progname=DAX files="plugins/dax" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

CFILES := plugins/dmg/dmg plugins/dmg/base64 plugins/dmg/adc

%build_prog mmake=workbench-devs-diskimage-dmg progname=DMG files=$(CFILES) \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

CFILES := dms/crc_csum dms/getbits dms/tables dms/maketbl dms/u_init \
	dms/u_deep dms/u_heavy dms/u_medium dms/u_quick dms/u_rle

%build_prog mmake=workbench-devs-diskimage-dms progname=DMS files=$(CFILES) \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-fdi progname=FDI files="plugins/fdi/fdi plugins/fdi/fdi2raw" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-gi progname=GI files="plugins/gi" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-mds progname=MDS files="plugins/mds" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-nrg progname=NRG files="plugins/nrg" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-uif progname=UIF files="plugins/uif" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-xad progname=XAD files="plugins/xad" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

%build_prog mmake=workbench-devs-diskimage-xpk progname=XPK files="plugins/xpk" \
    targetdir=$(TARGETDIR) uselibs="support rom" usestartup=no

# ----------------------------------------------------------------------------------------

#MM workbench-devs-diskimage-mountdiskimage : includes linklibs workbench-devs-diskimage-support

#MM workbench-devs-diskimage-mounthdf : includes linklibs workbench-devs-diskimage-support

USER_CFLAGS := $(BASE_CFLAGS)
USER_INCLUDES := $(BASE_INCLUDES)
USER_LDFLAGS := $(BASE_LDFLAGS)

%build_prog mmake=workbench-devs-diskimage-mountdiskimage progname=MountDiskImage files="cmd/mountdiskimage" \
    targetdir=$(AROS_C) uselibs="amiga mui support"

%build_prog mmake=workbench-devs-diskimage-mounthdf progname=MountHDF files="cmd/mounthdf" \
    targetdir=$(AROS_C) uselibs="amiga mui support"

# ----------------------------------------------------------------------------------------

#MM workbench-devs-diskimage-gui : includes linklibs workbench-devs-diskimage-support \
#MM workbench-devs-diskimage-gui-catalogs

CFILES := zune_gui/locale zune_gui/main zune_gui/gui zune_gui/drivelist \
	zune_gui/pluginlist zune_gui/driveops zune_gui/requesters zune_gui/images

USER_CFLAGS := $(BASE_CFLAGS) -DGUI -DCATCOMP_NUMBERS
USER_INCLUDES := -I$(SRCDIR)/$(CURDIR)/zune_gui/include $(BASE_INCLUDES)
USER_LDFLAGS := $(BASE_LDFLAGS)

%build_prog mmake=workbench-devs-diskimage-gui progname=DiskImageGUI files=$(CFILES) \
    targetdir=$(AROS_SYSTEM) uselibs="amiga mui support"

# ----------------------------------------------------------------------------------------

TARGETDIR := $(AROS_CATALOGS)

#MM
workbench-devs-diskimage-gui-catalogs : \
    $(TARGETDIR)/deutsch/diskimagegui.catalog

$(TARGETDIR)/deutsch/diskimagegui.catalog: $(SRCDIR)/$(CURDIR)/zune_gui/catalogs/diskimagegui_deutsch.ct
	@$(MKDIR) $(TARGETDIR)/deutsch
	@$(FLEXCAT) $(SRCDIR)/$(CURDIR)/zune_gui/catalogs/diskimagegui.cd $< CATALOG $@

%common
