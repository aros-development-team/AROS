/* Mountlist entry for the data killer (just a handler) */
NIL:
	FileSystem	= nil.handler
#

/* Mountlist entry for the unlimited source of NUL bytes (just a handler) */
ZERO:
	FileSystem	= zero.handler
#

/* Entry for the variable sized ramdisk (just a handler) */
RAM:
	FileSystem	= ram.handler
#

ROOT:
	FileSystem	= rootfs.handler
#

PIPEFS:
	FileSystem	= pipefs.handler
#

/* Entry for a file mounted as filesystem AFD0: */
AFD0:
	FileSystem	= afs.handler
	Device		= fdsk.device
	Unit		= 0
	BlockSize	= 512
	Surfaces	= 2
	BlocksPerTrack	= 11
	LowCyl		= 0
	HighCyl		= 79
	Reserved	= 2
#

/* Entry for a file mounted as filesystem AFD1: */
AFD1:
	FileSystem	= afs.handler
	Device		= fdsk.device
	Unit		= 1
	BlockSize	= 512
	Surfaces	= 2
	BlocksPerTrack	= 11
	LowCyl		= 0
	HighCyl		= 79
	Reserved	= 2
#

/* Entry for a file mounted as filesystem AFD2: */
AFD2:
	FileSystem	= afs.handler
	Device		= fdsk.device
	Unit		= 2
	BlockSize	= 512
	Surfaces	= 2
	BlocksPerTrack	= 11
	LowCyl		= 0
	HighCyl		= 79
	Reserved	= 2
#

/* Entry for a file mounted as filesystem AFD3: */
AFD3:
	FileSystem	= afs.handler
	Device		= fdsk.device
	Unit		= 3
	BlockSize	= 512
	Surfaces	= 2
	BlocksPerTrack	= 11
	LowCyl		= 0
	HighCyl		= 79
	Reserved	= 2
#

/* Entry for a ramdrive disk */
RAD:
	FileSystem	= afs.handler
	Device		= ramdrive.device
	Unit		= 0
	BlockSize	= 512
	Surfaces	= 2
	BlocksPerTrack	= 11
	LowCyl		= 0
	HighCyl		= 79
	Reserved	= 2
#

/* Entry for a ramdrive disk */
RAD2:
	FileSystem	= afs.handler
	Device		= ramdrive.device
	Unit		= 1
	BlockSize	= 512
	Surfaces	= 2
	BlocksPerTrack	= 11
	LowCyl		= 0
	HighCyl		= 79
	Reserved	= 2
#

/* Entry for cdrom.handler */
CD0:
	FileSystem = cdrom.handler
	Device = ide.device
	Unit = 1
#

/* Entry for host's unix home directory */

HOME:

	FileSystem = emul.handler
	Device     = Home:~

/* Entry for host's unix usr directory */

#

USR:
	FileSystem = emul.handler
	Device     = USR:/usr

/* Additional unix directories can be mounted the same way, ie. with */
/* Filesytem set to "emul.handler" and Device encoding volume name   */
/* and unix path like this: <volumename>:<pathname>                  */


