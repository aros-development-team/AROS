TABLE OF CONTENTS

HotkeyString.mcc/HotkeyString.mcc
HotkeyString.mcc/MUIA_HotkeyString_IX
HotkeyString.mcc/MUIA_HotkeyString_Snoop
HotkeyString.mcc/HotkeyString.mcc

    *******************************************************************
    Copyright (C) 2005-2010 by BetterString.mcc Open Source Team
    $Id: MCC_HotkeyString.doc 242 2010-05-01 07:29:36Z damato $

    HotkeyString.mcc is a subclass of BetterString.mcc, it overloads
    the input method, and converts inputevents to the alphabetical
    representation. This is useful when you allow the user to customize
    keybindings.

    The gadget was originally written in 1997 by Allan Odgaard. As of
    version released in July 2005, the gadget is maintained by
    the BetterString.mcc Open Source team.

    It is released and distributed under the terms of the GNU Lesser
    General Public License (LGPL) and available free of charge.

    Please visit http://www.sf.net/projects/bstring-mcc/ for
    the very latest version and information regarding HotkeyString.mcc
    *******************************************************************

HotkeyString.mcc/MUIA_HotkeyString_IX

    NAME
        MUIA_HotkeyString_IX -- [IS.], struct InputXpression *

    FUNCTION
        Allows to specify a pointer to a standard "struct InputXpression"
        and sets the contents of the string gadget accordingly to the passed
        input expression.

HotkeyString.mcc/MUIA_HotkeyString_Snoop

    NAME
        MUIA_HotkeyString_Snoop -- [.SG], BOOL

    FUNCTION
        Normally this stringgadget converts each and every keypress to the
        alphabetical representation. In some cases this may not be desirable,
        e.g. if you bind the gadget to a listview.
        Setting this tag to FALSE will make the gadget behave like a normal
        stringgadget.

    EXAMPLE
        /*  We have a tbutton, which is a toggle button, a hstring which is our
            HotkeyString - The tbutton is placed to the right of the string.

            Setting up the following notify will let the string convert keys
            only when the tbutton is down - And it will make the tbutton
            become unpressed, when the user enters his hotkey.
         */

        DoMethod(tbutton, MUIM_Notify, MUIA_Selected, TRUE,
                 MUIV_Notify_Window, 3, MUIM_Set, MUIA_Window_ActiveObject,
                 hstring);

        DoMethod(tbutton, MUIM_Notify, MUIA_Selected, MUIV_EveryTime, hstring,
                 3, MUIM_Set, MUIA_HotkeyString_Snoop, MUIV_TriggerValue);

        DoMethod(hstring, MUIM_Notify, MUIA_String_Contents, MUIV_EveryTime,
                 tbutton, 3, MUIM_Set, MUIA_Selected, FALSE);

