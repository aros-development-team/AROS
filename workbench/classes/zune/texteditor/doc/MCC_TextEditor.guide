@DataBase TextEditor.guide
@$VER: TextEditor.guide 15.44 (26.01.2014)

@Node Main "TextEditor - AmigaGuide(R) documentation"

Welcome to the @{b}TextEditor @{ub}AmigaGuide(R) documentation.

(C) 2005-2014 TextEditor.mcc Open Source Team
(C) 1997-2000 by Allan Odgaard


@{b}@{uu}Table of contents @{uu}@{ub}


   @{" Introduction   " Link Intro      }          What TextEditor is!
   @{" Disclaimer     " Link Disclaimer }          What you should know!
   @{" License        " Link License    }          Here comes the LGPL!
   @{" Support        " Link Support    }          Who you should contact!

   @{" Installation   " Link Install    }          How to install TextEditor!

   @{" Usage          " Link Usage      }          How to use TextEditor!
   @{" ARexx          " Link ARexx      }          How to use the ARexx support!

   @{" Credits        " Link Credits    }          Who the authors wish to thank!

@EndNode

/// Introduction

@Node Intro "TextEditor / Introduction"

Introduction
************


TextEditor.mcc is a fast multiline string gadget, made as a custom class for
@{"Magic User Interface" Link MUI}.


Features
========

- It can hold quite large texts without noticeable slowdowns.

- The user can mark text with both keyboard and mouse.

- It supports the clipboard.

- It can edit text with different @{b}styles@{ub}, @{b}alignments@{ub} and @{b}colors@{ub}.

- It can hold @{b}separators@{ub}.

- It has @{b}floating wordwrap@{ub}.

- It has multiple @{b}undo@{ub} and @{b}redo@{ub} buffers.

- It is easy to extend a programs @{b}ARexx@{ub} interface, to reach the editor.

- It can easily be configured to use an external @{b}spell checker@{ub} for both
  type'n'spell and word guessing.

- It can have a @{b}bitmap/pattern@{ub} as background.

- It supports @{b}pixel smooth scroll@{ub}.

@EndNode
///

/// Disclaimer

@Node Disclaimer "TextEditor / Disclaimer: Blah, blah, blah..."

Disclaimer
**********


There is no warranty for this program to the extent permitted by applicable
law.  Except where otherwise stated in writing, the copyright holders and/or
other parties provide the program "as is" without warranty of any kind,
either expressed or implied, including, but not limited to, the implied
warranties of merchantability and fitness for a particular purpose.  The
entire risk as to the quality and performance of the program is with you.
Should the program prove defective, you assume the cost of all necessary
service, repair, or correction.

In no event, unless required by applicable law or agreed to in writing,
will any copyright holder, or any other party who may redistribute the
program as permitted above, be liable to you for damages, including any
general, special, incidental or consequential damages arising out of the
use or inability to use the program (including but not limited to loss of
data or data being rendered inaccurate or losses sustained by you or third
parties or a failure of the program to operate with any other programs),
even if such holder or other party had been advised of the possibility of
such damages.

@EndNode

///

/// License

@Node License "TextEditor / License"

License
*******


Binaries and source code are published under the @{" GNU Lesser General Public License " link COPYING/main}.

@EndNode

///

/// Support

@Node Support "TextEditor / Support"

Support
*******


TextEditor.mcc was originally written by Allan Odgaard. However, he's no
longer working actively on it and as of V15.10 the development is in
the hands of the TextEditor.mcc Open Source team.

Home page:

   http:\//www.sourceforge.net/projects/texteditor_mcc/

Developer mailing list (ask a TextEditor developer to get you aboard):

   http:\//www.freelists.org/list/texteditor_mcc/

Bugtracker:

   http:\//www.sourceforge.net/tracker/?group_id=135025&atid=731469

@EndNode

///

/// Installation

@Node Install "TextEditor / Installation"

Installation
************


TextEditor requires:

- Kickstart V39 (OS 3.x) or above.
- 68020 or better.
- @{"Magic User Interface" Link MUI} 3.6 or above.

TextEditor.mcp requires BetterString.mcc and HotkeyString.mcc,
http:\//www.sf.net/projects/bstring-mcc/

TextEditor-Demo requires Toolbar.mcc and InfoText.mcc by Benny Kjær Nielsen,
http:\//main.aminet.net/package.php?package=dev/mui/MCC_Toolbar.lha


Automatic installation
======================

Just double-click the "Install" icon and follow the prompts.


Manual Installation
===================

Copy Libs/MUI/<OS>/TextEditor.mcc and Libs/MUI/<OS>/TextEditor.mcp to your
MUI:Libs/mui/ directory, under the name TextEditor.mcc and TextEditor.mcp.
Here <OS> is the type of operating system your are running/want to install
TextEditor.mcc for.

If you haven't already gotten BetterString.mcc and HotkeyString.mcc, then
you will also need to copy in these two classes, in order to make the
preferences class work.

All other files are optional.

@EndNode

///

/// Usage

@Node Usage "TextEditor / Usage"

Usage
*****


General notes
=============

You can double-click a word to select it. If you hold LMB after a
double-click, then it will only mark @{b}complete@{ub} words. Triple-clicking
has the same effect, but for entire lines.

In the default configuration you can extend your block by holding down any
<Shift> key while you press LMB and drag the mouse until you reach the point
where you want the block to end.

While you drag to scroll, the farther away from the gadget your mouse pointer
is, the faster the contents will scroll.



Configuration
=============

You can configure almost any aspect of the editor; this means the frame, the
background, fonts, colors, undo levels, tab size, key bindings, spell checker
and much more.

Run the MUI preferences program (either "globally" from e.g. Workbench, or
"locally" from the application using TextEditor.

In the listview at the left (after selecting the "external" classes if you're
using MUI 3.9+) you should see the entry "TextEditor", otherwise something is
installed wrong. If you have just installed the custom class, then try a
reboot first; if it still doesn't appear, then something is wrong with your
MUI installation.

When you select the TextEditor entry you will see four pages.


The first page, named "Settings", is where most things are configured. It
should be easy to understand, as most of the things are exactly as with other
MUI elements.


The second page is called "Key bindings", this is where you set up your keys.

At the top you'll find a cycle gadget labeled "Block qualifier". This gadget
tells which qualifier you want to use for marking text; for example, if it is
"Shift", then you shall hold down any <Shift> key while you use the cursor
keys to decide the size of your marking.

Below is a listview that shows the current key bindings.

If you press the "Default keys" button, all key bindings will be reset to
defaults.


The third page, named "Spell checker", is where you configure the external
spell checker. The page contains a helpful text that will explain how it is
all done.


Last page, named "Sample", just shows an instance of the TextEditor.mcc.
You can test your settings here, remember to press the "Test" gadget to apply
the things that you have changed.

The gadget holds a context sensitive menu, from where you can adjust styles,
alignment and colors.


When you're done configuring the gadget, then press either "Save" or "Use".


If you have MUI V20+ installed (3.9 or better), then all the configuration
items will hold a context sensitive menu, from where you can restore the
original settings, the last saved settings etc. Exactly as with the rest
of MUI.

@EndNode

///

/// ARexx

@Node ARexx "TextEditor / ARexx"

ARexx
*****

If the program using TextEditor.mcc offers an ARexx port and the editor
plays a central part in the application, then it will most likely extend
its ARexx port, so that you can also control the editor from ARexx.

If the application has launched several instances of the editor, then it
should provide a separate ARexx port for each instance (e.g. "YAM.1" and
"YAM.2" for the first and the second write windows, respectively).

Following is a list of the ARexx commands currently supported by the custom
class.


Command            Template
.......            ........

CLEAR
CUT
COPY
PASTE
ERASE
GOTOLINE           /N/A
GOTOCOLUMN         /N/A
CURSOR             Up/S,Down/S,Left/S,Right/S
LINE               /N/A
COLUMN             /N/A
NEXT               Word/S,Sentence/S,Paragraph/S,Page/S
PREVIOUS           Word/S,Sentence/S,Paragraph/S,Page/S
POSITION           SOF/S,EOF/S,SOL/S,EOL/S,SOW/S,EOW/S,SOV/S,EOV/S
SETBOOKMARK        /N/A
GOTOBOOKMARK       /N/A
TEXT               /F
UNDO
REDO
GETLINE
GETCURSOR          Line/S,Column/S
MARK               On/S,Off/S
DELETE
BACKSPACE
KILLLINE
TOUPPER
TOLOWER


Please read the Amiga styleguide for a detailed explanation of the commands.

@EndNode

///

/// Background

@Node Background "TextEditor / Background"

Background
**********


Since its first introduction in October, 1997 by Allan Odgaard, TextEditor
quickly grew popular among some MUI developers, thanks to its features and
speed. Sadly, back in 2000 Allan's hard drive apparently died and the
sources couldn't be accessed anymore, preventing him from delivering further
updates beyond 15.9, which somewhat hindered the development of applications
based around TextEditor.

Decided not to surrender easily, in 2004, Jens Maus of YAMOS fame
contacted Allan asking him to send his hard drive over to Germany.
Eventually, in March, 2005 the precious hard drive (a very old Seagate
3660A) arrived and Jens found out that it was actually just the controller
part that needed a replacement. By then, old hard drive parts were also much
cheaper and he could afford to try several replacements until eventually one
did the trick.

Thus, on March 4th, 2005 he spread the news and asked long and wide for
people owning a matching drive to let him know about their detailed firmware
and controller values. After an overwhelming response from not less than 40
people of all over the world, most of them offering to also send their
hard drive for free, Jens finally picked 7 of the controllers offered so
far that closely related to the drive he held at home, and asked the owners
to send them over.

Finally, on March 11th, he randomly picked the first controller out of the
seven and, surprisingly and in contrast to Murphy's law, this controller
worked out of the box with Allan's drive!

After first reading out a whole raw image of the drive, he then connected the
hard drive to his old A4000 and read out all the data from it without a
hitch (which quite surprised him).

The Amiga community made it possible again!

@EndNode

///

/// Credits

@Node Credits "TextEditor / Credits"

Credits
*******

Thanks a lot to the following people, for their direct or indirect
involvement:

- David Rydh
- Eberhard Hafermatz
- Mads Henriksen
- Marcin Orlowski
- Ole Friis
- Rand Fredricksen
- Sune Foldager


Especially thanks to

- Benny Kjær Nielsen for clarification of the autodoc, and for creating
  the cool Toolbar.mcc & InfoText.mcc used in TextEditor-Demo.

- Gilles Masson for all his help.

- Kai Hofmann for MCC-Install.

- Magnus Heino, Marcel Beck, Stefan Stuntz & Steffen Gutmann for their detailed
  bug repports. Without them, the gadget would probably suffer from a lot of
  Enforcer hits, since I don't have a MMU myself.

- Roman Patzner for his lovely TextEditor image, used in MUIPrefs. Also thanks
  for the images used in TextEditor-Demo (which was originally made for YAM 2.0).

- Stefan Stuntz for @{" Magic User Interface " Link MUI}


Thanks to the ATO members, who have translated it:

Czech:      Pavel Bures (pbures@cro.cz)

Danish:     Allan Odgaard (duff@diku.dk) &

            Ole Friis (ole_f@post3.tele.dk)

Dutch:      Frits Letteboer (dagraver@dds.nl) &

            Guno Heitman (guno@club.tip.nl)

Finnish:    Kallio Petteri (k140734@cs.tut.fi)

            Mika Lundell (c71829@uwasa.fi)

German:     Sönke Tesch (soenke.tesch@elmshorn.netsurf.de) &

            Arthur Steinmann (steinman@stud.uni-frankfurt.de)

Greek:      Pantelis Kopelias (leestar@acropolis.net)

Italian:    Vincenzo Gervasi (gervasi@di.unipi.it) &

            Piergiorgio Ghezzo (pghezzo@dsi.unive.it)

Norwegian:  Tommy Knudsen (tommy.knudsen@login.eunet.no)

            (who is not in ATO, but thanks anyway :-)

Polish:     Marcin Orlowski (carlos@wfmh.man.szczecin.pl)

Portuguese: Rúben Alvim (mindwalker@mail.telepac.pt) &

            Joel Alvim (mindwalker@mail.telepac.pt)

Russian:    Oleg Sergeev (bigblack@neworder.spb.ru)

Serbian:    Andrija Antonijevic (TheAntony@bigfoot.com) &

            Ljubomir Jankovic (lurch@afrodita.rcub.bg.ac.yu)

Slovenian:  Ales Rosman (ales.rosman@kiss.uni-lj.si)

Spanish:    Antonio Noguera (g032252803@abonados.cplus.es) &

            Samuel Aguilera (slyguy@mx2.redestb.es)

Swedish:    Linus Silvander (linus@icenet.fi) &

            Kristoffer Larsson (d95-kla@nada.kth.se)


And for developer includes, thanks to:

Amiga-E:    Neil Williams (neil@bleach.demon.co.uk)

Modula-2:   Sönke Tesch (soenke.tesch@elmshorn.netsurf.de)

@EndNode

///

/// MUI

@Node MUI "MUI - Magic User Interface"

MUI - Magic User Interface

(C) 1992-2009 by Stefan Stuntz


MUI is a system to generate and maintain graphical user interfaces. With the
aid of a preferences program, the user of an application has the ability to
customize the outfit according to his personal taste.

MUI is distributed as shareware. To obtain a complete package containing
lots of examples and more information about registration, please look for
a file called "muiXXusr.lha" (XX means the latest version number) on your
local bulletin boards or on public domain disks.


If you want to register directly, feel free to send

DM 30.-  or  US$ 20.-

to

Stefan Stuntz
Eduard-Spranger-Straße 7
80935 München
GERMANY

@EndNode

///
