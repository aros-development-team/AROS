	      Internet Systems Consortium DHCP Distribution
			      Version 3.0.3
			      July 22, 2005

			     Release Notes

			     NEW FEATURES

Version 3 of the ISC DHCP Distribution includes the following features
that are new since version 2.0:

     - DHCP Failover Protocol support
     - OMAPI, an API for accessing and modifying the DHCP server and
       client state.
     - Conditional behaviour
     - Storing arbitrary information on leases
     - Address pools with access control
     - Client classing
     - Address allocation restriction by class
     - Relay agent information option support 
     - Dynamic DNS updates
     - Many bug fixes, performance enhancements, and minor new DHCP
       protocol features. 

The main bug fixed here is a bug in the subclass allocation code that
could result in a memory smash.   Any users of the ISC DHCP server who
are using subclasses should seriously consider upgrading to 3.0.1.

If you are running 3.0 beta 1 and are doing dynamic DNS updates, the
lease file is no longer forward-compatible to 3.0 final.   A script
has been provided to convert 3.0b1 lease files.   This is in
contrib/3.0b1-lease-convert.

For information on how to install, configure and run this software,
as well as how to find documentation and report bugs, please consult
the README file.

The Dynamic DNS Update support is a descendent of an implementation
done by Lans Carstensen and Brian Dols at Rose-Hulman Institute of
Technology, Jim Watt at Applied Biosystems, Irina Goble at Integrated
Measurement Systems, Igor Sharfmesser at Kazakh Telecom, and Brian
Murrell at BC Tel Advanced Communications.  I'd like to express my
thanks to all of these good people here, both for working on the code
and for prodding me into improving it.

			Changes since 3.0.3b3

- dhclient.conf documentation for interface {} was updated to reflect recent
  discussion on the dhcp-hackers mailing list.

- In response to reports that the software does not compile on GCC 4.0.0,
  -Werror was removed from Makefile.conf for all platforms that used it.
  We will address the true problem in a future release; this is a temporary
  workaround.

			Changes since 3.0.3b2

- An error in code changes introduced in 3.0.3b2 was corrected, which caused
  static BOOTP clients to receive random addresses.

			Changes since 3.0.3b1

- A bug was fixed in BOOTPREQUEST handling code wherein stale references to
  host records would be left behind on leases that were not allocated to the
  client currently booting (eg in the case where the host was denied booting).

- The dhcpd.conf.5 manpage was updated to be more clear in regards to
  multiple host declarations (thanks to Vincent McIntyre).  'Interim' style
  dynamic updates were also retouched.

			Changes since 3.0.2

- A bug was fixed where a server might load balance a DHCP REQUEST to its
  peer after already choosing not to load balance the preceeding DISCOVER.
  The peer cannot allocate the originating server's lease.

- In the case where a secondary server lost its stable storage while the
  primary was still in communications-interrupted, and came back online,
  the lease databases would not be fully transferred to the secondary.
  This was due to the secondary errantly sending an extra UPDREQ message
  when the primary made its state transition to PARTNER-DOWN known.

- The package will now compile cleanly in gcc 3.3 and 3.4.  As a side effect,
  lease structures will be 9 bytes smaller on all platforms.  Thanks to
  Jason Vas Dias at Redhat.

- Interface discovery code in DISCOVER_UNCONFIGURED mode is now
  properly restricted to only detecting broadcast interfaces.  Thanks
  to a patch from Jason Vas Dias at RedHat.

- decode_udp_ip_header was changed so that the IP address was copied out
  to a variable, rather than referenced by a pointer.  This enforces 4-byte
  alignment of the 32-bit IP address value.  Thanks to a patch from Dr.
  Peter Poeml.

- An incorrect log message was corrected thanks to a patch from
  Dr. Peter Poeml.

- A bug in DDNS was repaired, where if the server's first DDNS action was
  a DDNS removal rather than a DDNS update, the resolver library's
  retransmit timer and retry timer was set to the default, implying a
  15 second timeout interval.  Which is a little excessive in a synchronous,
  single-threaded system.  In all cases, ISC DHCP should now hold fast to
  a 1-second timeout, trying only once.

- The siaddr field was being improperly set to the server-identifier when
  responding to DHCP messages.  RFC2131 clarified the siaddr field as
  meaning the 'next server in the bootstrap process', eg a tftp server.
  The siaddr field is now left zeroed unless next-server is configured.

- mockup_lease() could have returned in an error condition (or in the
  condition where no fixed-address was found matching the shared
  network) with stale references to a host record.  This is probably not
  a memory leak since host records generally never die anyway.

- A bug was repaired where failover servers would let stale client identifiers
  persist on leases that were reallocated to new clients not sending an id.

- Binding scopes ("set var = value;") are now removed from leases allocated
  by failover peers if the lease had expired.  This should help reduce the
  number of stale binding scopes on leases.

- A small memory leak was closed involving client identifiers larger than
  7 bytes, and failover.

- Configuring a subnet in dhcpd.conf with a subnet mask of 32 bits might
  cause an internal function to overflow heap.  Thanks to Jason Vas Dias
  at Redhat.

- Some inconsistencies in treating numbers that the lexer parsed as 'NUMBER'
  or 'NUMBER_OR_NAME' was repaired.  Hexadecimal parsing is affected, and
  should work better.

- In several cases, parse warnings were being issued before the lexical
  token had been advanced to the token whose value was causing an error...
  causing parse warnings to claim the problem is on the wrong token.

- Host declarations matching on client identifier for dynamic leases will
  no longer match fixed-address host declarations (this is now identical
  to behaviour for host records matching on hardware address).

			Changes since 3.0.2rc3

- A previously undocumented configuration directive, 'local-address',
  was documented in the dhcpd.conf manpage.

			Changes since 3.0.2rc2

- Two varaibles introduced in 3.0.2b1 were used without being initialized
  in the case where neither the FILE nor SNAME fields were available for
  overloading.  This was repaired.

- A heretofore believed to be impossible corner case of the option
  overloading implementation turned out to be possible ("Unable to sort
  overloaded options after 10 tries.").  The implementation was reworked
  to consider the case of an option so large it would require more than
  three chunks to fit.

- Many other instances of variables being used without being initialized
  were repaired.

- An uninitialized variable in omapi_io_destroy() led to the discovery
  that this function may result in orphaned pointers (and hence, a memory
  leak).

			Changes since 3.0.2rc1

- allocate_lease() was rewritten to repair a bug in which the server would
  try to allocate an ABANDONED lease when FREE leases were available.

			Changes since 3.0.2b1

- Some dhcp-eval.5 manpage formatting was repaired.

			Changes since 3.0.1

- A bug was fixed in the server's 'option overloading' implementation,
  where options loaded into the 'file' and 'sname' packet fields were
  not aligned precisely as rfc2131 dictates.

- The FreeBSD client script was changed to support the case where a domain
  name was not provided by the server.

- A memory leak in 'omshell' per each command line parsed was
  repaired, thanks to a patch from Jarkko Torppa.

- Log functions writing to stderr were adjusted to use the STDERR_FILENO
  system definition rather than '2'.  This is a no-op for 90% of platforms.

- One call to trace_write_packet_iov() counted the number of io vectors
  incorrectly, causing inconsistent tracefiles.  This was fixed.

- Some expression parse failure memory leaks were closed.

- A host byte order problem in tracefiles was repaired.

- Pools configured in DHCPD for failover possessing permission lists that
  previously were assumed to not include dyanmic bootp clients are now
  a little more pessimistic.  The result is, dhcpd will nag you about just
  about most pools that possess a 'allow' statement with no 'deny' that
  would definitely match a dynamic bootp client.

- The 'ddns-update-style' configuration warning bit now insists that
  the configuration be globally scoped.

- Two memory leaks in dhclient were closed thanks to a patch from Felix
  Farkas.

- Some minor but excellently pedantic documentation errors were fixed
  thanks to a patch from Thomas Klausner.

- Bugs in operator precedence in executable statements have been repaired
  once again.  More legal syntaxes should be parsed legally.

- Failing to initialize a tracefile for any reason if a tracefile was
  specified is now a fatal error.  Thanks to a patch from Albert Herranz.

- Corrected a bug in which the number of leases transferred as calculated
  by the failover primary and sent to peers in POOLRESP responses may be
  incorrect.  This value is not believed to be used by other failover
  implementations, excepting perhaps as logged information.

- Corrected a bug in which 'dhcp_failover_send_poolresp()' was in fact
  sending POOLREQ messages instead of POOLRESP mesasges.  This message
  was essentially ignored since failover secondaries effectively do not
  respond to POOLREQ messages.

- Type definitions for various bitwidths of integers in the sunos5-5
  build of ISC DHCP have been fixed.  It should compile and run more
  easily when built in 64-bit for this platform.

- "allow known-clients;" is now a legal syntax, to avoid confusion.

- If one dhcp server chooses to 'load balance' a request to its failover
  peer, it first checks to see if it believes said peer has a free
  lease to allocate before ignoring the DISCOVER.

- log() was logging a work buffer, rather than the value returned by
  executing the statements configured by the user.  In some cases,
  the work buffer and the intended results were the same.  In some other
  cases, they were not.  This was fixed thanks to a patch from Gunnar
  Fjone and directconnect.no.

- Compiler warnings for some string type conversions was fixed, thanks
  to Andreas Gustafsson.

- The netbsd build environments were simplified to one, in which
  -Wconversion is not used, thanks to Andreas Gustafsson.

- How randomness in the backoff-cutoff dhclient configuration variable
  is implemented was better documented in the manpage, and the behaviour
  of dhclient in REQUEST timeout handling was changed to match that of
  DISCOVER timeout handling.

- Omapi was hardened against clients that pass in null values, thanks
  to a patch from Mark Jason Dominus.

- A bug was fixed in dhclient that kept it from doing client-side
  ddns updates.  Thanks to a patch from Andreas Gustafsson, which
  underwent some modification after review by Jason Vas Dias.

- Failover implementations disconnected due to the network between
  them (rather than one of the two shutting down) will now try to
  re-establish the failover connection every 5 seconds, rather than
  to simply try once and give up until one of them is restarted.
  Thanks to a patch from Ulf Ekberg from Infoblox, and field testing
  by Greger V. Teigre which led to an enhancement to it.

- A problem that kept DHCP Failover secondaries from tearing down
  ddns records was repaired.  Thanks to a patch from Ulf Ekberg from
  Infoblox.

- 64bit pointer sizes are detected properly on FreeBSD now.

- A bug was repaired where the DHCP server would leave stale references
  to host records on leases it once thought about offering to certain
  clients.  The result would be to apply host and 'known' scopes to the
  wrong clients (possibly denying booting).  NOTE:  The 'mis-host' patch
  that was being circulated as a workaround is not the way this bug was
  fixed.  If you were a victim of this bug in 3.0.1, you are cautioned
  to proceed carefully and see if it fixes your problem.

- A bug was repaired in the server's DHCPINFORM handling, where it
  tried to divine the client's address from the source packet and
  would get it wrong.  Thanks to Anshuman Singh Rawat.

- A log message was introduced to help illuminate the case where the
  server was unable to find a lease to assign to any BOOTP client.
  Thanks to Daniel Baker.

- A minor dhcpd.conf.5 manpage error was fixed.

			Changes since 3.0.1rc14

- The global variable 'cur_time' was centralized and is now uniformly of a
  type #defined in system-dependent headers.  It had previously been defined
  in one of many places as a 32-bit value, and this causes mayhem on 64-bit
  big endian systems.  It probably wasn't too healthy on little endian
  systems either.

- A printf format string error introduced in rc14 was repaired.

- AIX system-dependent header file was altered to only define NO_SNPRINTF
  if the condition used to #ifdef in vsnprintf in AIX' header files
  is false.

- The Alpha/OSF system-dependent header file was altered to define
  NO_SNPRINTF on OS revisions older than 4.0G.

- omapip/test.c had string.h added to its includes.

			Changes since 3.0.1rc13

! CAN-2004-0460 - CERT VU#317350: Five stack overflow exploits were closed
  in logging messages with excessively long hostnames provided by the
  clients.  It is highly probable that these could have been used by
  attackers to gain arbitrary root access on systems using ISC DHCP 3.0.1
  release candidates 12 or 13.  Special thanks to Gregory Duchemin for
  both finding and solving the problem.

! CAN-2004-0461 - CERT VU#654390: Once the above was closed, an opening
  in log_*() functions was evidented, on some specific platforms where
  vsnprintf() was not believed to be available and calls were wrapped to
  sprintf() instead.  Again, credit goes to Gregory Duchemin for finding
  the problem.  Calls to snprintf() are now linked to a distribution-local
  snprintf implementation, only in those cases where the architecture is
  not known to provide one (see includes/cf/[arch].h).  If you experience
  linking problems with snprintf/vsnprintf or 'isc_print_' functions, this
  is where to look.  This vulnerability did not exist in any previously
  published version of ISC DHCP.

- Compilation on hpux 11.11 was repaired.

- 'The cross-compile bug fix' was backed out.

			Changes since 3.0.1rc12

- Fixed a bug in omapi lease lookup function, to form the hardware
  address for the hash lookup correctly, thanks to a patch from
  Richard Hirst.

- Fixed a bug where dhcrelay was sending relayed responses back to the
  broadcast address, but with the source's unicast mac address.  Should
  now conform to rfc2131 section 4.1.

- Cross-compile bug fix; use $(AR) instead of ar.  Thanks to Morten Brorup.

- Fixed a crash bug in dhclient where dhcpd servers that do not provide
  renewal times results in an FPE.  As a side effect, dhclient can now
  properly handle 0xFFFFFFFF (-1) expiry times supplied by servers.  Thanks
  to a patch from Burt Silverman.

- The 'ping timeout' debugs from rc12 were removed to -DDEBUG only,
  and reformatted to correct a compilation error on solaris platforms.

- A patch was applied which fixes a case where leases read from the
  leases database do not properly over-ride previously read leases.

- dhcpctl.3 manpage was tweaked.

			Changes since 3.0.1rc11

- A patch from Steve Campbell was applied with minor modifications to
  permit reverse dns PTR record updates with values containing spaces.

- A patch from Florian Lohoff was applied with some modifications to
  dhcrelay.  It now discards packets whose hop count exceeds 10 by default,
  and a command-line option (-c) can be used to set this threshold.

- A failover bug relating to identifying peers by name length instead of
  by name was fixed.

- Delcaring failover configs within shared-network statements should no
  longer result in error.

- The -nw command line option to dhclient now works.

- Thanks to a patch from Michael Richardson:
	- Some problems with long option processing have been fixed.
	- Some fixes to minires so that updates of KEY records will work.

- contrib/ms2isc was updated by Shu-Min Chang of the Intel Corporation.
  see contrib/ms2isc/readme.txt for revision notes.

- Dhclient no longer uses shell commands to kill another instance of
  itself, it sends the signal directly.  Thanks to a patch from Martin
  Blapp.

- The FreeBSD dhclient-script was changed so that a failure to write to
  /etc/resolv.conf does not prematurely end the script.  This keeps dhclient
  from looping infinitely when this is the case.  Thanks to a patch from
  Martin Blapp.

- A patch from Bill Stephens was applied which resolves a problem with lease
  expiry times in failover configurations.

- A memory leak in configuration parsing was closed thanks to a patch from
  Steve G.

- The function which discovers interfaces will now skip non-broadcast or
  point-to-point interfaces, thanks to a patch from David Brownlee.

- Options not yet known by the dhcpd or dhclient have had their names
  changed such that they do not contain # symbols, in case they should ever
  appear in a lease file.  An option that might have been named "#144" is
  now "unknown-144".

- Another patch from Bill Stephens which allows the ping-check timeout to
  be configured as 'ping-timeout'.  Defaults to 1.

			Changes since 3.0.1rc10

- Potential buffer overflows in minires repaired.

- A change to the linux client script to use /bin/bash, since /bin/sh may
  not be bash.

- Some missing va_end cleanups thanks to a patch from Thomas Klausner.

- A correction of boolean parsing syntax validation - some illegal syntaxes
  that worked before are now detected and produce errs, some legal syntaxes
  that errored before will now work properly.

- Some search-and-replace errors that caused some options to change their
  names was repaired.

- Shu-min Chang of the Intel corporation has contributed a perl script and
  module that converts the MS NT4 DHCP configuration to a ISC DHCP3
  configuration file.

- Applied the remainder of the dhcpctl memory leak patch provided by Bill
  Squier at ReefEdge, Inc.  (groo@reefedge.com).

- Missing non-optional failover peer configurations will now result in a soft
  error rather than a null dereference.

			Changes since 3.0.1rc9

- A format string was corrected to fix compiler warnings.

- A number of spelling corrections were made in the man pages.

- The dhclient.conf.5 man page was changed to refer to do-forward-updates
  rather than a configuration option that doesn't exist.

- A FreeBSD-specific bug in the interface removal handling was fixed.

- A Linux-specific Token Ring detection problem was fixed.

- Hashes removed from as-yet-unknown agent options, having those options
  appear in reality before we know about them will no longer produce
  self-corrupting lease databases.

- dhclient will use the proper port numbers now when using the -g option.

- A order-of-operations bug with 2 match clauses in 1 class statement is
  fixed thanks to a patch from Andrew Matheson.

- Compilation problems on Solaris were fixed.

- Compilation problems when built with DEBUG or DEBUG_PACKET were repaired.

- A fix to the dhcp ack process which makes certain group options will be
  included in the first DHCPOFFER message was made thanks to a patch from
  Ling Gou.

- A few memory leaks were repaired thanks to patches from Bill Squier at
  ReefEdge, Inc.  (groo@reefedge.com).

- A fix for shared-networks that sometimes give clients options for the
  wrong subnets (in particular, 'option routers') was applied, thanks to
  Ted Lemon for the patch.

- Omshell's handling of dotted octets as values was changed such that dots
  one after the other produce zero values in the integer string.

			Changes since 3.0.1rc8

- Fix a format string vulnerability in the server that could lead to a
  remote root compromise (discovered by NGSEC Research Team, www.ngsec.com).

- Add additional support for NetBSD/sparc64.

- Fix a bug in the command-line parsing of the client.  Also, resolve
  a memory leak.

- Add better support for shells other than bash in the Linux client
  script.

- Various build fixes for modern versions of FreeBSD and Linux.

- Fix a bad bounds check when printing binding state names.

- Clarify documentation about fixed-address and multiple addresses.

- Fix a typo in the authoritative error message.

- Make a log entry when we can't write a billing class.

- Use conversion targets that are the right size on all architectures.

- Increment the hop count when relaying.

- Log a message when lease state is changed through OMAPI.

- Don't rerun the shared_network when evaluating the pool.

- Fix a reversed test in the parser.

- Change the type of rbuf_max.

- Make FTS_LAST a manifest constant to quiet warnings.

			Changes since 3.0.1rc7

- Fix two compiler warnings that are generated when compiling on Solaris
  with gcc.   These stop the build, even though they weren't actually
  errors, because we prefer that our builds generate no warnings.

			Changes since 3.0.1rc6

- Don't allow a lease that's in the EXPIRED, RELEASED or RESET state
  to be renewed.

- Implement lease stealing for cases where the primary has fewer leases
  than the secondary, as called for by the standard.

- Add a fudge factor to the lease expiry acceptance code, (suggested
  by Kevin Miller of CMU).

- Fix a bug in permit_list_match that made it much too willing to say
  that two permit lists matched.

- Unless DEBUG_DNS_UPDATES is defined, print more user-friendly (and
  also more compact) messages about DNS updates.

- Fix a bug in generating wire-format domain names for the FQDN option.

- Fix a bug where the FQDN option would not be returned if the client
  requested it, contrary to the standard.

- On Darwin, use the FreeBSD DHCP client script.

- On NetBSD/sparc, don't check for casting warnings.

- Add a flag in the DHCP client to disable updating the client's A
  record when sending an FQDN option indicating that the client is
  going to update its A record.

- In the client, don't attempt a DNS update until one second after
  configuring the new IP address, and if the update times out, keep
  trying until a response, positive or negative, is received from the
  DNS server.

- Fix an uninitialized memory bug in the DHCP client.

- Apply some FreeBSD-specific bug fixes suggested by Murray Stokely.

- Fix a bug in ns_parserr(), where it was returning the wrong sort
  of result code in some cases (suggested by Ben Harris of the
  NetBSD project).

- Fix a bug in is_identifier(), where it was checking against EOF
  instead of the END_OF_FILE token (also suggested by Ben Harris).

- Fix a bug where if an option universe contained no options, the
  DHCP server could dump core (Walter Steiner).

- Fix a bug in the handling of encapsulated options.

- Fix a bug that prevented NWIP suboptions from being processed.

- Delete the FTS_BOOTP and FTS_RESERVED states and implement them
  as modifier flags to the FTS_ACTIVE state, as called for in the
  failover protocol standard.

- Fix bugs in the pool merging code that resulted in references and
  dereferences of null pointers.   This bug had no impact unless the
  POINTER_DEBUG flag was defined.

- In the server, added a do-forward-updates flag that can be used to
  disable forward updates in all cases, so that sites that want the
  clients to take sole responsibility for updating their A record can
  do so.

- Make it possible to disable optimization of PTR record updates.

			Changes since 3.0.1rc5

- Include some new documentation and changes provided by Karl Auer.

- Add a workaround for some Lexmark printers that send a double-NUL-
  terminated host-name option, which would break DNS updates.

- Fix an off-by-one error in the MAC-address checking code for
  DHCPRELEASE that was added in 3.0.1rc5.

- Fix a bug where client-specific information was not being discarded
  from the lease when it expired or was released, resulting in
  problems if the lease was reallocated to a different client.

- If more than one allocation pool is specified that has the same set
  of constraints as another allocation pool on the same shared
  network, merge the two pools.

- Don't print an error in fallback_discard, since this just causes
  confusion and does not appear to be helping to encourage anyone to
  fix this bug.

			Changes since 3.0.1rc4

- Fix a bug that would cause the DHCP server to spin if asked to parse
  a certain kind of incorrect statement.

- Fix a related bug that would prevent an error from being reported in
  the same case.

- Additional documentation.

- Make sure that the hardware address matches the lease when
  processing a DHCPRELEASE message.

			Changes since 3.0.1rc3

- A minor bug fix in the arguments to a logging function call.
- Documentation update for dhcpd.conf.

		        Changes since 3.0.1rc2

- Allow the primary to send a POOLREQ message.   This isn't what the current
  failover draft says to do, so we may have to back it out if I can't get the
  authors to relent, but the scheme for balancing that's specified in the
  current draft seems needlessly hairy, so I'm floating a trial balloon.
  The rc1 code did not implement the method described in the draft either.

		        Changes since 3.0.1rc1

- Treat NXDOMAIN and NXRRSET as success when we are trying to delete a
  domain or RRSET.   This allows the DHCP server to forget about a name
  it added to the DNS once it's been removed, even if the DHCP server
  wasn't the one that removed it.

- Install defaults for failover maximum outstanding updates and maximum
  silent time.   This prevents problems that might occur if these values
  were not configured.

- Don't do DDNS deletes if ddns-update-style is none.

- Return relay agent information options in DHCPNAK.   This prevents DHCPNAK
  messages from being dropped when the relay agent information option contains
  routing information.

- Fix a problem where coming up in recover wouldn't result in an update
  request being sent.

- Add some more chatty messages when we start a recovery update and when it's
  done.

- Fix a possible problem where some state might have been left around
  after the peer lost contact and regained contact about how many updates
  were pending.

- Don't nix a lease update because of a lease conflict.   This test has
  never (as far as I know) prevented a mistake, and it appears to cause
  problems with failover.

- Add support in rc history code for keeping a selective history, rather
  than a history of all references and dereferences.   This code is only used
  when extensive additional debugging is enabled.

		           Changes since 3.0

- Make allocators for hash tables.   As a side effect, this fixes a memory
  smash in the subclass allocation code.

- Fix a small bug in omshell where if you try to close an object when
  no object is open, it dumps core.

- Fix an obscure coredump that could occur on shutdown.

- Fix a bug in the recording of host declaration rubouts in the lease file.

- Fix two potential spins in the host deletion code.

- Fix a core dump that would happen if an application tried to update
  a host object attribute with a null value.

		Changes since 3.0 Release Candidate 12

- Fix a memory leak in the evaluation code.

- Fix an obscure core dump.

- Print a couple of new warnings when parsing the configuration file
  when crucial information is left out.

- Log "no free leases" as an error.

- Documentation updates.

		Changes since 3.0 Release Candidate 11

- Always return a subnet selection option if one is sent.

- Fix a warning that was being printed because an automatic data
  structure wasn't zeroed.

- Fix some failover state transitions that were being handled
  incorrectly.

- When supersede_lease is called on a lease whose end time has already
  expired, but for which a state transition has not yet been done, do
  a state transition.   This fixes the case where if the secondary
  allocated a lease to a client and the lease "expired" while the
  secondary was in partner-down, no expiry event would actually
  happen, so the lease would remain active until the primary was
  restarted.

		Changes since 3.0 Release Candidate 10

- Fix a bug that was preventing released leases from changing state
  in failover-enabled pools.

- Fix a core dump in the client identifier finder code (for host
  declarations).

- Finish fixing a bug where bogus data would sometimes get logged to
  the dhclient.leases file because it was opened as descriptor 2.

- Fix the Linux dhclient-script according to suggestions made by
  several people on the dhcp-client mailing list.

- Log successful DNS updates at LOG_INFO, not LOG_ERROR.

- Print an error message and refuse to run if a failover peer is
  defined but not referenced by any pools.

- Correct a confusing error message in failover.

		Changes since 3.0 Release Candidate 9

- Fix a bug in lease allocation for Dynamic BOOTP clients.

	  Changes since 3.0 Release Candidate 8 Patchlevel 2

- Fix a bug that prevented update-static-leases from working.

- Document failover-state OMAPI object.

- Fix a compilation error on SunOS 4.

	  Changes since 3.0 Release Candidate 8 Patchlevel 1

- Fix a parsing bug that broke dns updates (both interim and ad-hoc).
  This was introduced in rc8pl1 as an unintended result of the memory
  leakage fixes that were in pl1.

- Fix a long-standing bug where the server would record that an update
  had been done for a client with no name, even though no update had
  been done, and then when the client's lease expired the deletion of
  that nonexistant record would time out because the name was the null
  string. 

- Clean up the omshell, dhcpctl and omapi man pages a bit.

		Changes since 3.0 Release Candidate 8

- Fix a bug that could cause the DHCP server to spin if
  one-lease-per-client was enabled.

- Fix a bug that was causing core dumps on BSD/os in the presence of
  malformed packets.

- In partner-down state, don't restrict lease lengths to MCLT.

- On the failover secondary, record the MCLT received from the primary
  so that if we come up without a connection to the primary we don't
  wind up giving out zero-length leases.

- Fix some compilation problems on BSD/os.

- Fix a bunch of memory leaks.

- Fix a couple of bugs in the option printer.

- Fix an obscure error reporting bug in the dns update code, and also
  make the message clearer when a key algorithm isn't supported.

- Fix a bug in the tracing code that prevented trace runs that used
  tcp connections from being played back.

- Add some additional debugging capability for catching memory leaks
  on exit.

- Make the client release the lease correctly on shutdown.

- Add some configurability to the build system.

- Install omshell manual page in man1, not man8.

- Craig Gwydir sent in a patch that fixes a long-standing bug in the
  DHCP client that could cause core dumps, but that for some reason
  hadn't been noticed until now.

		Changes since 3.0 Release Candidate 7

- Fix a bug in failover where we weren't sending updates after a
  transition from communications-interrupted to normal.

- Handle expired/released/reset -> free transition according to the
  protocol specification (this works - the other way not only wasn't
  conformant, but also didn't work).

- Add a control object in both client and server that allows either
  daemon to be shut down cleanly.

- When writing a lease, if we run out of disk space, shut down the
  output file and insist on writing a new one before proceeding.

- In the server, if the OMAPI listener port is occupied, keep trying
  to get it, rather than simply giving up and exiting.

- Support fetching variables from leases and also updating and adding
  variables to leases via OMAPI.

- If two failover peers have wildly different clocks, refuse to start
  doing failover.

- Fix a bug in the DNS update code that could cause core dumps when
  running on alpha processors.

- Fixed a bug in ddns updates for static lease entries, thanks to a
  patch from Andrey M Linkevitch.

- Add support for Darwin/MacOS X

- Install omshell (including new documentation).

- Support DNS updates in the client (this is a very obscure feature
  that most DHCP client users probably will not be able to use).

- Somewhat cleaner status logging in the client.

- Make OMAPI key naming syntax compatible with the way keys are
  actually named (key names are domain names).

- Fix a bug in the lease file writer.

- Install DHCP ISC headers in a different place than BIND 9 ISC
  headers, to avoid causing trouble in BIND 9 builds.

- Don't send updates for attributes on an object when the attributes
  haven't changed.   Support deleting attributes on remote objects.

- Fix a number of bugs in omshell, and add the unset and refresh
  statements.

- Handle disconnects in OMAPI a little bit more intelligently (so that
  the caller gets ECONNRESET instead of EINVAL).

- Fix a bunch of bugs in the handling of clients that have existing
  leases when the try to renew their leases while failover is
  operating.

		Changes since 3.0 Release Candidate 6

- Fix a core dump that could happen when processing a DHCPREQUEST from
  a client that had a host declaration that contained both a
  fixed-address declaration and a dhcp-client-identifier option
  declaration, if the client identifier was longer than nine bytes.

- Fix a memory leak that could happen in certain obscure cases when
  using omapi to manipulate leases.

- Fix some bugs and omissions in omshell.


		Changes since 3.0 Release Candidate 5

- Fix a bug in omapi_object_dereference that prevented objects in
  chains from having their reference counts decreased on dereference.

- Fix a bug in omapi_object_dereference that would prevent object
  chains from being freed upon removal of the last reference external
  to the chain.

- Fix a number of other memory leaks in the OMAPI protocol subsystem.

- Add code in the OMAPI protocol handler to trace memory leakage.

- Clean up the memory allocation/reference history printer.

- Support input of dotted quads and colon-separated hex lists as
  attribute values in omshell.

- Fix a typo in the Linux interface discovery code.

- Conditionalize a piece of trace code that wasn't conditional.

		Changes since 3.0 Release Candidate 4

- Fix a bug that would prevent leases from being abandoned properly on
  DHCPDECLINE.

- Fix failover peer OMAPI support.

- In failover, correctly handle expiration of leases.   Previously,
  leases would never be reclaimed because they couldn't make the
  transition from EXPIRED to FREE.

- Fix some broken failover state transitions.

- Documentation fixes.

- Take out an unnecessary check in DHCP relay agent information option
  stashing code that was preventing REBINDING clients from rebinding.

- Prevent failover peers from allocating leases in DHCPREQUEST
  processing if the lease belongs to the other server.

- Record server version in lease file introductory comment.

- Correctly report connection errors in OMAPI and failover.

- Make authentication signature algorithm name comparisons in OMAPI
  case-insensitive.

- Fix compile problem on SunOS 4.x

- If a signature algorithm is not terminated with '.', terminate it so
  that comparisons between fully-qualified names will work
  consistently.

- Different SIOCGIFCONF probe code, may "fix" problem on some Linux
  systems with the probe not working correctly.

- Don't allow user to type omapi key on command line of omshell.

		Changes since 3.0 Release Candidate 3

- Do lease billing on startup in a way that I *think* will finally do
  the billing correctly - the previous method could overbill as a
  result of duplicate leases.

- Document OMAPI server objects.

	  Changes since 3.0 Release Candidate 2 Patchlevel 1

- Fix some problems in the DDNS update code.   Thanks to Albert
  Herranz for figuring out the main problem.

- Fix some reference counting errors on host entries that were causing
  core dumps.

- Fix a byte-swap bug in the token ring code, thanks to Jochen
  Friedrich.

- Fix a bug in lease billing, thanks to Jonas Bulow.

		Changes since 3.0 Release Candidate 2

- Change the conditions under which a DHCPRELEASE is actually
  committed to be consistent with lease binding states rather than
  using the lease end time.   This may fix some problems with the
  billing class code.

- Fix a bug where lease updates would fail on Digital Unix (and maybe
  others) because malloc was called with a size of zero.

- Fix a core dump that happens when the DHCP server can't create its
  trace file.

	  Changes since 3.0 Release Candidate 1 Patchlevel 1

- Fix the dhcp_failover_put_message to not attempt to allocate a
  zero-length buffer.   Some versions of malloc() fail if you try to
  allocate a zero-length buffer, and this was causing problems on,
  e.g., Digital Unix.

- Fix a case where the failover code was printing an error message
  when no error had occurred.

- Fix a problem where when a server went down and back up again, the
  peer would not see a state transition and so would stay in the
  non-communicating state.

- Be smart about going into recover_wait.

- Fix a problem in the failover implementation where peers would fail
  to come into sync if interrupted in the RECOVER state.   This could
  have been the cause of some problems people have reported recently.

- Fix a problem with billing classes where they would not be unbilled
  when the client lease expired.

- If select fails, figure out which descriptor is bad, and cut it out
  of the I/O loop.   This prevents a potentially nasty spin.  I
  haven't heard any report it in a while, but it came up consistently
  in testing.

- Fix a bug in the relay agent where if you specified interfaces on
  the command line, it would fail.

- Fix a couple of small bugs in the omapi connection object (no known
  user impact).

- Add the missing 3.0 Beta 1 lease conversion script.

- Read dhcp client script hooks if they exist, rather than only if
  they're executable.

		Changes since 3.0 Release Candidate 1

- Fix a memory smash that happens when fixed-address leases are used.
  ANY SITE AT WHICH FIXED-ADDRESS STATEMENTS ARE BEING USED SHOULD
  UPGRADE IMMEDIATELY.   This has been a long-standing bug - thanks to
  Alvise Nobile for discovering it and helping me to find it!

- Fix a small bug in binary-to-ascii, thanks to H. Peter Anvin of
  Transmeta.

- There is a known problem with the DHCP server doing failover on
  Compaq Alpha systems.   This patchlevel is not a release candidate
  because of this bug.   The bug should be straightforward to fix, so
  a new release candidate is expected shortly.

- There is a known problem in the DDNS update code that is probably a
  bug, and is not, as far as we know, fixed in this patchlevel.

		Changes since 3.0 Beta 2 Patchlevel 24

- Went over problematic failover state transitions and made them all
  work, so that failover should now much less fragile.

- Add some dhcpctl and omapi documentation

- Fix compile errors when compiling with unusual predefines.

- Make Token Ring work on Linux 2.4

- Fix the Digital Unix BPF_WORDALIGN bug.

- Fix some dhcp client documentation errors.

- Update some parts of the README file.

- Support GCC on SCO.

	        Changes since 3.0 Beta 2 Patchlevel 23

- Fix a bug in the DNS update code where a status code was not being
  checked.   This may have been causing core dumps.

- When parsing the lease file, if a lease declaration includes a
  billing class statement, and the lease already has a billing class,
  unbill the old class.

- When processing failover transactions, where acks will be deferred,
  process the state transition immediately.

-  Don't try to use the new SIOCGIFCONF buffer size detection code on
   Linux 2.0, which doesn't provide this functionality.

- Apply a patch suggested by Tuan Uong for a problem in dlpi.c.

- Fix a problem in using the which command in the configure script.

- Fix a parse error in the client when setting up an omapi listener.

- Document the -n and -g flags to the client.

- Make sure there is always a stdin and stdout on startup.   This
  prevents shell scripts from accidentally writing error messages into
  configuration files that happen to be opened as stderr.

- If an interface is removed, the client will now notice that it is
  gone rather than spinning.   This has only been tested on NetBSD.

- The client will attempt to get an address even if it can't create a
  lease file.

- Don't overwrite tracefiles.

- Fix some memory allocation bugs in failover.

	        Changes since 3.0 Beta 2 Patchlevel 22

- Apply some patches suggested by Cyrille Lefevre, who is maintaining
  the FreeBSD ISC DHCP Distribution port.

- Fix a core dump in DHCPRELEASE.

	        Changes since 3.0 Beta 2 Patchlevel 21

- This time for sure: fix the spin described in the changes for pl20.

	        Changes since 3.0 Beta 2 Patchlevel 20

- Fix a problem with Linux detecting large numbers of interfaces (Ben)

- Fix a memory smash in the quotify code, which was introduced in
  pl19.

- Actually fix the spin described in the changes for pl20.   The
  previous fix only partially fixed the problem - enough to get it
  past the regression test.

	        Changes since 3.0 Beta 2 Patchlevel 19

- Fix a bug that could cause the server to abort if compiled with
  POINTER_DEBUG enabled.

- Fix a bug that could cause the server to spin when responding to a
  DHCPREQUEST.

- Apply Joost Mulders' suggested patches for DLPI on x86.

- Support NUL characters in quoted strings.

- Install unformatted man pages on SunOS.

	        Changes since 3.0 Beta 2 Patchlevel 18

- Allow the server to be placed in partner-down state using OMAPI.
  (Damien Neil)

- Implement omshell, which can be used to do arbitrary things to the
  server (in theory). (Damien Neil)

- Fix a case where if a client had two different leases the server could
  actually dereference the second one when it hadn't been referenced,
  leading to memory corruption and a core dump. (James Brister)

- Fix a case where a client could request the address of another client's
  lease, but find_lease wouldn't detect that the other client had it, and
  would attempt to allocate it to the client, resulting in a lease conflict
  message.

- Fix a case where a client with more than one client identifier could be
  given a lease where the hardware address was correct but the client
  identifier was not, resulting in a lease conflict message.

- Fix a problem where the server could write out a colon-separated
  hex list as a value for a variable, which would then not parse.
  The fix is to always write strings as quoted strings, with any
  non-printable characters quoted as octal escape sequences.   So
  a file written the old way still won't work, but new files written
  this way will work.

- Fix documentation for sending non-standard options.

- Use unparsable names for unknown options.    WARNING: this will
  break any configuration files that use the option-nnn convention.
  If you want to continue to use this convention for some options,
  please be sure to write a definition, like this:

  option option-nnn code nnn = string;

  You can use a descriptive name instead of option-nnn if you like.

- Fix a problem where we would see a DHCPDISCOVER/DHCPOFFER/
  DHCPREQUEST/DHCPACK/DHCPREQUEST/DHCPNAK sequence.   This was the
  result of a deceptively silly bug in supersede_lease.

- Fix client script exit status check, according to a fix supplied by
  Hermann Lauer.

- Fix an endianness bug in the tracefile support, regarding ICMP
  messages.

- Fix a bug in the client where the medium would not work correctly if
  it contained quoted strings.

		       ** there was no pl17 **

	        Changes since 3.0 Beta 2 Patchlevel 16

- Add support for transaction tracing.   This allows the state of the
  DHCP server on startup, and all the subsequent transactions, to be
  recorded in a file which can then be played back to reproduce the
  behaviour of the DHCP server.   This can be used to quickly
  reproduce bugs that cause core dumps or corruption, and also for
  tracking down memory leaks.

- Incorporate some bug fixes provided by Joost Mulders for the DLPI
  package which should clear up problems people have been seeing on
  Solaris.

- Fix bugs in the handling of options stored as linked lists (agent
  options, fqdn options and nwip options) that could cause memory
  corruption and core dumps.

- Fix a bug in DHCPREQUEST handling that resulted in DHCPNAK messages
  not being send in some cases when they were needed.

- Make the lease structure somewhat more compact.

- Make initial failover startup *much* faster.   This was researched
  and implemented by Damien Neil.

- Add a --version flag to all executables, which prints the program
  name and version to standard output.

- Don't rewrite the lease file every thousand leases.

- A bug in nit.c for older SunOS machines was fixed by a patch sent in
  by Takeshi Hagiwara.

- Fix a memory corruption bug in the DHCP client.

- Lots of documentation updates.

- Add a feature allowing environment variables to be passed to the
  DHCP client script on the DHCP client command line.

- Fix client medium support, which had been broken for some time.

- Fix a bug in the DHCP client initial startup backoff interval, which
  would cause two DHCPDISCOVERS to be sent back-to-back on startup.


	        Changes since 3.0 Beta 2 Patchlevel 15

- Some documentation tweaks.

- Maybe fix a problem in the DLPI code.

- Fix some error code space inconsistencies in ddns update code.

- Support relay agents that intercept unicast DHCP messages to stuff
  agent options into them.

- Fix a small memory leak in the relay agent option support code.

- Fix a core dump that would occur if a packet was sent with no
  options.

	        Changes since 3.0 Beta 2 Patchlevel 14

- Finish fixing a long-standing bug in the agent options code.   This
  was causing core dumps and failing to operate correctly - in
  particular, agent option stashing wasn't working.   Agent option
  stashing should now be working, meaning that agent options can be
  used in class statements to control address allocation.

- Fix up documentation.

- Fix a couple of small memory leaks that would have added up
  significantly in a high-demand situation.

- Add a log-facility configuration parameter.

- Fix a compile error on some older operating systems.

- Add the ability in the client to execute certain statements before
  transmitting packets to the server.   Handy for debugging; not much
  practical use otherwise.

- Don't send faked-out giaddr when renewing or bound - again, useful
  for debugging.

	        Changes since 3.0 Beta 2 Patchlevel 13

- Fixed a problem where the fqdn decoder would sometimes try to store
  an option with an (unsigned) negative length, resulting in a core
  dump on some systems.

- Work around the Win98 DHCP client, which NUL-terminates the FQDN
  option.

- Work around Win98 and Win2k clients that will claim they want to do
  the update even when they don't have any way to do it.

- Fix some log messages that can be printed when failover is operating
  that were not printing enough information.

- It was possible for a DHCPDISCOVER to get an allocation even when
  the state machine said the server shouldn't be responding.

- Don't load balance DHCPREQUESTs from clients in RENEWING and
  REBINDING, since in RENEWING, if we heard it, it's for us, and in
  REBINDING, the client wouldn't have got to REBINDING if its primary
  were answering.

- When we get a bogus state lease binding state transition, don't do
  the transition.
  

	        Changes since 3.0 Beta 2 Patchlevel 12

- Fixed a couple of silly compile errors.

		Changes since 3.0 Beta 2 Patchlevel 11

- Albert Herranz tracked down and fixed a subtle bug in the base64
  decoder that would prevent any key with an 'x' in its base64
  representation from working correctly.

- Thanks to Chris Cheney and Michael Sanders, we have a fix for the
  hang that they both spotted in the DHCP server - when
  one-lease-per-client was set, the code to release the "other" lease
  could spin.

- Fix a problem with alignment of the input buffer in bpf in cases
  where two packets arrive in the same bpf read.

- Fix a problem where the relay agent would crash if you specified an
  interface name on the command line.

- Add the ability to conditionalize client behaviour based on the
  client state.

- Add support for the FQDN option, and added support for a new way of
  doing ddns updates (ddns update style interim) that allows more than
  one DHCP server to update the DNS for the same network(s).   This
  was implemented by Damien Neil with some additional functionality
  added by Ted Lemon.

- Damien added a "log" statement, so that the configuration file can
  be made to log debugging information and other information.

- Fixed a bug that caused option buffers not to be terminated with an
  end option.

- Fixed a long-standing bug in the support for option spaces where the
  options are stored as an ordered list rather than in a hash table,
  which could theoretically result in memory pool corruption.

- Prevent hardware declarations with no actual hardware address from
  being written as something unparsable, and behave correctly in the
  face of a null hardware address on input.

- Allow key names to be FQDNs, and qualify the algorithm name if it is
  specified unqualified.

- Modify the DDNS update code so that it never prints the "resolver
  failed" message, but instead says *why* the resolver failed.

- Officially support the subnet selection option, which now has an
  RFC.

- Fix a build bug on MacOS X.

- Allow administrator to disable ping checking.

- Clean up dhcpd.conf documentation and add more information about how
  it works.

		Changes since 3.0 Beta 2 Patchlevel 10

- Fix a bug introduced during debugging (!) and accidentally committed
  to CVS.

		Changes since 3.0 Beta 2 Patchlevel 9

- Fix DHCP client handling of vendor encapsulated options.

- Fix a bug in the handling of relay agent information options introduced
  in patchlevel 9.

- Stash agent options on client leases by default, and use the stashed
  options at renewal time.

- Add the ability to test the client's binding state in the client
  configuration language.

- Fix a core dump in the DNS update code.

- Fix some expression evaluation bugs that were causing updates to be
  done when no client hostname was received.

- Fix expression evaluation debugging printfs.

- Teach pretty_print_option to print options in option spaces other than
  the DHCP option space.

- Add a warning message if the RHS of a not is not boolean.

- Never select for more than a day, because some implementations of
  select will just fail if the timeout is too long (!).

- Fix a case where a DHCPDISCOVER from an unknown network would be
  silently dropped.

- Fix a bug where if a client requested an IP address for which a different
  client had the lease, the DHCP server would reallocate it anyway.

- Fix the DNS update code so that if the client changes its name, the DNS
  will be correctly updated.

		Changes since 3.0 Beta 2 Patchlevel 8

- Oops, there was another subtle math error in the header-length
  bounds-checking.

		Changes since 3.0 Beta 2 Patchlevel 7

- Oops, forgot to byte-swap udp header length before bounds-checking it.

		Changes since 3.0 Beta 2 Patchlevel 6

- Fix a possible DoS attack where a client could cause the checksummer
  to dump core.   This was a read, not a write, so it shouldn't be
  possible to exploit it any further than that.

- Implement client- and server-side support for using the Client FQDN
  option.

- Support for other option spaces in the client has been added.   This
  means that it is now possible to define a vendor option space on the
  client, request options in that space from the server (which must
  define the same option space), and then use those options in the
  client.   This also allows NWIP and Client FQDN options to be used
  meaningfully.

- Add object initializer support.   This means that objects can now be
  initialized to something other than all-zeros when allocated, which
  makes, e.g., the interface object support code a little more robust.

- Fix an off-by-one bug in the host stuffer.   This was causing host
  deletes not the work, and may also have been causing OMAPI
  connections to get dropped.   Thanks to James Brister for tracking
  this one down!

- Fixed a core dump in the interface discovery code that is triggered
  when there is no subnet declaration for an interface, but the server
  decides to continue running.   Thanks to Shane Kerr for tracking
  down and fixing this problem.

		Changes since 3.0 Beta 2 Patchlevel 5

- Fix a bug in the recent enhancement to the interface discovery code
  to support arbitrary-length interface lists.

- Support NUL-terminated DHCP options when initializing client-script
  environment.

- Fix suffix operator.

- Fix NetWare/IP option parsing.

- Better error/status checking in dhcpctl initialization and omapi
  connection code.

- Fix a potential memory smash in dhcpctl code.

- Fix SunOS4 and (maybe) Ultrix builds.

- Fix a bug where a certain sort of incoming packet could cause a core
  dump on Solaris (and probably elsewhere).

- Add some more safety checks in error logging code.

- Add support for ISC_R_INCOMPLETE in OMAPI protocol connection code.

- Fix relay agent so that if an interface is specified on the command
  line, the relay agent does not dump core.

- Fix class matching so that match if can be combined with match or
  spawn with.

- Do not allow spurious leases in the lease database to introduce
  potentially bogus leases into the in-memory database.

- Fix a byte-order problem in the client hardware address type code
  for OMAPI.

- Be slightly less picky about what sort of hardware addresses OMAPI
  can install in host declarations.

		Changes since 3.0 Beta 2 Patchlevel 4

- Incorporated Peter Marschall's proposed change to array/record
  parsing, which allows things like the slp-agent option to be encoded
  correctly.   Thanks very much to Peter for taking the initiative to
  do this, and for doing such a careful job of it (e.g., updating the
  comments)!

- Added an encoding for the slp-agent option.   :')

- Fixed SunOS 4 build.  Thanks to Robert Elz for responding to my
  request for help on this with patches!

- Incorporated a change that should fix a problem reported by Philippe
  Jumelle where when the network connection between two servers is
  lost, they never reconnect.

- Fix client script files other than that for NetBSD to actually use
  make_resolv_conf as documented in the manual page.

- Fix a bug in the packet handling code that could result in a core
  dump.

- Fix a bug in the bootp code where responses on the local net would
  be sent to the wrong MAC address.   Thanks to Jerry Schave for
  catching this one.

		Changes since 3.0 Beta 2 Patchlevel 3

- In the DHCP client, execute client statements prior to using the values
  of options, so that the client configuration can overried, e.g., the
  lease renewal time.

- Fix a reference counting error that would result in very reproducible
  failures in updates, as well as occasional core dumps, if a zone was
  declared without a key.

- Fix some Linux 2.0 compilation problems.

- Fix a bug in scope evaluation during execution of "on" statements that
  caused values not to be recorded on leases.

- If the dhcp-max-message-size option is specified in scope, and the
  client didn't send this option, use the one specified in scope to
  determine the maximum size of the response.

		Changes since 3.0 Beta 2 Patchlevel 2

- Fix a case where spawning subclasses were being allocated
  incorrectly, resulting in a core dump.

- Fix a case where the DHCP server might inappropriately NAK a
  RENEWING client.

- Fix a place dhcprequest() where static leases could leak.

- Include memory.h in omapip_p.h so that we don't get warnings about
  using memcmp().

		Changes since 3.0 Beta 2 Patchlevel 1

- Notice when SIOCFIGCONF returns more data than fit in the buffer -
  allocate a larger buffer, and retry.   Thanks to Greg Fausak for
  pointing this out.

- In the server, if no interfaces were configured, report an error and
  exit.

- Don't ever record a state of 'startup'.

- Don't try to evaluate the local failover binding address if none was
  specified.   Thanks to Joseph Breu for finding this.
