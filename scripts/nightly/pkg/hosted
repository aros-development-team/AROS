#!/bin/zsh
# Creates generic "hosted" binary packages.

source $SP/setup
# The log-name MUST match the name of the package script
setl   hosted-$BUILDTARGET.log

ARCHIVE_BASE=$ARCHIVE_BASE/Binaries

printi "Creating hosted binary packages..."

printi "Creating AROS/"$BUILDTARGET" system package..."
PACKAGE=$BASENAME-$BUILDTARGET-system
ARCHIVE=$ARCHIVE_BASE/$PACKAGE.tar.bz2

if [ -z ${BUILDTARGETDIR+x} ]; then BUILDTARGETDIR=$BUILDTARGET; fi

delete  $BUILD_BASE/AROS
copy    $SOURCE_AROS      $BUILD_BASE/AROS

CONFIGURE_OPTIONS="--target=$BUILDTARGET"
if [[ "$VARIANT" != ""  ]]; then
     CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS --enable-target-variant=$VARIANT"
fi
CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS $BUILDEXTRAOPTS $CONFIGUREEXTRA --enable-ccache"
if [[ ( "$AROSTOOLCHAININSTALLOPT" != "" ) && -e  $TOOLCHAIN_BASE/$BUILDCPU-aros-gcc ]]; then
     CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS $AROSTOOLCHAININSTALLOPT $AROSTOOLCHAINOPT"
fi
CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS --enable-build-type=nightly $PORTSSOURCESOPT"

cd      $BUILD_BASE/AROS
execute ./configure  ${=CONFIGURE_OPTIONS}
make    -j $MAKE_JOBS
make    -j $MAKE_JOBS default-x11keymaptable

cd      $BUILD_BASE/AROS/bin/$BUILDTARGETDIR
move    AROS $PACKAGE

copy    $SOURCE_AROS/LICENSE $PACKAGE
copy    $SOURCE_AROS/ACKNOWLEDGEMENTS $PACKAGE
delete	$PACKAGE/Include
delete	$PACKAGE/lib

archive $ARCHIVE $PACKAGE

if [ "$TESTEXE" != "" ]; then
    cd $PACKAGE
    copy $SP/autotest/* S/
    #Xvfb :1
    DISPLAY=:1 execute timeout $TESTTIMEOUT $TESTEXE $TESTARGS
    printfile "Test_Report.txt"

    if [ ! -f PASSED ]; then
        printe "Package $ARCHIVE failed runtime tests. REMOVING ARCHIVE!"
        delete $ARCHIVE
        exit 5
    fi
else
    printi "Skipping runtime tests."
fi

cd      $ROOT
delete  $BUILD_BASE/AROS
resetl
