#!/bin/zsh

START_TIME=$(date -u +"%H:%M") 

export SP=$(dirname $0)
export CFG_NAME=$1
source $SP/setup initial
source $SP/mail

printi "Starting nightly build on $CFG_NAME..."
# Update sources.
zsh $SP/update
if [ $? != 0 ]; then
    printe "Updating sources FAILED! ABORTING SCRIPT!"
    
    STOP_TIME=$(date -u +"%H:%M")
    
    mail_start "FAILED COMPLETELY"
    mail_write ""
    mail_write "Updating sources FAILED! Please see attached log."
    
    mail_send "-a$LOG_BASE/update.log"
    
    mail_stop
    
    exit 5
fi

# Build packages.
failed=()
succeeded=()
for package in $CFG_PACKAGES; do
    zsh $SP/pkg/$package
    if [ $? != 0 ]; then
        printe "Build of package '"$package"' FAILED."
        failed=( $failed $package )
    else
        printi "Build of package '"$package"' completed successfully."
        succeeded=( $succeeded $package )
    fi
done

# Cleanup.
setl cleanup.log
source $SP/cleanup
resetl

STOP_TIME=$(date -u +"%H:%M")

# Generate report.
if   [ -z $failed ]; then
    RESULT="completed successfully"
elif [ -z $succeeded ]; then
    RESULT="FAILED COMPLETELY"
else
    RESULT="FAILED PARTLY"
fi

mail_start $RESULT

ATTACH=""
if [ ! -z $failed ]; then
    mail_write ""
    mail_write "The following packages FAILED to build completely:"
    for package in $failed; do
        mail_write $package
	tail -100 $LOG_BASE/$package.log >/tmp/_aros_build_log_$package
	ATTACH="$ATTACH -a/tmp/_aros_build_log_$package"
    done
    mail_write ""
    mail_write "Please see the attached shortened logs or the full logs at"
    mail_write "http://aros.sf.net/download/nightly/logs/ for details."
fi
if [ ! -z $succeeded ]; then
    mail_write ""
    mail_write "The following packages were built successfully:"
    for package in $succeeded; do
        mail_write "$package"
    done
    mail_write ""
    mail_write "The following archives were created:"
    mail_write "$(ls -1 -I logs $ARCHIVE_BASE)"
fi

mail_send $ATTACH

if [ ! -z $failed ]; then
    rm -rf /tmp/_aros_build_log_*
fi
mail_stop

printi "Compressing log files..."
for file in $LOG_BASE/*.log; do
    bzip2 $file
done
